<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>经年</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://feahter.github.io/"/>
  <updated>2017-05-17T01:42:38.987Z</updated>
  <id>https://feahter.github.io/</id>
  
  <author>
    <name>Feahter</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>研究生算法设计大纲</title>
    <link href="https://feahter.github.io/2017/05/17/%E7%A0%94%E7%A9%B6%E7%94%9F%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E5%A4%A7%E7%BA%B2/"/>
    <id>https://feahter.github.io/2017/05/17/研究生算法设计大纲/</id>
    <published>2017-05-17T01:27:31.000Z</published>
    <updated>2017-05-17T01:42:38.987Z</updated>
    
    <content type="html"><![CDATA[<p><strong>College of Software Engineering</strong><br><strong>Undergraduate Course Syllabus</strong><br>Course ID 311036030 Course Name Data Structures &amp; Algorithm<br>Course<br>Attribute<br>□Compulsory □Selective Course Language □English █Chinese<br>Credit Hour 3 Period 48<br>Semester □First Fall □First Spring █Second Fall □Second Spring<br>□Third Fall □Third Spring □Fourth Fall □Fourth Spring<br>Instructors Li xiaohua，Zuo hang，Sun Jieping, Zhu Hong<br>Description<br>This course thoroughly covers key data structures at the undergraduate<br>level. With a focus on how to assess costs and benefits, it teaches students<br>how to create efficient data structures and algorithms and how to adopt<br>to new design challenges. Students are taught how to assess applications<br>needs to find data structures with matching capabilities.</p>
<p>Prerequisites C Language Programming<br>Discrete Mathematics</p>
<p>Textbook A Practical Introduction to Data Structures and Algorithm Analysis，Clifford A.<br>Shaffer，Prentice Hall 2001. Second Edition<br>Resource<br>①A.V.Aho,J.E.Hopcroft and J.D.Ullman,Data Structures and Algorithms,by Addison——Wesley<br>Publishing Company,Inc.,1983<br>② Cliford A. Shaffer，A Practical Introduction to Data Structures and Algorithm Analysis——<br>C++)，Publishing house of electronics industry.<br>Grading assignments, class participation (40%), final exam (60%)<br>Topics</p>
<ol>
<li>Data Structures and Algorithms. 1h<br>A Philosophy of Data Structures. Abstract Data Types and Data Structures. Problems, Algorithms,<br>and Programs.</li>
<li>Mathematical Preliminaries. 2h<br>2<br>ets and Relations. Miscellaneous Notation. Logarithms. Recursion. Summations and Recurrences.<br>Mathematical Proof Techniques. Estimating.</li>
<li>Algorithm Analysis. 2h<br>Introduction. Best, Worst, and Average Cases. A Faster Computer, or a Faster Algorithm?<br>Asymptotic Analysis. Calculating the Running Time of a Program. Analyzing Problems. Common<br>Misunderstandings. Multiple Parameters. Space Bounds. Some Practical Considerations.</li>
<li>Lists, Stacks, and Queues. 10h<br>Lists. The Dictionary ADT. Stacks. Queues.</li>
<li>Binary Trees. 6h<br>Definitions and Properties. Binary Tree Traversals. Binary Tree Node Implementations. Binary<br>Search Trees. Heaps and Priority Queues. Huffman Coding Trees.</li>
<li>Non-Binary Trees. 4h<br>General Tree Definitions and Terminology. The Parent Pointer Implementation. General Tree<br>Implementations. K -ary Trees. Sequential Tree Implementations.</li>
<li>Internal Sorting. 5h<br>Sorting Terminology and Notation. Three …Q(n2<br>) Sorting Algorithms. Shell sort. Quick sort.<br>Merge sort. Heap sort. Bin sort and Radix Sort. An Empirical Comparison of Sorting Algorithms.<br>Lower Bounds for Sorting.</li>
<li>File Processing and External Sorting. 2h<br>Primary versus Secondary Storage. Disk Drives. Buffers and Buffer Pools. The Programmer’s<br>View of Files. External Sorting. Simple Approaches to External Sorting. Replacement Selection.<br>Multi-way Merging.</li>
<li>Searching. 3h<br>Searching Sorted Arrays. Self-Organizing Lists. Searching in Sets. Hashing.</li>
<li>Indexing. 3h<br>Linear Indexing. ISAM. Tree Indexing. 2-3 Trees. B-Trees.</li>
<li>Graphs. 9h<br>Terminology and Representations. Graph Implementations. Graph Traversals. Shortest-Paths<br>Problems. Minimum-Cost Spanning Trees.<br>3<br>Total:<br>Lecture: 47 QA: 1<br>Tools &amp;<br>Environment<br>This course will require to use VC++ 6.0 software for programming<br>Projects<br>Project: City database Management System<br>Requirements:<br>1） Using BST or linked lis t to store the records；<br>2） Each node should contain the name of city and the coordination of city(denoted using x,y)；<br>3） Organize the node in database according to the name of city<br>4） Insert single or multiple nodes, delete or index node in accordance with name or coordination.<br>5） Print all records which have certain distance with a given city<br>6） Statistic the runtime of each operation<br>7) encourage adding in innovate functions<br>Development environment:<br>VC++ 6.0</li>
</ol>
<p>Version No： 1.0<br>Author： Xiaohua Li Date： 2008-7 -15<br>Auditor： Mei Hong Date： 2008-7-25<br>Signature of leader：<br>Date： 2008-7-30</p>
<h3 id="中文翻译："><a href="#中文翻译：" class="headerlink" title="中文翻译："></a>中文翻译：</h3><p><strong>软件工程学院</strong><br><strong>本科课程大纲</strong><br>课程编号311036030课程名称数据结构与算法<br>课程<br>属性<br>□强制□选修课程语言□英语█中文<br>信用时间3期48<br>学期□第一次秋季□第一次春季█第二次秋季□二春<br>□ 三季□第三弹□第四秋季□第四弹簧<br>导师李晓华，佐恒，孙吴阶平，朱虹<br>介绍<br>本课程涵盖彻底在本科关键数据结构<br>水平。重点关注如何评估成本和收益，它教会学生<br>如何创建高效的数据结构和算法，以及如何<br>应对新的设计挑战。</p>
<p>前提条件C语言编程<br>离散数学</p>
<p>教科书数据结构和算法分析的实践介绍，Clifford A.Shaffer<br>，Prentice Hall 2001.第二版<br>资源<br>①A.V.Aho，JEHopcroft和JDUllman，数据结构和算法，Addison - Wesley<br>Publishing Company，Inc.，1983<br>②Cliford A. Shaffer，数据结构与算法分析实践介绍 -<br>C ++）电子工业出版社。<br>分级任务，班级参与（40％），期末考试（60％）<br>专题</p>
<ol>
<li>数据结构和算法。1h<br>数据结构的哲学。抽象数据类型和数据结构。问题，算法<br>和程序。</li>
<li>数学初步 2h<br>2<br>ets和关系。杂项符号 对数。递归。总结和反复。<br>数学证明技术。估计。</li>
<li>算法分析。2h<br>简介 最佳，最差和平均的案例。更快的计算机，还是更快的算法？<br>渐近分析。计算程序的运行时间。分析问题 常见的<br>误解。多个参数。空间界限 一些实际注意事项</li>
<li>列表，堆栈和队列。10h<br>列表。词典ADT。堆栈。队列。</li>
<li>二叉树。6h<br>定义和属性。二叉树遍历。二叉树节点实现。二进制<br>搜索树。堆和优先队列。霍夫曼编码树。</li>
<li>非二叉树。4h<br>通用树定义和术语。父指针实现。一般树的<br>实现。Kary树。顺序树实现。</li>
<li>内部排序 5h<br>排序术语和符号。三… Q（n2<br>）排序算法。外壳排序。快速排序<br>合并排序 堆排序 Bin排序和基数排序。排序算法的实证比较。<br>下限排序。</li>
<li>文件处理和外部排序。2h<br>主要与次要存储。磁盘驱动器 缓冲池和缓冲池。程序员的<br>文件视图。外部排序。外部排序的简单方法。更换选择<br>多路合并</li>
<li>搜索。3h<br>搜索排序数组。自组织名单 搜索集合。散列。</li>
<li>索引。3h<br>线性索引。ISAM。树索引。2-3棵树。B-树。</li>
<li>图表。9h<br>术语和表示。图表实现。图形遍历。最短路径<br>问题。最小成本生成树。<br>3<br>总计：<br>讲座：47 QA：1<br>工具与<br>环境<br>本课程将需要使用VC ++ 6.0软件编程<br>项目<br>项目：城市数据库管理系统<br>要求：<br>1）使用BST或链接存储记录;<br>2）每个节点应包含城市的名称和城市的协调（用x，y表示）;<br>3）根据城市的名称组织数据库中的节点<br>4）根据名称或协调插入单个或多个节点，删除或索引节点。</li>
</ol>
<p>版本号：1.0<br>作者：李晓华<br>日期：2008-7-15<br>审计人<br>：梅红日期：2008-7-25 领导签名：日期：2008-7-30</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;College of Software Engineering&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;Undergraduate Course Syllabus&lt;/strong&gt;&lt;br&gt;Course ID 311036030 Course Name Dat
    
    </summary>
    
      <category term="学" scheme="https://feahter.github.io/categories/%E5%AD%A6/"/>
    
    
      <category term="考研" scheme="https://feahter.github.io/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="算法设计" scheme="https://feahter.github.io/tags/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>研究生计算机网络大纲</title>
    <link href="https://feahter.github.io/2017/05/17/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%A7%E7%BA%B2/"/>
    <id>https://feahter.github.io/2017/05/17/研究生计算机网络大纲/</id>
    <published>2017-05-17T01:27:19.000Z</published>
    <updated>2017-05-17T01:41:36.568Z</updated>
    
    <content type="html"><![CDATA[<p><strong>College of Software Engineering</strong><br><strong>Undergraduate Course Syllabus</strong><br>Course ID 311015040 Course Name Computer Networks<br>Course<br>Attribute<br>■Compulsory □Selective Course Language ■English □Chinese<br>Credit Hour 4 Period 80<br>Semester □First Fall □First Spring □Second Fall ■Second Spring<br>□Third Fall □Third Spring □Fourth Fall □Fourth Spring<br>Instructors YANG Pin, RUAN Shuhua, LIN Feng<br>Description<br>This course provides an introduction to fundamental concepts in the design and implementation of<br>computer communication networks, their protocols, and applications. Topics to be covered<br>include: overview of network architectures, applications, network programming interfaces (e.g.,<br>sockets), transport, congestion, routing, and data link protocols, addressing, local area networks,<br>wireless networks, network security, and network management. Examples will be drawn primarily<br>from the Internet (e.g., TCP, UDP, and IP) protocol suite.<br>Prerequisites<br>C Language Programming<br>Data Structures &amp; Algorithm<br>Operating System<br>Textbook Computer Networking: A Top Down Approach Featuring the Internet (3rd ed.), J.F. Kurose and<br>K.W. Ross, Addison-Wesley Longman.<br>Resource</p>
<ol>
<li>Computer Networks: A Systems Approach (4th Ed.), Larry L. Peterson and Bruce S. Davie,<br>China Machine Press, 2007</li>
<li>Computer Networks (4th ed.): Andrew S. Tanenbaum, Tsinghua University Press</li>
<li>TCP/IP Illustrated, Volume 1: The Protocols, W.Richard Stevens, China Machine Press, 2000</li>
<li>Unix Network Programming, Volume 1: Networking APIs: Sockets and XTI, W. Richard<br>Stevens, Tsinghua University Press, 1998</li>
<li>other related websites<br>Grading<br>Assignments (25%)<br>Projects(10%)<br>Lab.(15%)<br>Final exam (50%)<br>Topics<br>Part 1: Introduction (9H)<br>What is the Internet, What is a protocol?<br>The Network Edge, Core, and Access Networks<br>Physical Media<br>2<br>Delay and Loss in Packet-Switched Networks<br>Protocol Layers and Their Service Models<br>A Brief History of Computer Networking and the Internet<br>Part 2: The Application Layer (12H)<br>Principles of Application-Layer Protocols<br>The World Wide Web: HTTP<br>File Transfer: FTP<br>Electronic Mail in the Internet<br>The Internet’s Directory Service: DNS<br>Web Service (WSDL, SOAP, REST) (option)<br>Multimedia Applications (option)<br>Overlay Networks: Routing Overlay, P2P Networks, Content Distribution Networks<br>(option)<br>Socket Programming<br>PROGRAMMING ASSIGNMENT 1<br>Part 3: The Transport Layer (12H)<br> Transport-Layer Services and Principles<br> Multiplexing and Demultiplexing Applications<br> Connectionless Transport: UDP<br> Principles of Reliable of Data Transfer<br> TCP case study<br> PROGRAMMING ASSIGNMENT 2<br> Principles of Congestion Control<br> TCP Congestion Control<br>Part 4: The Network Layer (12H)<br> Introduction and Network Service Model<br> Routing Principles<br> Hierarchical Routing<br> IP: the Internet Protocol<br> Routing in the Internet<br> What is Inside a Router? (option)<br>Part 5: The Link Layer and Local Area Networks (9H)<br> The Data Link Layer: Introduction, Services<br> Error Detection and Correction<br> Multiple Access Protocols and LANs<br> LAN Addresses and ARP<br> Ethernet<br> PPP: the Point-to-Point Protocol<br> ATM (option)<br>Part 6: Wireless Networks (3H)<br> WiFi: IEEE 802.11<br> Handling Mobility<br> Case Study: GSM cellular networks, Mobile-IP<br>Part 7: Security in Computer Networks (option) (3H)<br> What is Network Security?<br> Attacks and Countermeasures<br>3<br> Principles of Cryptography<br> Authentication: Who are You?<br> Integrity<br> Key Distribution and Certification<br> Firewalls<br> Case Studies<br>Part 8: Network Management (option) (3H)<br> What is Network Management?<br> The Internet Network Management Framework<br> ASN.1<br>Tools &amp;<br>Environment<br>Ethereal<br>WINDOWS 2003 SERVER, LINUX<br>Projects<br>Lab: (12H)</li>
<li>Ethereal</li>
<li>Configurations of DHCP Server, FTP Server, DNS Server and WEB Server</li>
<li>Switches and Routers<br>Project: (8H)<br>SOCKET COMMUNICATIONS</li>
<li>Multi-thread Web Server</li>
<li>Mail Client</li>
<li>Chat Room</li>
</ol>
<p>Version No： 1.0<br>Author： Pin Yang Date： 2008-7 -15<br>Auditor： Mei Hong Date： 2008-7-25<br>Signature of leader：<br>Date： 2008-7-30</p>
<h3 id="中文翻译："><a href="#中文翻译：" class="headerlink" title="中文翻译："></a>中文翻译：</h3><p><strong>软件工程学院</strong><br><strong>本科课程大纲</strong><br>课程编号311015040课程名称计算机网络<br>课程<br>属性<br>■强制□选修课程语言■英文□中文授课<br>时间4期80<br>学期□第一次秋季□ 初春□二秋■二春<br>□三秋□第三春□第四届秋季□第四届春季<br>导师杨Pin<br>阮书华林凤简介<br>本课程介绍了<br>计算机通讯网络及其协议及应用的设计与实现中的基本概念。要涵盖的主题<br>包括：网络架构，应用程序，网络编程接口（例如，<br>套接字），传输，拥塞，路由，<br>数据链路协议，寻址，局域网， 无线网络，网络安全和网络管理。实例主要<br>来自互联网（例如TCP，UDP和IP）协议套件。<br>前提<br>条件C语言编程<br>数据结构与算法<br>操作系统<br>教材计算机网络：自上而下的方法，具有互联网（第3版），JF Kurose和<br>K.W. 罗斯，艾迪生威斯利龙曼。<br>资源 前提条件C语言编程数据结构与算法操作系统教材计算机网络：自上而下的方法，具有互联网（第3版），JF Kurose和K.W. 罗斯，艾迪生威斯利龙曼。资源 前提条件C语言编程数据结构与算法操作系统教材计算机网络：自上而下的方法，具有互联网（第3版），JF Kurose和K.W. 罗斯，艾迪生威斯利龙曼。资源</p>
<ol>
<li>计算机网络：系统方法（第4版），Larry L. Peterson和Bruce S. Davie，<br>中国机械出版社，2007</li>
<li>计算机网络（第4版）：Andrew S. Tanenbaum，清华大学出版社</li>
<li>TCP / IP Illustrated，Volume 1：The Protocols，W.Richard Stevens，China Machine Press，2000</li>
<li>Unix网络编程，第1卷：网络API：套接字和XTI，W. Richard<br>Stevens，清华大学出版社，1998</li>
<li>其他相关网站<br>评分<br>分配（25％）<br>项目（10％）<br>实验室（15％）<br>期末考试（50％）<br>主题<br>第1部分：简介（9H）<br>什么是互联网，什么是协议？<br>网络边缘，核心和接入网络<br>物理媒体<br>2<br>分组交换网络中的延迟和丢失<br>协议层及其服务模型<br>计算机网络和互联网<br>的简史第2部分：应用层（12H）<br>应用层协议原理<br>万维网：HTTP<br>文件传输：<br>互联网中<br>的FTP 电子邮件Internet的目录服务：DNS<br>Web服务（WSDL，SOAP，互联网中的互联网协议路由什么是路由器内部？（选项）第5部分：链路层和局域网（9H）数据链路层：简介，服务错误检测和纠正多路访问协议和LAN LAN地址和ARP 以太网PPP：点到点协议ATM ）第6部分：无线网络（3G ）WiFi：IEEE 802.11 处理移动性案例研究：GSM蜂窝网络，移动IP 第7部分：计算机网络中的安全（可选）（3H）什么是网络安全？攻击与对策3 加密认证原则：你是谁？完整性密钥分发和认证防火墙案例研究第8部分：网络管理（可选）（3H）什么是网络管理？互联网管理框架ASN.1 工具与环境Ethereal WINDOWS 2003 SERVER，LINUX 项目实验室：（12H）</li>
<li>空灵</li>
<li>DHCP服务器，FTP服务器，DNS服务器和WEB服务器的配置</li>
<li>开关和路由器<br>项目：（8H）<br>插座通信</li>
<li>多线程Web服务器</li>
<li>邮件客户端</li>
<li>聊天室</li>
</ol>
<p>版本号：1.0<br>作者：Pin Yang<br>日期：2008-7-15审核员：梅红日期：2008-7-25<br>领导签名：<br>日期：2008-7-30</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;College of Software Engineering&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;Undergraduate Course Syllabus&lt;/strong&gt;&lt;br&gt;Course ID 311015040 Course Name Com
    
    </summary>
    
      <category term="学" scheme="https://feahter.github.io/categories/%E5%AD%A6/"/>
    
    
      <category term="考研" scheme="https://feahter.github.io/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="计算机网络" scheme="https://feahter.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>研究生操作系统大纲</title>
    <link href="https://feahter.github.io/2017/05/17/%E7%A0%94%E7%A9%B6%E7%94%9F%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%A4%A7%E7%BA%B2/"/>
    <id>https://feahter.github.io/2017/05/17/研究生操作系统大纲/</id>
    <published>2017-05-17T01:27:01.000Z</published>
    <updated>2017-05-17T01:47:43.603Z</updated>
    
    <content type="html"><![CDATA[<p><strong>College of Software Engineering</strong><br><strong>Undergraduate Course Syllabus</strong><br>Course ID 311006040 Course Name Operating System<br>Course<br>Attribute<br>■Compulsory □Selective Course Language ■English ■Chinese<br>Credit Hour 4 Period 64<br>Semester □First Fall □First Spring □Second Fall ■Second Spring<br>□Third Fall □Third Spring □Fourth Fall □Fourth Spring<br>Instructors Zhao Kui, Liang Gang, Hu Xiao-qin<br>Description<br>This course covers the fundamentals of Operating Systems and Systems<br>Programming, revealing the mysteries of the software layer between application<br>programs and hardware, and covering techniques and algorithms for dealing with<br>thorny problems of resource management, sharing, and protection, as well as<br>concurrency and complex systems. Perhaps best of all, four programming projects<br>give students the chance to implement important and realistic subsystems of a small<br>operating system kernel.<br>Between the lectures, reading, and programming assignments, we hope that the course<br>will help students become not only an OS expert and/or kernel hacker, but also a<br>better programmer and user of computer systems, and a better computer scientist who<br>has insight into managing complex and concurrent interactions within and between<br>hardware and software systems!<br>Prerequisites<br>C Language Programming<br>Computer Architecture<br>Data Structures and Algorithms</p>
<p>Textbook William Stallings, Operating Systems Internals and Design Principles (Fifth Edition),Publish<br>House of Electronics Industry,2007<br>2<br>Resource<br>• Course Webpage: cs.scu.edu.cn/~zhaokui<br>All vital information will appear on the course webpage, including lecture<br>notes and programming assignments.<br>• Mailing list: zhaokui@cs.scu.edu.cn<br> lianggang@cs.scu.edu.cn<br> huxiaoqin@cs.scu.edu.cn<br>The staff email is where you should send questions regarding course<br>administration and any questions which would be inappropriate if posted<br>publicly to the newsgroup (i.e. questions that contain your code or other<br>private information).<br>• Reference:</p>
<ol>
<li>Computing Operating System tangziyin, Xian University of Electronic Science and<br>Technology Press 出版社, 2004,Edition 3.</li>
<li>Operating System：Design and Implementation，Andrew S.Tanenbaum,Pulishing<br>House of Electronics Industry，1998，Edition 2.</li>
<li>Operating System，Harvey M.Deitel, Tsingha University Press，2007，Edition 3.</li>
<li>Operating System Concepts ， James L.Peterson ， Addison-Wesley Publishing<br>Company，2001,Edition 6.</li>
<li>Operating Systems Concepts, Abraham Silberschatz, Peter Galvin, and Greg Gagne,<br>John Wiley and Sons, Higher Education Press, 2002，Edition 6.</li>
<li>Operationg System—Excise and Analyze ，ZengPing，Tsingha University Press，<br>2001，Edition 1</li>
<li>Williamstallings.com/os/os5e.html</li>
<li>Comp.os.research</li>
<li>comp.os.misc</li>
<li>comp.unix.internals</li>
<li>comp.os.linux.development.system</li>
<li><a href="http://ocw.zju.edu.cn/OcwWeb/index.jsp" target="_blank" rel="external">http://ocw.zju.edu.cn/OcwWeb/index.jsp</a><br>Grading</li>
</ol>
<p>Class participation and homework (30%), final exam (50%), course practice(20)</p>
<p>3<br>Topics<br>(48 credit<br>hours)<br>The lecture of this course will cover the following topics:</p>
<ol>
<li>Computer System Overview (1 credit hours)<br>º .Overview of computer architecture and organization;<br>º Computer-System Operation;<br>º Interrupts;<br>º The memory of hierarchy;<br>º I/O communication techniques</li>
<li>Operating System Overview (3 credit hours)<br>º History of operating system;<br>º Operating system concepts, objective and function;<br>º Introduction of the type of Operating system including multiprogramming system,<br>Real-Time System, Batch system, Time-sharing system, Distributed operating system,<br>Network operating system<br>º Overview of the modern operating system structure;</li>
<li>Process Description and Control (5 credit hours)<br>º The concepts of process including states and its transitions, PCB;<br>º The operations on processes and process states;<br>º Introduction of process control;</li>
<li>Threads, SM and Microkernels ( 5 credit hours )<br>º Thread definition, creation, manipulation, User and Kernel Thread.;<br>º The concept of SMP and the management of SMP;<br>º Microlekernels definition, objective;</li>
<li>Concurrency ( 9 credit hours )<br>º The conceptions of concurrency and the implication of execution of multiple<br>concurrent process;<br>º The hardware mechanisms that support mutual exclusion;<br>º Three operating system and programming language mechanisms used to provide<br>concurrency;<br>º Introduction two problems of concurrency: deadlock and starvation and solutions of<br>these two problems.</li>
<li>Memory ( 9 credit hours )<br>º Memory organization and management;<br>4<br>º Paging and segmentation, address mapping;<br>º Virtual memory concepts;<br>º Virtual memory management, page replacement algorithms.</li>
<li>Scheduling (9 credit hours )<br>º Basic Concepts (including Long-term scheduling, Medium-term scheduling,<br>Short-term scheduling.);<br>º Scheduling algorithms(including First-Come-First-Served (FCFS), Priority,<br>Round-Robin );<br>º Multiprocessor scheduling;<br>º Real-Time Scheduling;</li>
<li>Input/Output Device ( 4 credit hours )<br>º The concepts relation to I/O devices and the classification of the I/O devices;<br>º The task and function of the I/O device management;<br>º The data structure and algorithms relation to I/O device management;<br>º The virtual device techniques;</li>
<li>File Management ( 3 credit hours )<br>º File Concept, Access Methods, Directory Structure, File Sharing and Protection<br>º File-System Structure, File-System Implementation, Directory Implementation,<br>Allocation Methods, Free-Space Management.<br>Tools &amp;<br>Environment<br>Windows XP, Redhat linux 9.0, Vmware virtual machine, gcc, g++<br>Projects<br>( 16 credit<br>hours )<br>Lab 1: Develop a shell in Nachos<br>Requirement:<br>º Design a simples command line shell that has following properties:</li>
<li>The shell must support the following internal commands: cd , dir, clr,environ,<br>echo ,help ,pause and quit;</li>
<li>All other command line input is interpreted as program invocation which should<br>be done by the shell forking and executing the programs as its own child<br>processes;</li>
<li>The shell must be able to take its command line input from a file;<br>5</li>
<li>The shell must support i/o redirection on either or both stdin and/or stdout;</li>
<li>The shell must support background execution of programs.</li>
<li>The command line prompt must contain the pathname of the current directory.<br>º Write a simple manual describing how to use the shell. The manual should contain<br>enough detail for a beginner to linux to use it;<br>º The source code must be extensively commented and appropriately structured to<br>allow your peers to understand and easily maintain the code;<br>º Details of submission procedures will be supplied well before the deadlines;<br>º The submission should contain only source code files, include files, a makefile and<br>the readme file.<br>Lab 2: Upgrade the Nachos thread management model<br>Requirement:<br>Modify the source code of the Nachos to achieve the following objectives:<br>º Expand thread data structure and add the “user ID, thread ID” two members of the<br>data structure of Nachos. Meanwhile, add the safeguard mechanism of these two data<br>members in the Nachos existing thread management model;<br>º Expand the existing state of threads. There are only “new”, “ready”, “block” and<br>“running” four states in Nachos. Please add “suspending” state in Nachos. The<br>so-called “hang up” refers to the current thread disk image stored in documents rather<br>than memory. “Suspend” state is the important foundation of the future realization of<br>virtual memory management.<br>º Modify thread scheduling algorithm. Change the thread management mechanism to<br>the “preemptive.” You can add “timing” and “priority scheduling,” “Multi-Queue”<br>different algorithm into Nachos thread management model.<br>º Add the global thread management mechanism and expand the existing operations<br>command in Nachos. For example, you can add a command called “ThreadView” in<br>order to show the current existence of all the threads of information, including the<br>“user ID”, “Thread ID”, “Current status” on the screen.<br>º Design a mutual exclusion and synchronization example. After the above<br>modifications, you can design a program to implement one mutual exclusion and<br>synchronization classic solution. For example, you can choose “philosopher dining”<br>problem and create five philosopher threads which have same user ID and follow the<br>“signal of” mechanisms to correct the operation in your program. You can also choose<br>“producers - consumers”, “Sleep Barber of Seville” and other classic IPC problems to<br>6<br>finish this task.<br>Lab 3: Upgrade the Nachos File management model<br>Requirement:<br>Modify the source code of the Nachos to achieve the following objectives:<br>º Add longer document name support and the following described information in<br>Nachos kernel.<br>File Types<br>Create time<br>Document the last visit time<br>File trails<br>º Achieve dynamic content distribution according to the file size. Now，Nachos allocate<br>the space according to the designated size of when creating a file and if we want to<br>amend file, we are limited to allocated space. So, modify the kernel to satisfy the<br>dynamic distribution.<br>º Modify the file index means in Nachos to achieve unlimited length of documents. You<br>can refer to the file index mechanism of Unix to achieve this requirement.<br>º Modify the directory structure to implement multi-level directory which there is no<br>restriction on the number of the files.<br>º Achieve synchronous operation of the file system. Directory files, bitmap files are all<br>critical resources and they do not allow multiple processes at the same time visit. The<br>current system did not impose synchronous control, so, modify this defect.<br>Lab 4: Upgrade the Nachos Memory management model<br>Requirement:<br>Modify the source code of the Nachos to achieve the following objectives:<br>º Add the data structure to describe the process of memory and the corresponding<br>relations. That is, add the “process ID” member in memory describing structure and it<br>can make understand the distribution of memory easily and facilitate to measure the<br>performance of memory management.<br>º Achieve the multi-programming, which there are multiple programs co-exist in<br>memory.<br>º Modify the Nachos to support virtual memory. Nachos only support the process<br>which it’s size is not more than the size of the memory. If the size of process is more<br>7<br>than the size of the memory, it will not be execute. So, amend this defect to support<br>big size process.<br>º Implementation monitoring thread and it can real-time reflect the use of memory.</li>
</ol>
<p>Version No： 1.0<br>Author： Kui Zhao Date： 2008-7 -15<br>Auditor： Mei Hong Date： 2008-7-25<br>Signature of leader：<br>Date： 2008-7-30</p>
<h3 id="中文翻译："><a href="#中文翻译：" class="headerlink" title="中文翻译："></a>中文翻译：</h3><p>软件工程学院<br>本科课程大纲<br>课程ID 311006040课程名称操作系统<br>课程<br>属性<br>■强制□选修课程语言■英文■中文<br>信用小时4期64<br>学期□第一次秋季□初春□二秋■二春<br>□三秋□第三泉□第四秋□第四春<br>导师赵奎梁良胡晓琴<br>描述<br>本课程涵盖了操作系统和系统的基础知识<br>编程，揭示应用程序之间软件层的奥秘<br>程序和硬件，并涵盖处理的技术和算法<br>资源管理，共享和保护的棘手问题，以及<br>并发和复杂系统。也许最重要的是四个编程项目<br>让学生有机会实现一个小型的重要和现实的子系统<br>操作系统内核。<br>在讲座，阅读和编​​程任务之间，我们希望这个课程<br>将帮助学生成为不仅仅是操作系统专家和/或内核黑客，而且也是一个<br>更好的程序员和计算机系统用户，以及更好的计算机科学家<br>有洞察力来管理内部和内部的复杂和并发交互<br>硬件和软件系统！<br>先决条件<br>C语言编程<br>计算机体系结构<br>数据结构和算法</p>
<p>教材William Stallings，操作系统内部和设计原则（第五版），发布<br>电子工业之家，2007年<br>2<br>资源<br>•课程网页：cs.scu.edu.cn/~zhaokui<br>所有重要信息将显示在课程网页上，包括讲座<br>笔记和编程作业。<br>•邮寄名单：zhaokui@cs.scu.edu.cn<br>lianggang@cs.scu.edu.cn<br>huxiaoqin@cs.scu.edu.cn<br>工作人员电子邮件是您应该在哪里发送有关课程的问题<br>管理和任何不适当的问题，如果发布<br>公开给新闻组（即包含你的代码或其他的问题）<br>私人信息）。<br>•参考：</p>
<p>西安电子科技大学计算机操作系统tangziyin<br>技术出版社出版社，2004，第3版。<br>操作系统：设计和实现，Andrew S.Tanenbaum，Pulishing<br>电子工业之家，1998年版，第2版。<br>操作系统，Harvey M.Deitel，青海大学出版社，2007年3版。<br>操作系统概念，James L.Peterson，Addison-Wesley Publishing<br>公司，2001年，第6版。<br>操作系统概念，Abraham Silberschatz，Peter Galvin和Greg Gagne，<br>John Wiley and Sons，Higher Education Press，2002，Edition 6。<br>清华大学出版社，曾平，<br>2001，第1版</p>
<p>教材William Stallings，操作系统内部和设计原理（第五版），<br>2007年电子工业出版社<br>2<br>资源<br>•课程网页：cs.scu.edu.cn/~zhaokui<br>所有重要信息将显示在课程网页上，包括讲座<br>笔记和编程作业。<br>•邮寄名单：zhaokui@cs.scu.edu.cn<br>lianggang@cs.scu.edu.cn<br>huxiaoqin@cs.scu.edu.cn<br>工作人员电子邮件是您应该在哪里发送有关课程<br>管理的问题和任何不恰当的问题如果<br>公开发布到新闻组（即包含您的代码或其他<br>私人信息的问题）。<br>•参考：</p>
<ol>
<li>西安电子科技大学计算机<br>操作系统tangziyin出版社，2004，第3版。</li>
<li>操作系统：设计与实现，Andrew S.Tanenbaum，<br>电子工业制造所，1998年版，第2版。</li>
<li>操作系统，Harvey M.Deitel，青海大学出版社，2007年3版。</li>
<li>操作系统概念，James L.Peterson，Addison-Wesley Publishing<br>Company，2001，第6版。</li>
<li>操作系统概念，Abraham Silberschatz，Peter Galvin和Greg Gagne，<br>John Wiley and Sons，Higher Education Press，2002，Edition 6。</li>
<li>青岛大学出版社，<br>2001版，第1版</li>
<li>Williamstallings.com/os/os5e.html</li>
<li>Comp.os.research</li>
<li>comp.os.misc</li>
<li>comp.unix.internals</li>
<li>comp.os.linux.development.system</li>
<li><a href="http://ocw.zju.edu.cn/OcwWeb/index.jsp" target="_blank" rel="external">http://ocw.zju.edu.cn/OcwWeb/index.jsp</a><br>评分</li>
</ol>
<p>班级参与和作业（30％），期末考试（50％），课程实践（20）</p>
<p>3<br>课程<br>（48学分<br>）<br>本课程的讲座将涵盖以下主题：</p>
<ol>
<li>计算机系统概述（1学时）<br>º。计算机体系结构和组织概况;<br>º计算机系统操作;<br>º中断;<br>º层次记忆;<br>ºI / O通信技术</li>
<li>操作系统概述（3学分）<br>º操作系统历史;<br>º操作系统概念，目标和功能;<br>º介绍操作系统类型，包括多编程系统，<br>实时系统，批处理系统，分时系统，分布式操作系统，<br>网络操作系统<br>º现代操作系统结构概述;</li>
<li>过程描述和控制（5学分）<br>º过程概念包括状态及其过渡，PCB;<br>º对过程和过程状态的操作;<br>º过程控制介绍;</li>
<li>线程，SM和微内核（5学分）<br>º线程定义，创建，操作，用户和内核线程;<br>ºSMP的概念和SMP的管理;<br>ºMicrolekernels定义，客观;</li>
<li>并发（9个小时）<br>º并发的概念和多个<br>并发进程的执行的含义;<br>º支持互斥的硬件机制;<br>º用于提供<br>并发的三种操作系统和编程语言机制;<br>º引入并发的两个问题：死锁和饥饿以及<br>这两个问题的解决方案。</li>
<li>记忆（9个小时）<br>º记忆组织与管理;<br>4<br>º寻呼和分割，地址映射;<br>º虚拟内存概念;<br>º虚拟内存管理，页面替换算法。</li>
<li>计划（9个小时）<br>º基本概念（包括长期调度，中期调度，<br>短期调度）。<br>º调度算法（包括先到先得（FCFS），优先级，<br>循环）;<br>º多处理器调度;<br>º实时调度;</li>
<li>输入/输出设备（4个小时）<br>º与I / O设备的概念关系和I / O设备的分类;<br>ºI / O设备管理的任务和功能;<br>º数据结构和算法与I / O设备管理的关系;<br>º虚拟设备技术;</li>
<li>文件管理（3个小时）<br>º文件概念，访问方法，目录结构，文件共享和保护<br>º文件系统结构，文件系统实现，目录实现，<br>分配方法，自由空间管理。<br>工具和<br>环境<br>Windows XP，Redhat linux 9.0，Vmware虚拟机，gcc，g ++<br>项目<br>（16学分<br>）<br>实验1：在<br>玉米片中开发shell 要求：<br>º设计具有以下属性的simples命令行shell：</li>
<li>shell必须支持以下内部命令：cd，dir，clr，environ，<br>echo，help，pause and quit;</li>
<li>所有其他命令行输入被解释为程序调用，应该<br>由shell执行程序调用并执行程序作为其自己的子<br>进程;</li>
<li>shell必须能够从文件中获取其命令行输入;<br>五</li>
<li>shell必须在stdin和/或stdout两者之一上支持i / o重定向;</li>
<li>shell必须支持程序的后台执行。</li>
<li>命令行提示必须包含当前目录的路径名。<br>º写一个简单的手册来描述如何使用shell。手册应该包含<br>足够的细节，让初学者使用linux来使用它;<br>º源代码必须进行广泛的评论和适当的结构，以<br>允许对等体了解并轻松维护代码;<br>º提交程序详情将在截止日期前提供;<br>º提交内容只能包含源代码文件，包含文件，makefile和<br>自述文件。<br>实验2：升级Nachos线程管理模型<br>要求：<br>修改Nachos的源代码，实现以下目标：<br>º扩展线程数据结构，并添加“用户ID”<br>线程ID“两个成员的数据结构的玉米片。同时，将这两个数据<br>成员的保护机制加入到现有的线程管理模型中;<br>º展开线程的现有状态。<br>玉米片中只有“新”，“准备好”，“封锁”和“跑”了四个州。请在玉米片中添加“暂停”状态。在<br>所谓的“挂机”是指存储在文档中，而当前线程的磁盘映像<br>比内存。“暂停”状态是未来<br>虚拟内存管理实现的重要基础。<br>º修改线程调度算法。将线程管理机制更改为<br>“抢先”。您可以<br>在Nachos线程管理模型中添加“定时”和“优先级调度”，“多队列” 等不同算法。<br>º添加全局线程管理机制，并<br>在Nachos中展开现有操作命令。例如，您可以添加一个名为“ThreadView”的<br>命令，以显示当前存在的所有线程的信息，包括屏幕上的<br>“用户ID”，“线程ID”，“当前状态”。<br>º设计互斥和同步示例。经过上述<br>修改，您可以设计一个程序来实现一个互斥和<br>同步的经典解决方案。例如，您可以选择“哲学家餐饮”<br>问题，并创建具有相同用户ID的五位哲学家线索，并遵循<br>“机制信号”来纠正程序中的操作。您也可以选择<br>“生产者 - 消费者”，<br>“塞维利亚睡眠理发师”等经典IPC问题6<br>完成此任务。<br>实验3：升级Nachos文件管理模型<br>要求：<br>修改Nachos的源代码以实现以下目标：<br>º在<br>Nachos内核中添加更多文档名称支持和以下描述的信息。<br>文件类型<br>创建时间<br>记录上次访问时间<br>文件路径<br>º根据文件大小实现动态内容分发。现在，Nachos根据<br>创建文件的指定大小分配空间，如果我们要<br>修改文件，我们仅限于分配的空间。所以，修改内核以满足<br>动态分布。<br>º修改Nachos中的文件索引，以实现无限长的文档。您<br>可以参考Unix的文件索引机制来实现这一要求。<br>º修改目录结构以实现多级目录，<br>对文件数量没有限制。<br>º实现文件系统的同步操作。目录文件，位图文件都是<br>关键资源，它们不允许多个进程同时访问。在<br>现行制度没有实行同步控制，因此，修改此缺陷。<br>实验4：升级Nachos内存管理模型<br>要求：<br>修改Nachos的源代码，实现以下目标：<br>º添加数据结构来描述内存的过程和相应的<br>关系。也就是说，将“进程ID”成员添加到内存描述结构中，<br>可以轻松<br>了解内存分配，便于测量内存管理的性能。<br>º实现多编程，<br>内存中共存有多个程序。<br>º修改Nachos以支持虚拟内存。玉米片只支持其<br>大小不超过内存大小的进程。如果进程的大小比内存的大小多<br>7<br>，那么它将不会执行。所以，修改这个缺陷来支持<br>大尺寸的过程。<br>º执行监控线程，可以实时反映内存的使用情况。</li>
</ol>
<p>版本号：1.0<br>作者：<br>崔<br>钊日期：2008-7-15 审计人<br>：梅红日期：2008-7-25 领导签名：日期：2008-7-30</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;College of Software Engineering&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;Undergraduate Course Syllabus&lt;/strong&gt;&lt;br&gt;Course ID 311006040 Course Name Ope
    
    </summary>
    
      <category term="学" scheme="https://feahter.github.io/categories/%E5%AD%A6/"/>
    
    
      <category term="操作系统" scheme="https://feahter.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="考研" scheme="https://feahter.github.io/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>研究生数据结构大纲</title>
    <link href="https://feahter.github.io/2017/05/17/%E7%A0%94%E7%A9%B6%E7%94%9F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%A7%E7%BA%B2/"/>
    <id>https://feahter.github.io/2017/05/17/研究生数据结构大纲/</id>
    <published>2017-05-17T01:26:37.000Z</published>
    <updated>2017-05-17T01:36:34.196Z</updated>
    
    <content type="html"><![CDATA[<p><strong>College of Software Engineering</strong><br><strong>Undergraduate Course Syllabus</strong><br>Course ID 311036030 Course Name Data Structures &amp; Algorithm<br>Course<br>Attribute<br>□Compulsory □Selective Course Language □English █Chinese<br>Credit Hour 3 Period 48<br>Semester □First Fall □First Spring █Second Fall □Second Spring<br>□Third Fall □Third Spring □Fourth Fall □Fourth Spring<br>Instructors Li xiaohua，Zuo hang，Sun Jieping, Zhu Hong<br>Description<br>This course thoroughly covers key data structures at the undergraduate<br>level. With a focus on how to assess costs and benefits, it teaches students<br>how to create efficient data structures and algorithms and how to adopt<br>to new design challenges. Students are taught how to assess applications<br>needs to find data structures with matching capabilities.</p>
<p>Prerequisites C Language Programming<br>Discrete Mathematics</p>
<p>Textbook A Practical Introduction to Data Structures and Algorithm Analysis，Clifford A.<br>Shaffer，Prentice Hall 2001. Second Edition<br>Resource<br>①A.V.Aho,J.E.Hopcroft and J.D.Ullman,Data Structures and Algorithms,by Addison——Wesley<br>Publishing Company,Inc.,1983<br>② Cliford A. Shaffer，A Practical Introduction to Data Structures and Algorithm Analysis——<br>C++)，Publishing house of electronics industry.<br>Grading assignments, class participation (40%), final exam (60%)<br>Topics</p>
<ol>
<li>Data Structures and Algorithms. 1h<br>A Philosophy of Data Structures. Abstract Data Types and Data Structures. Problems, Algorithms,<br>and Programs.</li>
<li>Mathematical Preliminaries. 2h<br>2<br>ets and Relations. Miscellaneous Notation. Logarithms. Recursion. Summations and Recurrences.<br>Mathematical Proof Techniques. Estimating.</li>
<li>Algorithm Analysis. 2h<br>Introduction. Best, Worst, and Average Cases. A Faster Computer, or a Faster Algorithm?<br>Asymptotic Analysis. Calculating the Running Time of a Program. Analyzing Problems. Common<br>Misunderstandings. Multiple Parameters. Space Bounds. Some Practical Considerations.</li>
<li>Lists, Stacks, and Queues. 10h<br>Lists. The Dictionary ADT. Stacks. Queues.</li>
<li>Binary Trees. 6h<br>Definitions and Properties. Binary Tree Traversals. Binary Tree Node Implementations. Binary<br>Search Trees. Heaps and Priority Queues. Huffman Coding Trees.</li>
<li>Non-Binary Trees. 4h<br>General Tree Definitions and Terminology. The Parent Pointer Implementation. General Tree<br>Implementations. K -ary Trees. Sequential Tree Implementations.</li>
<li>Internal Sorting. 5h<br>Sorting Terminology and Notation. Three …Q(n2<br>) Sorting Algorithms. Shell sort. Quick sort.<br>Merge sort. Heap sort. Bin sort and Radix Sort. An Empirical Comparison of Sorting Algorithms.<br>Lower Bounds for Sorting.</li>
<li>File Processing and External Sorting. 2h<br>Primary versus Secondary Storage. Disk Drives. Buffers and Buffer Pools. The Programmer’s<br>View of Files. External Sorting. Simple Approaches to External Sorting. Replacement Selection.<br>Multi-way Merging.</li>
<li>Searching. 3h<br>Searching Sorted Arrays. Self-Organizing Lists. Searching in Sets. Hashing.</li>
<li>Indexing. 3h<br>Linear Indexing. ISAM. Tree Indexing. 2-3 Trees. B-Trees.</li>
<li>Graphs. 9h<br>Terminology and Representations. Graph Implementations. Graph Traversals. Shortest-Paths<br>Problems. Minimum-Cost Spanning Trees.<br>3<br>Total:<br>Lecture: 47 QA: 1<br>Tools &amp;<br>Environment<br>This course will require to use VC++ 6.0 software for programming<br>Projects<br>Project: City database Management System<br>Requirements:<br>1） Using BST or linked lis t to store the records；<br>2） Each node should contain the name of city and the coordination of city(denoted using x,y)；<br>3） Organize the node in database according to the name of city<br>4） Insert single or multiple nodes, delete or index node in accordance with name or coordination.<br>5） Print all records which have certain distance with a given city<br>6） Statistic the runtime of each operation<br>7) encourage adding in innovate functions<br>Development environment:<br>VC++ 6.0</li>
</ol>
<p>Version No： 1.0<br>Author： Xiaohua Li Date： 2008-7 -15<br>Auditor： Mei Hong Date： 2008-7-25<br>Signature of leader：<br>Date： 2008-7-30</p>
<h3 id="中文翻译："><a href="#中文翻译：" class="headerlink" title="中文翻译："></a>中文翻译：</h3><p><strong>软件工程学院</strong><br><strong>本科课程大纲</strong><br>课程编号311036030课程名称数据结构与算法<br>课程<br>属性<br>□强制□选修课程语言□英语█中文<br>信用时间3期48<br>学期□第一次秋季□第一次春季█第二次秋季□二春<br>□ 三季□第三弹□第四秋季□第四弹簧<br>导师李晓华，佐恒，孙吴阶平，朱虹<br>介绍<br>本课程涵盖彻底在本科关键数据结构<br>水平。重点关注如何评估成本和收益，它教会学生<br>如何创建高效的数据结构和算法，以及如何<br>应对新的设计挑战。</p>
<p>前提条件C语言编程<br>离散数学</p>
<p>教科书数据结构和算法分析的实践介绍，Clifford A.Shaffer<br>，Prentice Hall 2001.第二版<br>资源<br>①A.V.Aho，JEHopcroft和JDUllman，数据结构和算法，Addison - Wesley<br>Publishing Company，Inc.，1983<br>②Cliford A. Shaffer，数据结构与算法分析实践介绍 -<br>C ++）电子工业出版社。<br>分级任务，班级参与（40％），期末考试（60％）<br>专题</p>
<ol>
<li>数据结构和算法。1h<br>数据结构的哲学。抽象数据类型和数据结构。问题，算法<br>和程序。</li>
<li>数学初步 2h<br>2<br>ets和关系。杂项符号 对数。递归。总结和反复。<br>数学证明技术。估计。</li>
<li>算法分析。2h<br>简介 最佳，最差和平均的案例。更快的计算机，还是更快的算法？<br>渐近分析。计算程序的运行时间。分析问题 常见的<br>误解。多个参数。空间界限 一些实际注意事项</li>
<li>列表，堆栈和队列。10h<br>列表。词典ADT。堆栈。队列。</li>
<li>二叉树。6h<br>定义和属性。二叉树遍历。二叉树节点实现。二进制<br>搜索树。堆和优先队列。霍夫曼编码树。</li>
<li>非二叉树。4h<br>通用树定义和术语。父指针实现。一般树的<br>实现。Kary树。顺序树实现。</li>
<li>内部排序 5h<br>排序术语和符号。三… Q（n2<br>）排序算法。外壳排序。快速排序<br>合并排序 堆排序 Bin排序和基数排序。排序算法的实证比较。<br>下限排序。</li>
<li>文件处理和外部排序。2h<br>主要与次要存储。磁盘驱动器 缓冲池和缓冲池。程序员的<br>文件视图。外部排序。外部排序的简单方法。更换选择<br>多路合并</li>
<li>搜索。3h<br>搜索排序数组。自组织名单 搜索集合。散列。</li>
<li>索引。3h<br>线性索引。ISAM。树索引。2-3棵树。B-树。</li>
<li>图表。9h<br>术语和表示。图表实现。图形遍历。最短路径<br>问题。最小成本生成树。<br>3<br>总计：<br>讲座：47 QA：1<br>工具与<br>环境<br>本课程将需要使用VC ++ 6.0软件编程<br>项目<br>项目：城市数据库管理系统<br>要求：<br>1）使用BST或链接存储记录;<br>2）每个节点应包含城市的名称和城市的协调（用x，y表示）;<br>3）根据城市的名称组织数据库中的节点<br>4）根据名称或协调插入单个或多个节点，删除或索引节点。</li>
</ol>
<p>版本号：1.0<br>作者：李晓华<br>日期：2008-7-15<br>审计人<br>：梅红日期：2008-7-25 领导签名：日期：2008-7-30</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;College of Software Engineering&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;Undergraduate Course Syllabus&lt;/strong&gt;&lt;br&gt;Course ID 311036030 Course Name Dat
    
    </summary>
    
      <category term="学" scheme="https://feahter.github.io/categories/%E5%AD%A6/"/>
    
    
      <category term="考研" scheme="https://feahter.github.io/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="数据结构" scheme="https://feahter.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>研究生数据结构重点</title>
    <link href="https://feahter.github.io/2017/05/12/%E7%A0%94%E7%A9%B6%E7%94%9F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%87%8D%E7%82%B9/"/>
    <id>https://feahter.github.io/2017/05/12/研究生数据结构重点/</id>
    <published>2017-05-12T06:33:53.000Z</published>
    <updated>2017-05-12T07:21:02.438Z</updated>
    
    <content type="html"><![CDATA[<p>一、线性表</p>
<p>链表插入、删除节点时的指针操作（选择题）；</p>
<p>双向链表等一些相对复杂的链表的操作（综合应用题）。</p>
<p>二、栈、队列和数组</p>
<p>1.栈与队列FILO和FIFO的特点。</p>
<p>针对栈FILO的特点，进栈出栈序列（选择题）；</p>
<p>2.栈和队列的顺序和链式存储结构：</p>
<p>不同存储结构下栈顶指针、队首指针以及队尾指针的操作。</p>
<p>循环队列判满和判空的2种判断方法。</p>
<p>3.特殊矩阵的压缩存储：</p>
<p>二维矩阵与一维数组相互转换时，下标的计算方法，</p>
<p>与对角线平行的若干行上数据非零的矩阵存放在一维数组后，各个数据点相应的下标的计算。</p>
<p>4.利用堆栈或队列的特性，将它们作为基础的数据结构，支持实际问题求解算法的设计。</p>
<p>用栈解决递归问题，用队列解决图的遍历问题（综合应用题）。</p>
<p>三、树和二叉树。</p>
<p>1.树、二叉树的各种性质、树和二叉树的不同存储结构、森林、树和二叉树之间的转换、线索化二叉树、二叉树的应用（二叉排序树、平衡二叉树和Huffman树）。</p>
<p>森林、树以及二叉树的前中后三种遍历方式。要能进行相应的算法设计。</p>
<p>选择题考点：</p>
<p>1.满二叉树、完全二叉树节点数的计算。</p>
<p>2.由树、二叉树的示意图给出相应的遍历序列，依据二叉树的遍历序列还原二叉树。</p>
<p>3.线索化的实质。</p>
<p>计算采用不同的方法线索化后二叉树剩余空指针域的个数，平衡二叉树的定义、性质、建立和四种调整算法以及回溯法相关的问题。</p>
<p>综合应用题考点：</p>
<p>二叉树的遍历算法，遍历基础上针对二叉树的一些统计和操作（比如结点数统计、左右子树对换等等）。</p>
<p>判断某棵二叉树是否二叉排序树，</p>
<p>以上这些都要求能用递归的和非递归的算法解决，特别要重视非递归的算法，线索化后二叉树的遍历算法，如查找某结点线索化后的前驱或后继结点的算法以及给出Huffman编码等等。</p>
<p>四、图。</p>
<p>图以及基于图的各种定义，存储方式。</p>
<p>本章重点：要熟练掌握图的深度遍历和广度遍历算法，这是用图来解决应用问题时常用的算法基础。需要掌握基于图的多个算法，能够以手工计算的方式在一个给定的图上执行特定的算法求解问题。</p>
<p>常见的应用问题直接给出或经过抽象，会成为下列问题：</p>
<p>最小生成树求解（PRIM算法和KRUSKAL算法，两种方法思想都很简单，但要注意不要混淆这两种方法），</p>
<p>拓扑排序问题（这里会用到数组实现的链表，可以注意一下），</p>
<p>关键路径问题（数据结构的较大难点，要把概念理解透，能做出表格找出关键路径），</p>
<p>最短路径问题（有重要的应用背景，也是贪心法不多的能给出最优解的典型问题之一）。</p>
<p>五、查找。</p>
<p>关键字、主关键字、次关键字的含义；</p>
<p>本章重点：静态查找与动态查找的含义及区别；平均查找长度ASL的概念及在各种查找算法中的计算方法和计算结果，特别是一些典型结构的ASL值，B树的概念和基本操作冲突解决方法的选择和冲突处理过程的描述，B+树的概念，特别要注意B树和B+树概念的对比，以及Hash表相关的概念。要熟练掌握顺序表、链表、二叉树上的查找方法，特别要注意顺序查找、二分查找的适用条件（比如链表上用二分查找就不合适）和算法复杂度。</p>
<p>六、排序。</p>
<p>既包括内部排序，又包括外部排序，排序既是重点，又是难点。</p>
<p>排序算法众多，光大纲上列出的内部排序就有9种，还要再加上外部排序，各种不同算法还有相应的一些概念定义需要记住。</p>
<p>选择题：</p>
<p>不同排序算法的复杂度，给定数列要求给出某种特定排序方法运行一轮后的排序结果，或者给出初始数列和一轮排序结果要求选择采用的排序算法，给定时间、空间复杂度要求以及数列特征要求选择合适的排序算法等等。</p>
<p>综合应用题：</p>
<p>与数组结合来考查。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、线性表&lt;/p&gt;
&lt;p&gt;链表插入、删除节点时的指针操作（选择题）；&lt;/p&gt;
&lt;p&gt;双向链表等一些相对复杂的链表的操作（综合应用题）。&lt;/p&gt;
&lt;p&gt;二、栈、队列和数组&lt;/p&gt;
&lt;p&gt;1.栈与队列FILO和FIFO的特点。&lt;/p&gt;
&lt;p&gt;针对栈FILO的特点，进栈出栈序列（
    
    </summary>
    
      <category term="学" scheme="https://feahter.github.io/categories/%E5%AD%A6/"/>
    
    
      <category term="考研" scheme="https://feahter.github.io/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="数据结构" scheme="https://feahter.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>前端项目列表</title>
    <link href="https://feahter.github.io/2017/05/11/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%97%E8%A1%A8/"/>
    <id>https://feahter.github.io/2017/05/11/前端项目列表/</id>
    <published>2017-05-11T05:18:13.000Z</published>
    <updated>2017-05-12T05:45:01.092Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:center">项目名称</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">[<a href="http://bj.xdf.cn/bj_static/zhuanti/chuer_bzk/" target="_blank" rel="external">新初二暑假标准课</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/cryy_fz/" target="_blank" rel="external">成人英语项目页</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/wjky_fz/" target="_blank" rel="external">外教口语项目页</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/mdfz/" target="_blank" rel="external">民大附中招生专题页</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/kywyjh/" target="_blank" rel="external">考研无忧计划专题页</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/yskykg/" target="_blank" rel="external">雅思口语考官专题页</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/ynydy/" target="_blank" rel="external">优能一对一全日制课程</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/landingpage/yxxj/" target="_blank" rel="external">泡泡少儿幼小衔接着陆页</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/kydg/" target="_blank" rel="external">考研大纲专题</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/mnsyk/" target="_blank" rel="external">蒙纳士预科专题</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/landingpage/ppseyy/" target="_blank" rel="external">泡泡少儿英语培训</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/kjzf/" target="_blank" rel="external">空军招飞专题</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/ETS_TOEFL/" target="_blank" rel="external">托福项目页专题</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/vip1v6/" target="_blank" rel="external">北美VIP6人班专题</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/chunji/" target="_blank" rel="external">新东方春季班课程汇总页</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/xgncz" target="_blank" rel="external">初中新概念专题</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://new.bj.xdf.cn/heka/" target="_blank" rel="external">保定学校春节H5贺卡的制作</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/bdfyh5/" target="_blank" rel="external">保定学校方言测试H5页面</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/gre_xdf/" target="_blank" rel="external">新东方GRE专题</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/gmat_xdf/" target="_blank" rel="external">新东方GMAT专题</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/bzk_xm/" target="_blank" rel="external">一对一标准课专题</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://bj.xdf.cn/bj_static/zhuanti/gangao_1v1/" target="_blank" rel="external">港澳英文面试课专题</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://new.bj.xdf.cn/zhongkao/整站前端" target="_blank" rel="external">中考网</a></td>
</tr>
<tr>
<td style="text-align:center"><a href="http://qujingke.com/整站前端" target="_blank" rel="external">取经课</a></td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;项目名称&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;[&lt;a href=&quot;http://bj.x
    
    </summary>
    
      <category term="杂" scheme="https://feahter.github.io/categories/%E6%9D%82/"/>
    
    
      <category term="项目列表" scheme="https://feahter.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%88%97%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>关于webpack</title>
    <link href="https://feahter.github.io/2017/02/18/%E5%85%B3%E4%BA%8Ewebpack/"/>
    <id>https://feahter.github.io/2017/02/18/关于webpack/</id>
    <published>2017-02-18T08:27:40.000Z</published>
    <updated>2017-05-11T05:06:01.950Z</updated>
    
    <content type="html"><![CDATA[<p>一、webpack入门准备：</p>
<p>本地装好<a href="https://nodejs.org/en/" target="_blank" rel="external">node</a>、<a href="https://www.npmjs.com/" target="_blank" rel="external">npm</a></p>
<p><strong>node</strong> v4.4.7</p>
<p><strong>npm</strong> v4.0.5</p>
<p>二、安装webpack：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g webpack</div></pre></td></tr></table></figure>
<p><strong>webpack</strong> v2.4.1</p>
<p>三、构建项目：</p>
<p>1.创建项目文件webpack</p>
<p>2.命令行移动至webpack文件夹下</p>
<p>3.新建包管理文件package.json或命令行npm init默认创建</p>
<p>4.npm声明依赖覆盖package.json:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"devDependencies"</span>: &#123;</div><div class="line">    <span class="attr">"babel-core"</span>: <span class="string">"^6.24.1"</span>,</div><div class="line">    <span class="attr">"babel-loader"</span>: <span class="string">"^7.0.0"</span>,</div><div class="line">    <span class="attr">"babel-preset-es2015"</span>: <span class="string">"^6.24.1"</span>,</div><div class="line">    <span class="attr">"css-loader"</span>: <span class="string">"^0.28.1"</span>,</div><div class="line">    <span class="attr">"extract-text-webpack-plugin"</span>: <span class="string">"^2.1.0"</span>,</div><div class="line">    <span class="attr">"file-loader"</span>: <span class="string">"^0.11.1"</span>,</div><div class="line">    <span class="attr">"html-webpack-plugin"</span>: <span class="string">"^2.28.0"</span>,</div><div class="line">    <span class="attr">"jquery"</span>: <span class="string">"^3.2.1"</span>,</div><div class="line">    <span class="attr">"lodash"</span>: <span class="string">"^4.17.4"</span>,</div><div class="line">    <span class="attr">"moment"</span>: <span class="string">"^2.18.1"</span>,</div><div class="line">    <span class="attr">"node-sass"</span>: <span class="string">"^4.5.2"</span>,</div><div class="line">    <span class="attr">"sass-loader"</span>: <span class="string">"^6.0.3"</span>,</div><div class="line">    <span class="attr">"scripts"</span>: <span class="string">"^0.1.0"</span>,</div><div class="line">    <span class="attr">"style-loader"</span>: <span class="string">"^0.17.0"</span>,</div><div class="line">    <span class="attr">"url-loader"</span>: <span class="string">"^0.5.8"</span>,</div><div class="line">    <span class="attr">"webpack"</span>: <span class="string">"^2.4.1"</span>,</div><div class="line">    <span class="attr">"webpack-dev-server"</span>: <span class="string">"^2.4.5"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"dependencies"</span>: &#123;</div><div class="line">    <span class="attr">"lodash"</span>: <span class="string">"^4.17.4"</span>,</div><div class="line">    <span class="attr">"moment"</span>: <span class="string">"^2.18.1"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"scripts"</span>: &#123;</div><div class="line">    <span class="attr">"start"</span>: <span class="string">"webpack-dev-server --inline"</span>,</div><div class="line">     <span class="attr">"build"</span>: <span class="string">"webpack --progress --profile --colors --config webpack.production.config.js"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>直接</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install</div></pre></td></tr></table></figure>
<p>安装依赖</p>
<p>5.新建webpack.config.js文件，这是webpack核心</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//声明对象</span></div><div class="line"><span class="keyword">var</span> webpack=<span class="built_in">require</span>(<span class="string">'webpack'</span>);</div><div class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</div><div class="line"><span class="keyword">var</span> HtmlwebpackPligin=<span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</div><div class="line"><span class="keyword">var</span> ROOT_PATH=path.resolve(__dirname);</div><div class="line"><span class="keyword">var</span> APP_PATH=path.resolve(ROOT_PATH,<span class="string">'app/js'</span>);</div><div class="line"><span class="keyword">var</span> CSS_PATH=path.resolve(ROOT_PATH,<span class="string">'app/css'</span>);</div><div class="line"><span class="keyword">var</span> BUILD_PATH=path.resolve(ROOT_PATH,<span class="string">'build'</span>);</div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  <span class="comment">//入口</span></div><div class="line">  entry:&#123; </div><div class="line">    app:APP_PATH,</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">//出口</span></div><div class="line">  output: &#123;</div><div class="line">    path: BUILD_PATH,</div><div class="line">    filename: <span class="string">'bundle.js'</span>,</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">//node虚拟服务</span></div><div class="line">    devServer: &#123;</div><div class="line">    historyApiFallback: <span class="literal">true</span>,</div><div class="line">    inline: <span class="literal">true</span>,</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">//loaders模块</span></div><div class="line">  <span class="built_in">module</span>:&#123;</div><div class="line">    loaders:[</div><div class="line">     &#123; </div><div class="line">       test: <span class="regexp">/\.scss$/</span>,</div><div class="line">       loaders:[<span class="string">'style-loader'</span>,<span class="string">'css-loader?sourceMap'</span>,<span class="string">'sass-loader?sourceMap'</span>],</div><div class="line">       include: CSS_PATH,</div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.(png|jpg|jpeg)$/</span>,</div><div class="line">        loader: <span class="string">'url-loader?limit=3000000'</span></div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.js$/</span>,</div><div class="line">        loader: <span class="string">'babel-loader'</span>,</div><div class="line">        include: APP_PATH,</div><div class="line">        query: &#123;</div><div class="line">          presets: [<span class="string">'es2015'</span>]</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">//资源地图</span></div><div class="line">   devtool: <span class="string">'eval-source-map'</span>,</div><div class="line">  <span class="comment">//插件</span></div><div class="line">  plugins: [</div><div class="line">    <span class="keyword">new</span> HtmlwebpackPligin(&#123;</div><div class="line">      title:<span class="string">'Hello World app'</span></div><div class="line">    &#125;),</div><div class="line">      <span class="keyword">new</span> webpack.ProvidePlugin(&#123;</div><div class="line">      $: <span class="string">"jquery"</span>,</div><div class="line">      jQuery: <span class="string">"jquery"</span>,</div><div class="line">      <span class="string">"window.jQuery"</span>: <span class="string">"jquery"</span></div><div class="line">    &#125;)</div><div class="line">  ],</div><div class="line"></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>6.开发生产环境分离</p>
<p>分别在根目录新建app和build文件夹做开发和生产环境。</p>
<p>在app内新建前端常规文件夹层级css、js、images等。</p>
<p>运行 <code>webpack -p</code>命令生成压缩文件bundle.js。</p>
<p>在build内新建index.html引入bundle.js。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World app<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"bundle.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>本地即可直接打开index.html查看效果。</p>
<p>复制webpack.config.js文件并改名为webpack.production.config.js.</p>
<p>删掉devServer相关代码，资源打包分离压缩处理资源</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//声明对象</span></div><div class="line"><span class="keyword">var</span> webpack=<span class="built_in">require</span>(<span class="string">'webpack'</span>);</div><div class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</div><div class="line"><span class="keyword">var</span> HtmlwebpackPligin=<span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</div><div class="line"><span class="keyword">var</span> ROOT_PATH=path.resolve(__dirname);</div><div class="line"><span class="keyword">var</span> APP_PATH=path.resolve(ROOT_PATH,<span class="string">'app/js'</span>);</div><div class="line"><span class="keyword">var</span> CSS_PATH=path.resolve(ROOT_PATH,<span class="string">'app/css'</span>);</div><div class="line"><span class="keyword">var</span> BUILD_PATH=path.resolve(ROOT_PATH,<span class="string">'build'</span>);</div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  <span class="comment">//入口</span></div><div class="line">  entry:&#123; </div><div class="line">   app: path.resolve(APP_PATH, <span class="string">'index.js'</span>),</div><div class="line">    <span class="comment">//添加要打包在vendors里面的库</span></div><div class="line">    vendors: [<span class="string">'jquery'</span>, <span class="string">'moment'</span>]</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">//输出</span></div><div class="line">  output: &#123;</div><div class="line">    path: BUILD_PATH,</div><div class="line">    filename: <span class="string">'bundle.js'</span>,</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">//loaders模块打包、转译处理</span></div><div class="line">  <span class="built_in">module</span>:&#123;</div><div class="line">    loaders:[</div><div class="line">     &#123; </div><div class="line">       test: <span class="regexp">/\.scss$/</span>,</div><div class="line">       loaders:[<span class="string">'style-loader'</span>,<span class="string">'css-loader?sourceMap'</span>,<span class="string">'sass-loader?sourceMap'</span>],</div><div class="line">       include: CSS_PATH,</div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.(png|jpg|jpeg)$/</span>,</div><div class="line">        loader: <span class="string">'url-loader?limit=3000000'</span></div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        test: <span class="regexp">/\.js$/</span>,</div><div class="line">        loader: <span class="string">'babel-loader'</span>,</div><div class="line">        include: APP_PATH,</div><div class="line">        query: &#123;</div><div class="line">          presets: [<span class="string">'es2015'</span>]</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">//生成资源地图.map</span></div><div class="line">   devtool: <span class="string">'eval-source-map'</span>,</div><div class="line">  <span class="comment">//插件</span></div><div class="line">  plugins: [</div><div class="line">      <span class="comment">//这个使用uglifyJs压缩你的js代码</span></div><div class="line">    <span class="keyword">new</span> webpack.optimize.UglifyJsPlugin(&#123;minimize: <span class="literal">true</span>&#125;),</div><div class="line">    <span class="comment">//把入口文件里面的数组打包成verdors.js</span></div><div class="line">    <span class="keyword">new</span> webpack.optimize.CommonsChunkPlugin(<span class="string">'vendors'</span>, <span class="string">'vendors.js'</span>),</div><div class="line">    <span class="keyword">new</span> HtmlwebpackPligin(&#123;</div><div class="line">      title:<span class="string">'Hello World app'</span></div><div class="line">    &#125;),</div><div class="line">      <span class="keyword">new</span> webpack.ProvidePlugin(&#123;</div><div class="line">      $: <span class="string">"jquery"</span>,</div><div class="line">      jQuery: <span class="string">"jquery"</span>,</div><div class="line">      <span class="string">"window.jQuery"</span>: <span class="string">"jquery"</span></div><div class="line">    &#125;)</div><div class="line">  ],</div><div class="line"></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、webpack入门准备：&lt;/p&gt;
&lt;p&gt;本地装好&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node&lt;/a&gt;、&lt;a href=&quot;https://www.npmjs.com/&quot; targe
    
    </summary>
    
      <category term="术" scheme="https://feahter.github.io/categories/%E6%9C%AF/"/>
    
    
      <category term="webpack" scheme="https://feahter.github.io/tags/webpack/"/>
    
      <category term="前端模块化" scheme="https://feahter.github.io/tags/%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>关于TypeScript</title>
    <link href="https://feahter.github.io/2016/12/22/%E5%85%B3%E4%BA%8ETypeScript/"/>
    <id>https://feahter.github.io/2016/12/22/关于TypeScript/</id>
    <published>2016-12-22T01:53:16.000Z</published>
    <updated>2016-12-22T06:08:55.494Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》</a></p>
<h2 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h2><p>事情是这样的，我想搜索 <code>TypeScript 中文教程</code>，结果在 <a href="https://www.baidu.com/" target="_blank" rel="external">https://www.baidu.com</a> ， <a href="https://cn.bing.com/" target="_blank" rel="external">https://cn.bing.com</a> ，上都找不到官方的翻译，也没有一个像样的翻译（搜索的时间是2015-12-02），可怜我们无法使用google，所以就想去自己翻译官方的 TypeScript-Handbook。</p>
<p>于是我Fork了官方的库 <a href="https://github.com/Microsoft/TypeScript-Handbook" target="_blank" rel="external">https://github.com/Microsoft/TypeScript-Handbook</a> , 到我的库中<a href="https://github.com/MyErpSoft/TypeScript-Handbook" target="_blank" rel="external">https://github.com/MyErpSoft/TypeScript-Handbook</a> ,我当然不能直接修改他们的文件，于是我的做法建立子目录 zh-CHS (<a href="https://github.com/MyErpSoft/TypeScript-Handbook/tree/master/pages/zh-CHS" target="_blank" rel="external">https://github.com/MyErpSoft/TypeScript-Handbook/tree/master/pages/zh-CHS</a> )，梦想着哪天官方是不是 合并我的变更呢，哈哈，美美的做着白日梦。</p>
<p>可是在翻译不到几个小时之后呢，觉得不甘心，既然我放在github上，那是不是在 <a href="https://github.com/" target="_blank" rel="external">https://GitHub.com</a> 可以搜索到别人的翻译呢？大家都爱github吗，对吧？ 于是在github上搜 <code>TypeScript Handbook</code>，果然有，翻译的比较完整的有：</p>
<ul>
<li><a href="https://github.com/oyyd/typescript-handbook-zh" target="_blank" rel="external">https://github.com/oyyd/typescript-handbook-zh</a> 完整</li>
<li><a href="https://github.com/ntesmail/Typescript-Handbook" target="_blank" rel="external">https://github.com/ntesmail/Typescript-Handbook</a> 不完整</li>
<li><a href="https://github.com/xykbear/TypeScriptHandbook" target="_blank" rel="external">https://github.com/xykbear/TypeScriptHandbook</a> 比较完整</li>
</ul>
<p>既然大家都有翻译了，那我也不必重新造轮子了，正打算放弃，突然一想，那中国那么多想学习TypeScript的人，如果想入门岂不是和我遇到一样的经历，我至少知道Github，但很多初学者是不知道的，我要帮助后来者。</p>
<p>鉴于我的博客的影响力（羞），比如在百度上搜索： <code>typescript 入门</code>，我之前的文章是结果的第三个（2015-12-03测试），所以我有必要将这些翻译 Copy 到我的博客，然后整理一下发表到博客园主页，当然我会注明这不是我翻译的，注明出处，这样至少通过我的博客可以跳转到原始的翻译。于是我继续下去了。</p>
<h2 id="意外发现"><a href="#意外发现" class="headerlink" title="意外发现"></a>意外发现</h2><p>在翻译和整理的过程中，我发现在github上我找到的翻译版本有些旧，最完整的 oyyd 的翻译也是旧的，于是我在Copy的同时，也补充入最新的版本。在自己翻译的过程中，我发现了一处错误，于是我提交了一个 Issue ，<a href="https://github.com/Microsoft/TypeScript-Handbook/issues/118" target="_blank" rel="external">https://github.com/Microsoft/TypeScript-Handbook/issues/118</a> ，微软迅速得到修正，我也突然有了重大发现： 帮忙修订的有个人叫 zhongsp ，中国人，那一定有中文的翻译咯？ 果不其然，于是… … 当当当当 … … 当（音乐起）.</p>
<p>大家看 <a href="https://github.com/zhongsp/TypeScript" target="_blank" rel="external">https://github.com/zhongsp/TypeScript</a> 的就对了，这才是官方正统的中文翻译。</p>
<p>当然，为什么我之前一直找不到他呢？因为这货竟然将项目的名字叫 <code>TypeScript</code> ，找不到是应该的，而且他发表到<a href="https://zhongsp.gitbooks.io/typescript-handbook/content/" target="_blank" rel="external">https://zhongsp.gitbooks.io/typescript-handbook/content/</a> 这样的网站，中国哪里能搜索的到。于是，我毅然继续Copy,Copy… …然后发表到我的 <a href="http://tansm.cnblogs.com/" target="_blank" rel="external">http://tansm.cnblogs.com</a></p>
<h2 id="关于发表到首页"><a href="#关于发表到首页" class="headerlink" title="关于发表到首页"></a>关于发表到首页</h2><p>作为一个毫无原创内容的博客，发表到博客园的首页这件事情我知道是不对的，但是… …</p>
<p>为了中国千万万找不到合适 TypeScript 中文入门教程 的朋友，我冒着被迅速下架的危险，还是要发表上去，这样这些搜索引擎才能将这些转载的文章收录到靠前啊。</p>
<p>再说了，第一个章节大部分可是我翻译的啊，还是很原创的，所以不能完全算转载了。</p>
<p>同志们，留下你的只言片语，也能让排名靠前哦。  好吧… … 一个Copy者怎么这么理直气壮了 ，不说 了。</p>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>虽然我是转载的，但看在Copy这么多文章也是很幸苦的好吧，我罗列一个目录。</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Decorators.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 17、注解</a> (2015-12-03 11:36)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Symbols.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 16、Symbols</a> (2015-12-03 11:35)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Iterators_and_Generators.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 15、可迭代性</a> (2015-12-03 11:33)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Writing_Definition_Files.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 14、输入.d.ts文件</a> (2015-12-03 11:31)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Type_Compatibility.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 13、类型兼容性</a> (2015-12-03 11:29)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Type_Inference.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 12、类型推导</a> (2015-12-03 11:28)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Declaration_Merging.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 11、声明合并</a> (2015-12-03 11:26)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Mixins.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 10、混入</a> (2015-12-03 11:24)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Generics.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 9、泛型</a> (2015-12-03 11:22)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Functions.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 8、函数</a> (2015-12-03 11:21)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Modules.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 7、模块</a> (2015-12-03 11:18)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Namespaces.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 6、命名空间</a> (2015-12-03 11:14)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Namespaces_and_Modules.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 5、命名空间和模块</a> (2015-12-03 11:11)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Classes.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 4、类</a> (2015-12-03 11:08)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Interfaces.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 3、接口</a> (2015-12-03 11:03)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_Enums.html" target="_blank" rel="external">转载：《TypeScript 中文入门教程》 2、枚举</a> (2015-12-03 10:58)</p>
<p><a href="http://www.cnblogs.com/tansm/p/TypeScript_Handbook_BasicTypes.html" target="_blank" rel="external">《TypeScript 中文入门教程》 1、基础数据类型</a> (2015-12-02 16:14)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/tansm/p/TypeScript_Handbook.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;转载：《TypeScript 中文入门教程》&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;缘
    
    </summary>
    
      <category term="术" scheme="https://feahter.github.io/categories/%E6%9C%AF/"/>
    
    
      <category term="TypeScript" scheme="https://feahter.github.io/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>关于gulp</title>
    <link href="https://feahter.github.io/2016/12/08/%E5%85%B3%E4%BA%8Egulp/"/>
    <id>https://feahter.github.io/2016/12/08/关于gulp/</id>
    <published>2016-12-08T02:56:31.000Z</published>
    <updated>2016-12-08T05:03:37.955Z</updated>
    
    <content type="html"><![CDATA[<h3 id="awesome-gulp中文版"><a href="#awesome-gulp中文版" class="headerlink" title="awesome-gulp中文版"></a><a href="https://github.com/alferov/awesome-gulp" target="_blank" rel="external">awesome-gulp</a>中文版</h3><blockquote>
<p><a href="https://github.com/gulpjs/gulp" target="_blank" rel="external">gulp</a>的资源，插件和使用实例清单， 致力于打造更好的前端工程构建流程。</p>
</blockquote>
<p><a href="https://github.com/sindresorhus/awesome" target="_blank" rel="external">awesome清单</a> </p>
<h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><h3 id="通用资源"><a href="#通用资源" class="headerlink" title="通用资源"></a>通用资源</h3><ul>
<li><a href="http://gulpjs.com/" target="_blank" rel="external">官网</a></li>
<li><a href="http://www.gulpjs.com.cn/" target="_blank" rel="external">中文网</a></li>
<li><a href="https://github.com/gulpjs/gulp" target="_blank" rel="external">Github库</a></li>
<li><a href="http://gulpjs.com/plugins/" target="_blank" rel="external">插件注册</a></li>
<li><a href="https://www.npmjs.com/package/gulp" target="_blank" rel="external">NPM模块</a></li>
<li><a href="https://github.com/gulpjs/plugins/blob/master/src/blackList.json" target="_blank" rel="external">插件黑名单</a></li>
</ul>
<h3 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h3><ul>
<li><a href="https://github.com/gulpjs/gulp/blob/master/docs/getting-started.md" target="_blank" rel="external">快速开始</a></li>
<li><a href="https://github.com/gulpjs/gulp/blob/master/docs/API.md" target="_blank" rel="external">API文档</a></li>
<li><a href="https://github.com/gulpjs/gulp/tree/master/docs#articles" target="_blank" rel="external">CLI 文档</a></li>
<li><a href="https://github.com/gulpjs/gulp/blob/master/docs/writing-a-plugin/README.md" target="_blank" rel="external">开始写一个插件</a></li>
<li><a href="https://github.com/gulpjs/gulp/tree/master/docs/recipes" target="_blank" rel="external">使用诀窍</a></li>
</ul>
<h3 id="组织"><a href="#组织" class="headerlink" title="组织"></a>组织</h3><ul>
<li><a href="http://stackoverflow.com/questions/tagged/gulp" target="_blank" rel="external">StackOverflow</a></li>
<li><a href="https://twitter.com/gulpjs" target="_blank" rel="external">Twitter</a></li>
</ul>
<h3 id="入门教程"><a href="#入门教程" class="headerlink" title="入门教程"></a>入门教程</h3><h4 id="Gulp入门"><a href="#Gulp入门" class="headerlink" title="Gulp入门"></a>Gulp入门</h4><ul>
<li><a href="https://www.smashingmagazine.com/2014/06/building-with-gulp/" target="_blank" rel="external">使用Gulp构建前端工程</a></li>
<li><a href="https://scotch.io/tutorials/automate-your-tasks-easily-with-gulp-js" target="_blank" rel="external">通过Gulp.js轻松自动化构建你的前端工程</a></li>
<li><a href="https://medium.com/@contrahacks/gulp-3828e8126466" target="_blank" rel="external">Gulp，让前端工程可视化</a></li>
<li><a href="http://stefanimhoff.de/tag/gulp/" target="_blank" rel="external">Gulp.js是什么？</a></li>
<li><a href="http://blog.johnnyreilly.com/2015/02/using-gulp-in-asp-net-instead-of-web-optimization.html" target="_blank" rel="external">使用Gulp在你的HTML中直接插入Scripts和Styles标签</a></li>
<li><a href="http://denbuzze.com/post/5-lessons-learned-using-gulpjs/" target="_blank" rel="external">5节课学会使用Gulp.js</a></li>
<li><a href="http://lab.brightnorth.co.uk/2014/08/13/automating-linkage-how-i-learned-to-stop-worrying-and-love-the-build/" target="_blank" rel="external">我是怎样摆脱前端工程的困扰的？</a></li>
<li><a href="https://www.codementor.io/development-process/tutorial/how-to-set-up-gulp-beginner-guide#/" target="_blank" rel="external">第一次开始Gulp Task</a></li>
<li><a href="http://blog.overzealous.com/post/74121048393/why-you-shouldnt-create-a-gulp-plugin-or-how-to" target="_blank" rel="external">为什么你不自己写一个Gulp插件？</a></li>
<li><a href="http://blog.rangle.io/angular-gulp-bestpractices/" target="_blank" rel="external">6个最好的从根本改善你的开发经验的Gulp实战练习</a></li>
<li><a href="https://css-tricks.com/gulp-for-beginners/" target="_blank" rel="external">Gulp初学者教程</a></li>
</ul>
<h4 id="Gulp-4-入门"><a href="#Gulp-4-入门" class="headerlink" title="Gulp 4 入门"></a>Gulp 4 入门</h4><ul>
<li><a href="https://blog.wearewizards.io/migrating-to-gulp-4-by-example" target="_blank" rel="external">迁移到Gulp 4的例子</a></li>
<li><a href="http://fettblog.eu/gulp-4-parallel-and-series/" target="_blank" rel="external">Gulp 4: 新的task执行系统 - gulp.parallel 和 gulp.series</a></li>
</ul>
<h4 id="Gulp-with-Browserify"><a href="#Gulp-with-Browserify" class="headerlink" title="Gulp with Browserify"></a>Gulp with Browserify</h4><ul>
<li><a href="https://medium.com/@sogko/gulp-browserify-the-gulp-y-way-bb359b3f9623" target="_blank" rel="external">Gulp + Browserify, the Gulp-y Way</a></li>
<li><a href="https://viget.com/extend/gulp-browserify-starter-faq" target="_blank" rel="external">Gulp + Browserify</a></li>
<li><a href="https://github.com/gulpjs/gulp/blob/master/docs/recipes/fast-browserify-builds-with-watchify.md" target="_blank" rel="external">快速构建Browserify和Watchify</a></li>
</ul>
<h4 id="Gulp-with-Angular"><a href="#Gulp-with-Angular" class="headerlink" title="Gulp with Angular"></a>Gulp with Angular</h4><ul>
<li><a href="http://blog.jhades.org/what-every-angular-project-likely-needs-and-a-gulp-build-to-provide-it/" target="_blank" rel="external">Angular工程需要什么 - Gulp能提供什么</a></li>
</ul>
<h4 id="Gulp-with-Angular-and-Browserify"><a href="#Gulp-with-Angular-and-Browserify" class="headerlink" title="Gulp with Angular and Browserify"></a>Gulp with Angular and Browserify</h4><ul>
<li><a href="http://omarfouad.com/blog/2015/03/21/advanced-angularjs-structure-with-gulp-node-and-browserify/" target="_blank" rel="external">使用 Gulp, Node and Browserify构建先进的 AngularJS工程结构</a></li>
</ul>
<h4 id="Gulp-with-React-and-Browserify"><a href="#Gulp-with-React-and-Browserify" class="headerlink" title="Gulp with React and Browserify"></a>Gulp with React and Browserify</h4><ul>
<li><a href="https://hacks.mozilla.org/2014/08/browserify-and-gulp-with-react/" target="_blank" rel="external">Browserify、Gulp 和 React</a></li>
<li><a href="http://pomax.github.io/1420592591221/taking-react-to-the-next-level-mixins-gulp-and-browserify" target="_blank" rel="external">Taking React to the Next Level: Mixins, Gulp, and Browserify</a></li>
</ul>
<h4 id="Gulp-with-Ember"><a href="#Gulp-with-Ember" class="headerlink" title="Gulp with Ember"></a>Gulp with Ember</h4><ul>
<li><a href="http://www.sitepoint.com/improving-ember-js-workflow-using-gulp-js/" target="_blank" rel="external">使用Gulp.js改进你的Ember.js工作流</a></li>
</ul>
<h3 id="其他资源"><a href="#其他资源" class="headerlink" title="其他资源"></a>其他资源</h3><ul>
<li><a href="https://github.com/osscafe/gulp-cheatsheet" target="_blank" rel="external">Gulp 备忘录</a></li>
<li><a href="https://github.com/johnpapa/gulp-patterns" target="_blank" rel="external">Gulp清单</a></li>
</ul>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><ul>
<li><a href="https://github.com/dlmanning/gulp-sass" target="_blank" rel="external">gulp-sass</a> - 通过 <a href="https://github.com/sass/libsass" target="_blank" rel="external">libsass</a>将Sass编译成 CSS</li>
<li><a href="https://github.com/sindresorhus/gulp-ruby-sass" target="_blank" rel="external">gulp-ruby-sass</a> - 通过 Ruby Sass将Sass编译成CSS</li>
<li><a href="https://github.com/appleboy/gulp-compass" target="_blank" rel="external">gulp-compass</a> - 通过 Ruby Sass和CompassSass编译成CSS</li>
<li><a href="https://github.com/plus3network/gulp-less" target="_blank" rel="external">gulp-less</a> - <a href="https://github.com/less/less.js" target="_blank" rel="external">Less</a>编译成 CSS.</li>
<li><a href="https://github.com/stevelacy/gulp-stylus" target="_blank" rel="external">gulp-stylus</a> - <a href="https://github.com/stylus/stylus" target="_blank" rel="external">Stylus</a> 编译成 CSS.</li>
<li><a href="https://github.com/postcss/gulp-postcss" target="_blank" rel="external">gulp-postcss</a> - Pipe CSS 通过 <a href="https://github.com/postcss/postcss" target="_blank" rel="external">PostCSS</a> processors with a single parse.</li>
<li><a href="https://github.com/contra/gulp-coffee" target="_blank" rel="external">gulp-coffee</a> - <a href="https://github.com/jashkenas/coffeescript" target="_blank" rel="external">Coffeescript</a> 编译成 JavaScript.</li>
<li><a href="https://github.com/ivogabe/gulp-typescript" target="_blank" rel="external">gulp-typescript</a> - <a href="https://github.com/Microsoft/TypeScript" target="_blank" rel="external">TypeScript</a>编译成JavaScript.</li>
<li><a href="https://github.com/sindresorhus/gulp-react" target="_blank" rel="external">gulp-react</a> - Facebook <a href="https://github.com/facebook/react" target="_blank" rel="external">React</a> JSX 模板编译成JavaScript.</li>
<li><a href="https://github.com/shama/webpack-stream" target="_blank" rel="external">webpack-stream</a> - 将<a href="https://github.com/webpack/webpack" target="_blank" rel="external">webpack</a>集成在Gulp中使用。</li>
<li><a href="https://github.com/babel/gulp-babel" target="_blank" rel="external">gulp-babel</a> - ES6编译成ES5 通过 <a href="https://github.com/babel/babel" target="_blank" rel="external">babel</a>.</li>
<li><a href="https://github.com/sindresorhus/gulp-traceur" target="_blank" rel="external">gulp-traceur</a> - ES6编译成ES5 通过 <a href="https://github.com/google/traceur-compiler" target="_blank" rel="external">Traceur</a>.</li>
<li><a href="https://github.com/sindresorhus/gulp-regenerator" target="_blank" rel="external">gulp-regenerator</a> - ES6编译成ES5 通过 <a href="https://github.com/facebook/regenerator" target="_blank" rel="external">Regenerator</a>.</li>
<li><a href="https://github.com/sindresorhus/gulp-es6-transpiler" target="_blank" rel="external">gulp-es6-transpiler</a> - [过时的] ES6编译成ES5 通过 <a href="https://github.com/termi/es6-transpiler" target="_blank" rel="external">es6-transpiler</a>.</li>
<li><a href="https://github.com/sindresorhus/gulp-myth" target="_blank" rel="external">gulp-myth</a> - <a href="https://github.com/segmentio/myth" target="_blank" rel="external">Myth</a> - a polyfill for future versions of the CSS spec.</li>
<li><a href="https://github.com/MoOx/gulp-cssnext" target="_blank" rel="external">gulp-cssnext</a> - [过时的] 使用下一代的 CSS 规范通过 <a href="https://github.com/MoOx/postcss-cssnext" target="_blank" rel="external">cssnext</a>.</li>
</ul>
<h3 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h3><ul>
<li><a href="https://github.com/contra/gulp-concat" target="_blank" rel="external">gulp-concat</a> - 合并文件.</li>
</ul>
<h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><ul>
<li><a href="https://github.com/scniro/gulp-clean-css" target="_blank" rel="external">gulp-clean-css</a> - 压缩 CSS 通过 <a href="https://github.com/jakubpawlowicz/clean-css" target="_blank" rel="external">clean-css</a>.</li>
<li><a href="https://github.com/ben-eb/gulp-csso" target="_blank" rel="external">gulp-csso</a> - 压缩 CSS 通过 <a href="https://github.com/css/csso" target="_blank" rel="external">CSSO</a>.</li>
<li><a href="https://github.com/terinjokes/gulp-uglify" target="_blank" rel="external">gulp-uglify</a> - 压缩 JavaScript 通过 <a href="https://github.com/mishoo/UglifyJS2" target="_blank" rel="external">UglifyJS2</a>.</li>
<li><a href="https://github.com/jonschlinkert/gulp-htmlmin" target="_blank" rel="external">gulp-htmlmin</a> - 压缩 HTML 通过 <a href="https://github.com/kangax/html-minifier" target="_blank" rel="external">html-minifier</a>.</li>
<li><a href="https://github.com/murphydanger/gulp-minify-html" target="_blank" rel="external">gulp-minify-html</a> - 压缩 HTML 通过 <a href="https://github.com/Swaagie/minimize" target="_blank" rel="external">Minimize</a>.</li>
<li><a href="https://github.com/sindresorhus/gulp-imagemin" target="_blank" rel="external">gulp-imagemin</a> - 压缩 PNG, JPEG, GIF and SVG 图片 通过 <a href="https://github.com/imagemin/imagemin" target="_blank" rel="external">imagemin</a>.</li>
<li><a href="https://github.com/ben-eb/gulp-svgmin" target="_blank" rel="external">gulp-svgmin</a> - 通过Gulp压缩 SVG 文件</li>
</ul>
<h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><ul>
<li><a href="https://github.com/ben-eb/gulp-uncss" target="_blank" rel="external">gulp-uncss</a> - 移除未使用的CSS选择器通过 <a href="https://github.com/giakki/uncss" target="_blank" rel="external">UnCSS</a>.</li>
<li><a href="https://github.com/zckrs/gulp-css-base64" target="_blank" rel="external">gulp-css-base64</a> - 将CSS文件中所有的资源(有url()声明的)变成base64-encoded 数据的URI字符串</li>
<li><a href="https://github.com/akoenig/gulp-svg2png" target="_blank" rel="external">gulp-svg2png</a> - 将SVGs转换成PNGs</li>
<li><a href="https://github.com/mahnunchik/gulp-responsive" target="_blank" rel="external">gulp-responsive</a> - 生成不同尺寸的图片</li>
<li><a href="https://github.com/w0rm/gulp-svgstore" target="_blank" rel="external">gulp-svgstore</a> -将svg files 合并成一个通过 元素</li>
<li><a href="https://github.com/nfroidure/gulp-iconfont" target="_blank" rel="external">gulp-iconfont</a> - 通过SVG icons创建 icon fonts</li>
</ul>
<h3 id="资源注入"><a href="#资源注入" class="headerlink" title="资源注入"></a>资源注入</h3><ul>
<li><a href="https://github.com/jonkemp/gulp-useref" target="_blank" rel="external">gulp-useref</a> - 解析HTML文件中特殊标签里面的script或style标签，合并成一个script或css文件，并替换。</li>
<li><a href="https://github.com/klei/gulp-inject" target="_blank" rel="external">gulp-inject</a> - 将指定的css或js文件以标签的形式插入到HTML中的指定标志内。</li>
<li><a href="https://github.com/taptapship/wiredep" target="_blank" rel="external">wiredep</a> - 将Bower依赖自动注入HTML文件中。</li>
</ul>
<h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><ul>
<li><a href="https://github.com/miickel/gulp-angular-templatecache" target="_blank" rel="external">gulp-angular-templatecache</a> - 在$templateCache中联系并注册AngularJS模板</li>
<li><a href="https://github.com/phated/gulp-jade" target="_blank" rel="external">gulp-jade</a> - <a href="https://github.com/pugjs/jade" target="_blank" rel="external">Jade</a> 转换成 HTML.</li>
<li><a href="https://github.com/lazd/gulp-handlebars" target="_blank" rel="external">gulp-handlebars</a> - <a href="https://github.com/wycats/handlebars.js" target="_blank" rel="external">Handlebars</a>模板转换成 JavaScript.</li>
<li><a href="https://github.com/shannonmoeller/gulp-hb" target="_blank" rel="external">gulp-hb</a> - <a href="https://github.com/wycats/handlebars.js" target="_blank" rel="external">Handlebars</a> 模板转换成 HTML.</li>
<li><a href="https://github.com/sindresorhus/gulp-nunjucks" target="_blank" rel="external">gulp-nunjucks</a> - <a href="https://github.com/mozilla/nunjucks" target="_blank" rel="external">Nunjucks</a>模板转换成JavaScript.</li>
<li><a href="https://github.com/sindresorhus/gulp-dust" target="_blank" rel="external">gulp-dustjs</a> - <a href="https://github.com/linkedin/dustjs" target="_blank" rel="external">Dust</a>模板转换成JavaScript.</li>
<li><a href="https://github.com/e-jigsaw/gulp-riot" target="_blank" rel="external">gulp-riot</a> - <a href="https://github.com/riot/riot" target="_blank" rel="external">Riot</a>模板转换成JavaScript.</li>
<li><a href="https://github.com/sindresorhus/gulp-markdown" target="_blank" rel="external">gulp-markdown</a> - Markdown → HTML.</li>
<li><a href="https://github.com/sindresorhus/gulp-template" target="_blank" rel="external">gulp-template</a> - <a href="https://github.com/lodash/lodash" target="_blank" rel="external">Lodash </a>模板转换成JavaScript.</li>
<li><a href="https://github.com/colynb/gulp-swig" target="_blank" rel="external">gulp-swig</a> - <a href="https://github.com/paularmstrong/swig" target="_blank" rel="external">Swig</a>模板转换成HTML.</li>
<li><a href="https://github.com/denysdovhan/gulp-remark" target="_blank" rel="external">gulp-remark</a> - Gulp plugin for [remark]的Gulp插件(<a href="https://github.com/wooorm/remark" target="_blank" rel="external">https://github.com/wooorm/remark</a>) 通过插件处理markdown</li>
</ul>
<h3 id="代码校验"><a href="#代码校验" class="headerlink" title="代码校验"></a>代码校验</h3><ul>
<li><a href="https://www.npmjs.com/package/gulp-csslint" target="_blank" rel="external">gulp-csslint</a> - 通过<a href="https://github.com/CSSLint/csslint" target="_blank" rel="external">CSSLint</a>自动校验CSS.</li>
<li><a href="https://github.com/bezoerb/gulp-htmlhint" target="_blank" rel="external">gulp-htmlhint</a> - 通过<a href="https://github.com/yaniswang/HTMLHint" target="_blank" rel="external">HTMLHint</a>校验HTML.</li>
<li><a href="https://github.com/spalger/gulp-jshint" target="_blank" rel="external">gulp-jshint</a> - 通过<a href="https://github.com/jshint/jshint" target="_blank" rel="external">JSHint</a>发现错误和潜在的问题.</li>
<li><a href="https://github.com/jscs-dev/gulp-jscs" target="_blank" rel="external">gulp-jscs</a> - 通过<a href="https://github.com/jscs-dev/node-jscs" target="_blank" rel="external">jscs</a>检查JavaScript代码风格.</li>
<li><a href="https://github.com/janraasch/gulp-coffeelint" target="_blank" rel="external">gulp-coffeelint</a> - 一种用来保证<a href="https://github.com/jashkenas/coffeescript" target="_blank" rel="external">CoffeeScript</a>代码风格统一的检查。</li>
<li><a href="https://github.com/panuhorsmalahti/gulp-tslint" target="_blank" rel="external">gulp-tslint</a> - gulp的<a href="https://github.com/Microsoft/TypeScript" target="_blank" rel="external">TypeScript</a>代码校验插件.</li>
<li><a href="https://github.com/adametry/gulp-eslint" target="_blank" rel="external">gulp-eslint</a> - ECMAScript/JavaScript代码校验.</li>
<li><a href="https://github.com/callumacrae/gulp-w3cjs" target="_blank" rel="external">gulp-w3cjs</a> - 通过<a href="https://github.com/thomasdavis/w3cjs" target="_blank" rel="external">w3cjs</a>检验HTML.</li>
<li><a href="https://github.com/lesshint/gulp-lesshint" target="_blank" rel="external">gulp-lesshint</a> - 通过<a href="https://github.com/lesshint/lesshint" target="_blank" rel="external">lesshint</a>校验LESS.</li>
</ul>
<h3 id="实时加载"><a href="#实时加载" class="headerlink" title="实时加载"></a>实时加载</h3><ul>
<li><a href="https://github.com/BrowserSync/browser-sync" target="_blank" rel="external">browser-sync</a> - 保证多个浏览器或设备网页同步显示 (<a href="https://github.com/BrowserSync/gulp-browser-sync" target="_blank" rel="external">recipes</a>).</li>
<li><a href="https://github.com/vohof/gulp-livereload" target="_blank" rel="external">gulp-livereload</a> - Gulp的实时加载插件.</li>
</ul>
<h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3><ul>
<li><a href="https://github.com/sindresorhus/gulp-changed" target="_blank" rel="external">gulp-changed</a> - 仅让发生改变的文件通过.</li>
<li><a href="https://github.com/contra/gulp-cached" target="_blank" rel="external">gulp-cached</a> - 一个简单的文件内存缓存.</li>
<li><a href="https://github.com/ahaurw01/gulp-remember" target="_blank" rel="external">gulp-remember</a> - 记忆并回收通过了的文件.</li>
<li><a href="https://github.com/tschaub/gulp-newer" target="_blank" rel="external">gulp-newer</a> - 只让新的源码通过.</li>
</ul>
<h3 id="流控制"><a href="#流控制" class="headerlink" title="流控制"></a>流控制</h3><ul>
<li><a href="https://github.com/grncdr/merge-stream" target="_blank" rel="external">merge-stream</a> - 合并多个流到一个插入的流.</li>
<li><a href="https://github.com/nfroidure/StreamQueue" target="_blank" rel="external">streamqueue</a> - 逐渐输入队列的流.</li>
<li><a href="https://github.com/OverZealous/run-sequence" target="_blank" rel="external">run-sequence</a> - 按要求运行一些依赖的Gulptask.</li>
<li><a href="https://github.com/robrich/gulp-if" target="_blank" rel="external">gulp-if</a> - 按照条件运行task.</li>
</ul>
<h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><ul>
<li><a href="https://github.com/mikaelbr/gulp-notify" target="_blank" rel="external">gulp-notify</a> - Gulp的通知插件.</li>
<li><a href="https://github.com/sindresorhus/gulp-size" target="_blank" rel="external">gulp-size</a> - 显示你的项目的大小.</li>
<li><a href="https://github.com/sindresorhus/gulp-debug" target="_blank" rel="external">gulp-debug</a> - 通过调试文件流来观察那些文件通过了你的Gulp管道.</li>
</ul>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ul>
<li><a href="https://github.com/sindresorhus/gulp-mocha" target="_blank" rel="external">gulp-mocha</a> - 运行<a href="https://github.com/mochajs/mocha" target="_blank" rel="external">Mocha</a>测试用例.</li>
<li><a href="https://github.com/sindresorhus/gulp-jasmine" target="_blank" rel="external">gulp-jasmine</a> - 在Node.js中运行<a href="https://github.com/jasmine/jasmine" target="_blank" rel="external">Jasmine 2</a> 测试用例.</li>
<li><a href="https://github.com/mllrsohn/gulp-protractor" target="_blank" rel="external">gulp-protractor</a> - 为<a href="https://github.com/angular/protractor" target="_blank" rel="external">Protractor</a>测试用例包裹Gulp.</li>
<li><a href="https://github.com/dylanb/gulp-coverage" target="_blank" rel="external">gulp-coverage</a> - 为Node.js覆盖相对于运行的测试运行独立的报告.</li>
<li><a href="https://github.com/karma-runner/gulp-karma" target="_blank" rel="external">gulp-karma</a> - 通过Gulp运行Karma测试用例.</li>
<li><a href="https://github.com/sindresorhus/gulp-ava" target="_blank" rel="external">gulp-ava</a>- 通过Gulp运行<a href="https://github.com/sindresorhus/ava" target="_blank" rel="external">AVA</a> 测试用例.</li>
</ul>
<h3 id="其他插件"><a href="#其他插件" class="headerlink" title="其他插件"></a>其他插件</h3><ul>
<li><a href="https://github.com/gulpjs/gulp-util" target="_blank" rel="external">gulp-util</a> - 包含一系列有用插件.</li>
<li><a href="https://github.com/floatdrop/gulp-plumber" target="_blank" rel="external">gulp-plumber</a> - 防止错误引起管道中断Prevent pipe breaking caused by errors.</li>
<li><a href="https://github.com/jackfranklin/gulp-load-plugins" target="_blank" rel="external">gulp-load-plugins</a> - 自动加载Gulp插件.</li>
<li><a href="https://github.com/ck86/main-bower-files" target="_blank" rel="external">main-bower-files</a> - 构建时自动获取bower库的文件.</li>
<li><a href="https://github.com/postcss/autoprefixer" target="_blank" rel="external">autoprefixer</a> - 解析CSS且根据规则添加浏览器兼容性前缀.</li>
<li><a href="https://github.com/floridoo/gulp-sourcemaps" target="_blank" rel="external">gulp-sourcemaps</a> - 提供source map支持.</li>
<li><a href="https://github.com/lazd/gulp-replace" target="_blank" rel="external">gulp-replace</a> - Gulp的一个字符串替换插件.</li>
<li><a href="https://github.com/hparra/gulp-rename" target="_blank" rel="external">gulp-rename</a> - 轻松重命名文件.</li>
<li><a href="https://github.com/sindresorhus/gulp-rev" target="_blank" rel="external">gulp-rev</a> - 在静态文件名的后面添加hash值，如: unicorn.css → unicorn-d41d8cd98f.css.</li>
<li><a href="https://github.com/sindresorhus/del" target="_blank" rel="external">del</a> - 使用globs删除文件/文件夹.</li>
<li><a href="https://github.com/robrich/gulp-exec" target="_blank" rel="external">gulp-exec</a> - 运行一个shell命令.</li>
<li><a href="https://github.com/sindresorhus/gulp-strip-debug" target="_blank" rel="external">gulp-strip-debug</a> - 除去javascript代码中的console,alert,debugger声明.</li>
<li><a href="https://github.com/unlight/gulp-cssimport" target="_blank" rel="external">gulp-cssimport</a> - 解析CSS文件，找到imports,将连接文件替换成imort声明.</li>
<li><a href="https://github.com/jonkemp/gulp-inline-css" target="_blank" rel="external">gulp-inline-css</a> - 将HTML中的css属性放到style标签中.</li>
<li><a href="https://github.com/shinnn/gulp-gh-pages" target="_blank" rel="external">gulp-gh-pages</a> - 将内容发布到GiHub有页面.</li>
<li><a href="https://github.com/Kagami/gulp-ng-annotate" target="_blank" rel="external">gulp-ng-annotate</a> - 通过<a href="https://github.com/olov/ng-annotate" target="_blank" rel="external">ng-annotate</a>添加Angular依赖注入.</li>
<li><a href="https://github.com/stevelacy/gulp-bump" target="_blank" rel="external">gulp-bump</a> - 通过Gulp Bump任何semvar JSON版本.</li>
<li><a href="https://github.com/coderhaoxin/gulp-file-include" target="_blank" rel="external">gulp-file-include</a> - 通过Gulp Include文件.</li>
<li><a href="https://github.com/sindresorhus/gulp-zip" target="_blank" rel="external">gulp-zip</a> - 以ZIP格式压缩文件.</li>
<li><a href="https://github.com/stevelacy/gulp-git" target="_blank" rel="external">gulp-git</a> - 通过Gulp运行git命令.</li>
<li><a href="https://github.com/sindresorhus/gulp-filter" target="_blank" rel="external">gulp-filter</a> - 使用globbing过滤文件.</li>
<li><a href="https://github.com/jas/gulp-preprocess" target="_blank" rel="external">gulp-preprocess</a> - 基于自定义内容或环境配置预处理文件.</li>
</ul>
<h2 id="脚手架"><a href="#脚手架" class="headerlink" title="脚手架"></a>脚手架</h2><h3 id="模板-1"><a href="#模板-1" class="headerlink" title="模板"></a>模板</h3><ul>
<li><a href="https://github.com/google/web-starter-kit" target="_blank" rel="external">web-starter-kit</a> - Google的Web Starter Kit.</li>
<li><a href="https://github.com/sindresorhus/gulp-plugin-boilerplate" target="_blank" rel="external">gulp-plugin-boilerplate</a> - 创建Gulp插件的开始模板.</li>
<li><a href="https://github.com/polymerelements/polymer-starter-kit" target="_blank" rel="external">polymer-starter-kit</a> -Polymer 1.0 应用的起点.</li>
<li><a href="https://github.com/este/este" target="_blank" rel="external">este</a> - 同构的web应用最全面的React/Flux开发栈和开始模板.</li>
<li><a href="https://github.com/mrmrs/mnml" target="_blank" rel="external">mnml</a> - 开发响应式HTML5/Sass项目的最小开始模板.</li>
<li><a href="https://github.com/cferdinandi/kraken" target="_blank" rel="external">kraken</a> 一个轻量级的、移动端优先的前端开发开始模板.</li>
<li><a href="https://github.com/jakemmarsh/angularjs-gulp-browserify-boilerplate" target="_blank" rel="external">angularjs-gulp-browserify-boilerplate</a> - 一个使用AngularJS, Sass, gulp, 和 Browserify技术的开始模板.</li>
<li><a href="https://github.com/poeticninja/hapi-ninja" target="_blank" rel="external">hapi-ninja</a> - 一个使用Node.js, Hapi, and Swig技术的开始模板.</li>
<li><a href="https://github.com/rappasoft/laravel-5-boilerplate" target="_blank" rel="external">laravel-5-boilerplate</a> - 一个Laravel 5 开始模板.</li>
<li><a href="https://github.com/wbkd/react-starterkit" target="_blank" rel="external">react-starterkit</a> - 包含react-router, Reflux, jest, webpack, gulp and Stylus的React开始模板.</li>
</ul>
<h3 id="Yeoman生成器"><a href="#Yeoman生成器" class="headerlink" title="Yeoman生成器"></a>Yeoman生成器</h3><ul>
<li><a href="https://github.com/yeoman/generator-gulp-webapp" target="_blank" rel="external">generator-gulp-webapp</a> - A 一个流行的web应用的gulp生成器.</li>
<li><a href="https://github.com/Swiip/generator-gulp-angular" target="_blank" rel="external">generator-gulp-angular</a> - 使用Gulp的AngularJS 的Yeoman生成器.</li>
<li><a href="https://github.com/randylien/generator-react-gulp-browserify" target="_blank" rel="external">generator-react-gulp-browserify</a> - 一个React库的Yeoman生成器，包含gulp, Browserify, Browsersync and Bootstrap.</li>
<li><a href="https://github.com/youngmountain/generator-node-gulp" target="_blank" rel="external">generator-node-gulp</a> - 一个Node.js模块生成器，包含gulp和 Mocha.</li>
<li><a href="https://github.com/niallobrien/generator-gulp-bootstrap" target="_blank" rel="external">generator-gulp-bootstrap</a> - 一个包含Bootstrap, gulp 和libsass的Yeoman生成器·.</li>
<li><a href="https://github.com/jgoux/generator-angulpify" target="_blank" rel="external">generator-angulpify</a> - 一个包含AngularJS, gulp和Browserify的Yeoman生成器.</li>
<li><a href="https://github.com/tmaximini/generator-ionic-gulp" target="_blank" rel="external">generator-ionic-gulp</a> - 一个Ionic工厂的Yeoman生成器.</li>
<li><a href="https://github.com/sindresorhus/generator-gulp-plugin-boilerplate" target="_blank" rel="external">generator-gulp-plugin-boilerplate</a> -一个输出 <a href="https://github.com/sindresorhus/gulp-plugin-boilerplate" target="_blank" rel="external">gulp plugin boilerplate</a>的脚手架.</li>
<li><a href="https://github.com/sondr3/generator-jekyllized" target="_blank" rel="external">generator-jekyllized</a> - 一个包含gulp, Sass, AutoPrefixer,资源优化，缓存等的Jekyll工作流.</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><a href="https://github.com/laravel/elixir" target="_blank" rel="external">elixir</a> - 一个为你的应用定义基本的gulp任务的干净、灵活的API.</li>
<li><a href="https://github.com/sindresorhus/gulp-app" target="_blank" rel="external">gulp-app</a> - 将Gulp作为一个应用(OS X).</li>
<li><a href="https://github.com/Lostmyname/lmn-gulp-tasks" target="_blank" rel="external">lmn-gulp-tasks</a> - gulp任务的单元测试示例.</li>
<li><a href="http://gulp-cookery.github.io/gulp-chef/" target="_blank" rel="external">gulp-chef</a> - 一个优雅的、简单的重复使用gulp task的方法.</li>
</ul>
<p>本文出处：<a href="http://www.cnblogs.com/-ding/p/5972162.html" target="_blank" rel="external">http://www.cnblogs.com/-ding/p/5972162.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;awesome-gulp中文版&quot;&gt;&lt;a href=&quot;#awesome-gulp中文版&quot; class=&quot;headerlink&quot; title=&quot;awesome-gulp中文版&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/alferov/aweso
    
    </summary>
    
      <category term="术" scheme="https://feahter.github.io/categories/%E6%9C%AF/"/>
    
    
      <category term="gulp" scheme="https://feahter.github.io/tags/gulp/"/>
    
      <category term="前端自动化、工程化" scheme="https://feahter.github.io/tags/%E5%89%8D%E7%AB%AF%E8%87%AA%E5%8A%A8%E5%8C%96%E3%80%81%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>前端大神</title>
    <link href="https://feahter.github.io/2016/12/08/%E5%89%8D%E7%AB%AF%E5%A4%A7%E7%A5%9E/"/>
    <id>https://feahter.github.io/2016/12/08/前端大神/</id>
    <published>2016-12-08T01:20:03.000Z</published>
    <updated>2016-12-08T02:30:59.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前端大神"><a href="#前端大神" class="headerlink" title="前端大神"></a>前端大神</h1><p>达者为师，站在巨人的肩膀上眺望，才能看得更远。</p>
<h2 id="1-1-国际"><a href="#1-1-国际" class="headerlink" title="1.1 国际"></a>1.1 国际</h2><ol>
<li><h3 id="Chris-Coyier"><a href="#Chris-Coyier" class="headerlink" title="Chris Coyier"></a><a href="http://chriscoyier.net/" target="_blank" rel="external">Chris Coyier</a></h3><p><a href="http://codepen.io/" target="_blank" rel="external">Codepen</a>创始人，<a href="http://css-tricks.com/" target="_blank" rel="external">css-tricks</a>站长。</p>
<p>联系方式：<br><a href="http://codepen.io/chriscoyier" target="_blank" rel="external">CodePen</a>、 <a href="http://dribbble.com/chriscoyier" target="_blank" rel="external">Dribbble</a>、 <a href="http://twitter.com/chriscoyier" target="_blank" rel="external">Twitter</a>、 <a href="http://github.com/chriscoyier" target="_blank" rel="external">GitHub</a>、 <a href="http://instagram.com/chriscoyier" target="_blank" rel="external">Instagram</a></p>
</li>
<li><h3 id="Sara-Soueidan"><a href="#Sara-Soueidan" class="headerlink" title="Sara Soueidan"></a><a href="https://sarasoueidan.com/" target="_blank" rel="external">Sara Soueidan</a></h3><p>2015 net awards(net杂志的年度颁奖盛典)的<a href="https://thenetawards.com/longlist/developer/" target="_blank" rel="external">年度开发者</a>，2015 O’Reilly Web Platform Awards（O’Reilly，著名的IT图书出版机构）,著名的前端开发者、作者、演讲者，主要关注HTML5, SVG, CSS and JavaScript等。</p>
<p>联系方式：<br><a href="https://github.com/SaraSoueidan" target="_blank" rel="external">Github</a>、 <a href="http://tympanus.net/codrops/author/sarasoueidan/" target="_blank" rel="external">Codrops</a>、 <a href="http://alistapart.com/author/SaraSoueidan" target="_blank" rel="external">A List Apart</a>、 <a href="https://dev.opera.com/authors/sara-soueidan/" target="_blank" rel="external">Dev.Opera</a>、 <a href="http://twitter.com/SaraSoueidan" target="_blank" rel="external">Twitter</a>、 <a href="https://plus.google.com/115621441131126533845/posts" target="_blank" rel="external">Google+</a></p>
</li>
<li><h3 id="Hugo-Giraudel"><a href="#Hugo-Giraudel" class="headerlink" title="Hugo Giraudel"></a><a href="http://hugogiraudel.com/" target="_blank" rel="external">Hugo Giraudel</a></h3><p>知名的SASS专家，2015 net awards(net杂志的年度颁奖盛典)的<a href="https://thenetawards.com/longlist/developer/" target="_blank" rel="external">年度开发者</a>。法国人，现居德国柏林。</p>
<p>联系方式： <a href="https://github.com/HugoGiraudel" target="_blank" rel="external">Github</a>、 <a href="http://twitter.com/HugoGiraudel" target="_blank" rel="external">Twitter</a>、 <a href="https://www.sitepoint.com/author/hgiraudel/" target="_blank" rel="external">Sitepoint</a>、 <a href="https://plus.google.com/101697878480386449961" target="_blank" rel="external">Google+</a></p>
</li>
<li><h3 id="Lea-Verou"><a href="#Lea-Verou" class="headerlink" title="Lea Verou"></a><a href="http://lea.verou.me/" target="_blank" rel="external">Lea Verou</a></h3><p>网页设计师、前端开发者、技术极客、演讲家、作家，麻省理工学院计算机与人工智能实验室助理研究员，《CSS Secrets》作者，prefixfree.js作者，在世界各地进行过60多次演讲，<a href="http://lea.verou.me/cv.html" target="_blank" rel="external">简历</a>。希腊人，现居美国马萨诸塞州剑桥市（大波士顿地区）。</p>
<p>联系方式：<br><a href="http://twitter.com/leaverou" target="_blank" rel="external">Twitter</a>、 <a href="http://www.facebook.com/leaverou" target="_blank" rel="external">Facebook</a>、 <a href="https://github.com/LeaVerou" target="_blank" rel="external">Github</a>、 <a href="http://dribbble.com/LeaVerou" target="_blank" rel="external">Dribbble</a></p>
</li>
<li><h3 id="Paul-Irish"><a href="#Paul-Irish" class="headerlink" title="Paul Irish"></a><a href="http://paulirish.com/" target="_blank" rel="external">Paul Irish</a></h3><p>谷歌Chrome团队前端工程师，主要关注开发者工具，是<a href="http://modernizr.com/" target="_blank" rel="external">Modernizr</a>、<a href="http://yeoman.io/" target="_blank" rel="external">Yeoman</a>、<a href="http://css3please.com/" target="_blank" rel="external">CSS3 Please</a>、<a href="http://html5boilerplate.com/" target="_blank" rel="external">HTML5 Boilerplate</a>等工具的开发者，合作开发了诸多项目，详情了解他的<a href="http://www.paulirish.com/about/" target="_blank" rel="external">About</a>。</p>
<p>联系方式：<br><a href="http://twitter.com/paul_irish" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/paulirish/" target="_blank" rel="external">Github</a>、 <a href="http://paulirish.com/+" target="_blank" rel="external">Google+</a>，<br>请在个人主页<a href="http://www.paulirish.com/contact-me/" target="_blank" rel="external">contact</a>联系他。</p>
</li>
<li><h3 id="John-Resig"><a href="#John-Resig" class="headerlink" title="John Resig"></a><a href="http://ejohn.org/" target="_blank" rel="external">John Resig</a></h3><p><a href="http://jquery.com/" target="_blank" rel="external">jQuery</a>、<a href="http://processingjs.org/" target="_blank" rel="external">Processing.js</a>、<a href="http://sizzlejs.com/" target="_blank" rel="external">Sizzle.js</a>等项目作者，现为<a href="http://khanacademy.org/" target="_blank" rel="external">可汗学院</a>计算机学院负责人。<a href="https://book.douban.com/subject/26638316/" target="_blank" rel="external"><strong>JS忍者秘籍</strong></a>(Secrets of the JavaScript Ninja)、<a href="https://book.douban.com/subject/3007076/" target="_blank" rel="external"><strong>精通JavaScript</strong></a>(Pro JavaScript Techniques)作者。</p>
<p>联系方式：<br><a href="http://twitter.com/jeresig" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/jeresig" target="_blank" rel="external">Github</a>、<br>邮箱:jeresig@gmail.com<br>请在邮箱联系他之前，先读<a href="http://ejohn.org/about/" target="_blank" rel="external">联系说明</a></p>
</li>
<li><h3 id="Cody-Lindley"><a href="#Cody-Lindley" class="headerlink" title="Cody Lindley"></a><a href="http://www.codylindley.com/" target="_blank" rel="external">Cody Lindley</a></h3><p><a href="https://book.douban.com/subject/25837367/" target="_blank" rel="external"><strong>JavaScript启示录</strong></a>(Javascript Enlightment)、<a href="https://book.douban.com/subject/25882606/" target="_blank" rel="external">DOM启蒙</a>(Dom Enlightment)、<a href="http://www.javascriptenlightenment.com/JavaScript_Enlightenment.pdf" target="_blank" rel="external"><strong>jQuery Englightment</strong></a>、<a href="https://book.douban.com/subject/4149124/" target="_blank" rel="external"><strong>jQuery cookbook</strong></a>等书的作者。<br><a href="http://www.telerik.com/kendo-ui" target="_blank" rel="external">Kendo UI</a>、<a href="http://codylindley.com/thickbox/" target="_blank" rel="external">ThickBox</a>、<a href="http://codylindley.com/jqueryselectors/" target="_blank" rel="external">jqueryselectors</a>等项目开发者。</p>
<p>联系方式：<br><a href="http://twitter.com/jeresig" target="_blank" rel="external">Twitter</a>、 <a href="http://www.facebook.com/cody.lindley" target="_blank" rel="external">Facebook</a>、 <a href="http://www.linkedin.com/in/codylindley" target="_blank" rel="external">Linkedin</a>、 <a href="https://github.com/codylindley" target="_blank" rel="external">Github</a>、 <a href="http://www.google.com/profiles/codylindley" target="_blank" rel="external">Google+</a><br>邮箱:contact@codylindley.com</p>
</li>
<li><h3 id="David-Walsh"><a href="#David-Walsh" class="headerlink" title="David Walsh"></a><a href="https://davidwalsh.name/" target="_blank" rel="external">David Walsh</a></h3><p><a href="https://www.mozilla.org/zh-CN/firefox/new/" target="_blank" rel="external">Mozilla</a>资深web开发者、前端工程师，<a href="https://mootools.net/" target="_blank" rel="external"> MooTools</a>JS框架的核心开发者。</p>
<p>联系方式：<br><a href="https://twitter.com/davidwalshblog" target="_blank" rel="external">Twitter</a>、 <a href="https://facebook.com/davidwalshblog" target="_blank" rel="external">Facebook</a>、 <a href="https://linkedin.com/in/davidjameswalsh" target="_blank" rel="external">Linkedin</a>、 <a href="https://github.com/darkwing" target="_blank" rel="external">Github</a>、 <a href="https://plus.google.com/114538814489633467974?rel=author" target="_blank" rel="external">Google+</a>、<br>邮箱:david@davidwalsh.name<br><a href="https://davidwalsh.name/contact" target="_blank" rel="external">联系页面</a>联系他</p>
</li>
<li><h3 id="Zeno-Rocha"><a href="#Zeno-Rocha" class="headerlink" title="Zeno Rocha"></a><a href="https://zenorocha.com/" target="_blank" rel="external">Zeno Rocha</a></h3><p><a href="https://www.liferay.com/" target="_blank" rel="external">Liferay</a>开发主管，Google技术专家，<a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="external">clipboard.js</a>、<a href="https://github.com/zenorocha/browser-diet" target="_blank" rel="external">browser-diet</a>等项目开发者。巴西人，现居加拿大。</p>
<p>联系方式：<br><a href="https://twitter.com/zenorocha" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/zenorocha" target="_blank" rel="external">Github</a>、 <a href="http://blog.csdn.net/whqet/article/details/hi@zenorocha.com" target="_blank" rel="external">邮箱</a></p>
</li>
<li><h3 id="Thomas-Fuchs"><a href="#Thomas-Fuchs" class="headerlink" title="Thomas Fuchs"></a><a href="http://mir.aculo.us/" target="_blank" rel="external">Thomas Fuchs</a></h3><p><a href="http://zeptojs.com/" target="_blank" rel="external">Zepto.js</a>、<a href="https://github.com/madrobby/keymaster" target="_blank" rel="external">keymaster</a>等项目作者。</p>
<p>联系方式：<br><a href="http://twitter.com/thomasfuchs" target="_blank" rel="external">Twitter</a> <a href="https://github.com/madrobby" target="_blank" rel="external">Github</a><br>邮箱：thomas@fesch.at或thomas@slash7.com</p>
</li>
<li><h3 id="Hampton-Catlin"><a href="#Hampton-Catlin" class="headerlink" title="Hampton Catlin"></a><a href="http://www.hamptoncatlin.com/" target="_blank" rel="external">Hampton Catlin</a></h3><p><a href="http://sass-lang.com/" target="_blank" rel="external">SASS</a>、<a href="http://haml-lang.com/" target="_blank" rel="external">Haml</a>、libsass、SassC等项目作者。<a href="http://www.responsivewebdesignforteams.com/" target="_blank" rel="external">Responsive Web Design For Teams </a>图书作者。</p>
<p>联系方式：<br><a href="http://www.twitter.com/hcatlin" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/hcatlin" target="_blank" rel="external">Github</a>、<br>邮箱：hcatlin@gmail.com或contact@hamptoncatlin.com</p>
</li>
<li><h3 id="Mark-Otto"><a href="#Mark-Otto" class="headerlink" title="Mark Otto"></a><a href="http://mdo.fm/" target="_blank" rel="external">Mark Otto</a></h3><p>Github设计主管，<a href="http://getbootstrap.com/" target="_blank" rel="external">Bootstrap</a>作者。</p>
<p>联系方式：<br><a href="https://twitter.com/mdo" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/mdo" target="_blank" rel="external">Github</a>、 <a href="https://dribbble.com/mdo" target="_blank" rel="external">Dribble</a>、 <a href="http://markdotto.com/" target="_blank" rel="external">blog</a>、<br>邮箱：markdotto@gmail.com、或是github上<a href="https://github.com/mdo/ama" target="_blank" rel="external">提问</a>。</p>
</li>
<li><h3 id="Sindre-Sorhus"><a href="#Sindre-Sorhus" class="headerlink" title="Sindre Sorhus"></a><a href="https://github.com/sindresorhus" target="_blank" rel="external">Sindre Sorhus</a></h3><p><a href="https://github.com/avajs/ava" target="_blank" rel="external">AVA</a>、<a href="https://github.com/chalk/chalk" target="_blank" rel="external">chalk</a>、<a href="http://yeoman.io/" target="_blank" rel="external">yeoman</a>等项目开创者，创建多个流行github项目<a href="https://github.com/sindresorhus/awesome" target="_blank" rel="external">awesome</a>、<a href="[https://github.com/sindresorhus/awesome-nodejs](https://github.com/sindresorhus/awesome-nodejs">awesome-nodejs</a>)等。</p>
<p>联系方式：<br><a href="https://twitter.com/sindresorhus" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/sindresorhus" target="_blank" rel="external">Github</a>、<br>邮箱：sindresorhus@gmail.com</p>
</li>
<li><h3 id="Una-Kravets"><a href="#Una-Kravets" class="headerlink" title="Una Kravets"></a><a href="https://una.im/about/" target="_blank" rel="external">Una Kravets</a></h3><p>前端开发者、设计师，擅长使用CSS去做美妙的事情，CSS图片美化库<a href="https://github.com/una/CSSgram" target="_blank" rel="external">CSSgram</a>项目开发者,IBM Design团队成员。</p>
<p>联系方式：<br><a href="http://twitter.com/una" target="_blank" rel="external">Twitter</a>、 <a href="http://github.com/una" target="_blank" rel="external">Github</a>、 <a href="http://dribbble.com/una" target="_blank" rel="external">Dribble</a>、 <a href="http://codepen.io/una" target="_blank" rel="external">Codepen</a>、 <a href="http://www.linkedin.com/pub/una-kravets/30/827/a35/" target="_blank" rel="external">Linkedin</a>、 <a href="https://una.im/" target="_blank" rel="external">blog</a>、<br>邮箱：una.kravets@gmail.com</p>
</li>
<li><h3 id="ESTELLE-WEYL"><a href="#ESTELLE-WEYL" class="headerlink" title="ESTELLE WEYL"></a><a href="http://www.standardista.com/" target="_blank" rel="external">ESTELLE WEYL</a></h3><p>资深web开发人员，技术书女作家，写就<a href="https://book.douban.com/subject/6969713/" target="_blank" rel="external"><strong>HTML5与CSS3实战指南</strong></a>、<a href="https://book.douban.com/subject/26731854/" target="_blank" rel="external">Flexible Boxes in CSS : Free Yourself with Flexbox</a>、<a href="https://book.douban.com/subject/26782226/" target="_blank" rel="external">Transitions and Animations in CSS: Adding Motion with CSS</a>、<a href="https://book.douban.com/subject/6865682/" target="_blank" rel="external">Mobile HTML5 : Using the latest today</a>等。</p>
<p>联系方式：</p>
<p><a href="http://twitter.com/estellevw" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/estelle" target="_blank" rel="external">Github</a>、 <a href="http://lanyrd.com/profile/estellevw/" target="_blank" rel="external">演讲</a>、 <a href="https://book.douban.com/search/Estelle%20Weyl" target="_blank" rel="external">图书</a>、<br>邮箱：estelle@weyl.org、或者个人网站留言提问。</p>
</li>
<li><h3 id="Alex-Sexton"><a href="#Alex-Sexton" class="headerlink" title="Alex Sexton"></a><a href="https://alexsexton.com/" target="_blank" rel="external">Alex Sexton</a></h3><p><a href="http://modernizr.com/" target="_blank" rel="external">Modernizr</a>、<a href="https://jquery.org/team/" target="_blank" rel="external">jQuery</a>、<a href="http://dojofoundation.org/about/board-members" target="_blank" rel="external">Dojo Foundation</a>等项目核心成员。</p>
<p>联系方式：<br><a href="https://twitter.com/SlexAxton" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/SlexAxton" target="_blank" rel="external">Github</a>、 <a href="https://www.google.com/+AlexSexton" target="_blank" rel="external">Google+</a>、<br>邮箱：alexsexton@gmail.com</p>
</li>
<li><h3 id="Christian-Heilmann"><a href="#Christian-Heilmann" class="headerlink" title="Christian Heilmann"></a><a href="https://www.christianheilmann.com/" target="_blank" rel="external">Christian Heilmann</a></h3><p>Mozilla首席html5布道者，知名web开发者、技术作家，<a href="https://book.douban.com/subject/3137323/" target="_blank" rel="external">Web开发解决方案</a>、<a href="https://book.douban.com/subject/3014491/" target="_blank" rel="external">The Art &amp; Science of JavaScript</a>作者之一。</p>
<p>联系方式：<br><a href="http://twitter.com/codepo8" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/codepo8" target="_blank" rel="external">Github</a>、 <a href="https://plus.google.com/111552931212713155841/posts" target="_blank" rel="external">Google+</a>、 <a href="https://www.sitepoint.com/author/christian-heilmann/" target="_blank" rel="external">Sitepoint</a>、 <a href="https://www.smashingmagazine.com/author/christian-heilmann/" target="_blank" rel="external">Smashing magazine</a>、<br>邮箱：chris.heilmann@gmail.com、或chris@christianheilmann.com</p>
</li>
<li><h3 id="Kyle-Simpson"><a href="#Kyle-Simpson" class="headerlink" title="Kyle Simpson"></a><a href="http://getify.me/" target="_blank" rel="external">Kyle Simpson</a></h3><p>从事跟JS有关的一切事儿，写书、教学、演讲、开发等等，《<strong>You Don’t Know JS </strong>》系列丛书作者，<a href="https://book.douban.com/subject/26351021/" target="_blank" rel="external">你不知道的JavaScript（上卷）</a>、<a href="https://book.douban.com/subject/10773333/" target="_blank" rel="external">HTML5 Cookbook</a>作者。</p>
<p>联系方式：<br><a href="https://facebook.com/kyle-simpson" target="_blank" rel="external">Facebook</a>、 <a href="https://github.com/getify" target="_blank" rel="external">Github</a>、 <a href="http://getify.me/@google+" target="_blank" rel="external">Google+</a>、 <a href="http://getify.me/@linkedin" target="_blank" rel="external">Linkedin</a>、 <a href="http://stackoverflow.com/users/228852/kyle-simpson" target="_blank" rel="external">Stackoverflow.com</a>、<br>邮箱：getify@gmail.com</p>
</li>
<li><h3 id="Ana-Tudor"><a href="#Ana-Tudor" class="headerlink" title="Ana Tudor"></a><a href="https://thebabydino.github.io/" target="_blank" rel="external">Ana Tudor</a></h3><p>Codenpen上玩CSS的女孩子，很多效果非常厉害。</p>
<p>联系方式：<br><a href="https://twitter.com/thebabydino" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/thebabydino" target="_blank" rel="external">Github</a>、 <a href="http://codepen.io/thebabydino/" target="_blank" rel="external">Codepen</a>、 <a href="http://stackoverflow.com/users/1397351/ana" target="_blank" rel="external">Stackoverflow.com</a></p>
</li>
<li><h3 id="Dudley-Storey"><a href="#Dudley-Storey" class="headerlink" title="Dudley Storey"></a><a href="http://thenewcode.com/" target="_blank" rel="external">Dudley Storey</a></h3><p>《<a href="https://book.douban.com/subject/20780533/" target="_blank" rel="external">Pro Css3 Animation</a>》图书作者，CSSSlidy等项目作者。</p>
<p>联系方式：<br><a href="https://twitter.com/dudleystorey" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/dudleystorey" target="_blank" rel="external">Github</a>、 <a href="https://plus.google.com/+DudleyStorey/" target="_blank" rel="external">Google+</a>、 <a href="http://codepen.io/dudleystorey/" target="_blank" rel="external">Codepen</a>、<br>邮箱：dudley.storey@gmail.com</p>
</li>
<li><h3 id="Hakim-El-Hattab"><a href="#Hakim-El-Hattab" class="headerlink" title="Hakim El Hattab"></a><a href="http://hakim.se/" target="_blank" rel="external">Hakim El Hattab</a></h3><p>来自瑞典的前端开发工程师、界面设计师，<a href="https://slides.com/" target="_blank" rel="external">slides</a>创始人，<a href="https://github.com/hakimel/reveal.js" target="_blank" rel="external">reveal.js</a>、Ladda、stroll.js等项目开发者，详情参加个人主页。</p>
<p>联系方式：<br><a href="http://twitter.com/hakimel" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/hakimel" target="_blank" rel="external">Github</a>、 <a href="http://codepen.io/hakimel" target="_blank" rel="external">Codepen</a>、<br>邮箱：hakim.elhattab@gmail.com</p>
</li>
<li><h3 id="Angus-Croll"><a href="#Angus-Croll" class="headerlink" title="Angus Croll"></a><a href="http://anguscroll.com/" target="_blank" rel="external">Angus Croll</a></h3><p>Twitter公司前端工程师，<a href="http://flightjs.github.io/" target="_blank" rel="external">Twitter Flight</a>项目合作开发者,<a href="http://anguscroll.com/hemingway/index.html" target="_blank" rel="external">If Hemingway Wrote JavaScript</a>作者。</p>
<p>联系方式：<br><a href="https://twitter.com/angustweets" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/angus-c" target="_blank" rel="external">Github</a>、 <a href="http://codepen.io/hakimel" target="_blank" rel="external">Codepen</a>、<br>邮箱：anguscroll@gmail.com</p>
</li>
<li><h3 id="Nicolas-Gallagher"><a href="#Nicolas-Gallagher" class="headerlink" title="Nicolas Gallagher"></a><a href="http://nicolasgallagher.com/" target="_blank" rel="external">Nicolas Gallagher</a></h3><p>Twitter公司前端工程师，<a href="https://github.com/necolas/normalize.css" target="_blank" rel="external">normalize.css</a>项目创始人，bower、rework、postcss、npm dom等项目核心参与者。</p>
<p>联系方式：<br><a href="http://twitter.com/necolas" target="_blank" rel="external">Twitter</a>、 <a href="http://github.com/necolas" target="_blank" rel="external">Github</a>、 <a href="http://www.linkedin.com/in/nicolasgallagher" target="_blank" rel="external">Linkedin</a>、<br>邮箱：nicolas@nicolasgallagher.com</p>
</li>
<li><h3 id="TJ-Holowaychuk"><a href="#TJ-Holowaychuk" class="headerlink" title="TJ Holowaychuk"></a><a href="http://tjholowaychuk.com/" target="_blank" rel="external">TJ Holowaychuk</a></h3><p>TJ Holowaychuk ，程序员兼艺术家，Koa、Co、Express、jade、mocha、node-canvas、commander.js 等知名开源项目的创建和贡献者。</p>
<p>联系方式：<br><a href="http://twitter.com/tjholowaychuk" target="_blank" rel="external">Twitter</a>、 <a href="http://github.com/tj" target="_blank" rel="external">Github</a>、 <a href="http://tjholowaychuk.com/blog/" target="_blank" rel="external">Blog</a>、 <a href="http://www.instagram.com/tjholowaychuk2" target="_blank" rel="external">Instagram</a>、<br>邮箱：tj@tjholowaychuk.com</p>
</li>
<li><h3 id="Addy-Osmani"><a href="#Addy-Osmani" class="headerlink" title="Addy Osmani"></a><a href="http://addyosmani.com/" target="_blank" rel="external">Addy Osmani</a></h3><p>Addy Osmani ，谷歌前端开发工程师，创建了 TodoMVC、jQuery UI Bootstrap、jQuery Plugin Patterns 和 Backbone Paginator，出版了《Learning JavaScript Design Patterns》和《Developing Backbone.js Applications》两本技术书籍，而且还是著名的 jQuery、Modernizr 以及Backbone.js 框架的贡献者。</p>
<p>联系方式：<br><a href="https://twitter.com/addyosmani" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/addyosmani" target="_blank" rel="external">Github</a>、 <a href="https://developers.google.com/web/shows/ttt/" target="_blank" rel="external">Youtube</a>、<br>邮箱：addyosmani@gmail.com</p>
</li>
<li><h3 id="Douglas-Crockford"><a href="#Douglas-Crockford" class="headerlink" title="Douglas Crockford"></a><a href="http://www.crockford.com/" target="_blank" rel="external">Douglas Crockford</a></h3><p>Douglas Crockford是JavaScript开发社区最知名的权威，是JSON、JSLint、JSMin和ADSafe之父，是《JavaScript: The Good Parts》的作者。他同时也服务于ECMA的JavaScript2.0技术委员会（TC39）。</p>
<p>联系方式：<br><a href="https://github.com/douglascrockford" target="_blank" rel="external">Github</a>、 <a href="https://plus.google.com/u/0/+DouglasCrockfordEsq" target="_blank" rel="external">Google+</a>、<br>邮箱：douglas@crockford.com</p>
</li>
<li><h3 id="Mike-Bostock"><a href="#Mike-Bostock" class="headerlink" title="Mike Bostock"></a><a href="http://bost.ocks.org/" target="_blank" rel="external">Mike Bostock</a></h3><p>Mike Bostock，纽约时报图形编辑，知名可视化库 <a href="http://d3.org/" target="_blank" rel="external">D3.js</a>的主要作者。</p>
<p>联系方式：<br><a href="https://twitter.com/mbostock" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/mbostock" target="_blank" rel="external">Github</a>、<br>邮箱：mike@ocks.org</p>
</li>
<li><h3 id="Mr-doob"><a href="#Mr-doob" class="headerlink" title="Mr.doob"></a><a href="http://mrdoob.com/" target="_blank" rel="external">Mr.doob</a></h3><p>Mr.doob (Ricardo Cabello Migue) 是JS三维模型库<a href="http://threejs.org/" target="_blank" rel="external">three.js</a>， <a href="http://www.chromeexperiments.com/detail/code-editor/" target="_blank" rel="external">Code Editor</a> 的作者。</p>
<p>联系方式：<br><a href="http://twitter.com/mrdoob" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/mrdoob" target="_blank" rel="external">Github</a>、</p>
</li>
<li><h3 id="Jessica-Lord"><a href="#Jessica-Lord" class="headerlink" title="Jessica Lord"></a><a href="https://jlord.github.io/" target="_blank" rel="external">Jessica Lord</a></h3><p>Jessica Lord， 2013年5月份加入Github设计团队。是开源项目sheetsee.js的作者。</p>
<p>联系方式：<br><a href="http://www.twitter.com/jllord" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/jlord" target="_blank" rel="external">Github</a>、<br>邮箱： to.jlord@gmail.com</p>
</li>
<li><h3 id="Jeremy-Ashkenas"><a href="#Jeremy-Ashkenas" class="headerlink" title="Jeremy Ashkenas"></a><a href="http://ashkenas.com/" target="_blank" rel="external">Jeremy Ashkenas</a></h3><p>Jeremy Ashkenas,纽约时报图形编辑，<a href="http://underscorejs.org/" target="_blank" rel="external">Underscore.js</a>、<a href="http://backbonejs.org/" target="_blank" rel="external">backbone.js</a>、<a href="http://coffeescript.org/" target="_blank" rel="external">CoffeeScript</a>的主要作者。</p>
<p>联系方式：<br><a href="http://www.twitter.com/jashkenas" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/jashkenas" target="_blank" rel="external">Github</a>、<br>邮箱： jashkenas@gmail.com</p>
</li>
</ol>
<h2 id="1-2-国内"><a href="#1-2-国内" class="headerlink" title="1.2 国内"></a>1.2 国内</h2><ol>
<li><ol>
<li><h3 id="玉伯"><a href="#玉伯" class="headerlink" title="玉伯"></a><a href="https://github.com/lifesinger/blog/issues" target="_blank" rel="external">玉伯</a></h3><p>玉伯（王保平），淘宝前端类库 KISSY、前端模块化开发框架SeaJS、前端基础类库Arale的创始人。2003-2006 年，中科院物理所研究生，Fortran 与 C 程序员，喜爱实验模拟和数值计算。 2006-2008 年，在中科院软件所互联网实验室从事项目管理软件的研发，C# 与 Java 爱好者。 2008 年 4 月份加入淘宝，就职于 UED 部门。2009 年起，组建前端架构团队，在首页维护、全网性能优化、类库研发、知识沉淀、工具应用等方面取得了丰硕成果。</p>
<p>联系方式：<br><a href="http://weibo.com/lifesinger" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/lifesinger" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/lifesinger" target="_blank" rel="external">Github</a>、<br>邮箱：lifesinger@gmail.com</p>
</li>
<li><h3 id="阮一峰"><a href="#阮一峰" class="headerlink" title="阮一峰"></a><a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="external">阮一峰</a></h3><p>70后，在上海出生和长大，大学读经济学。工作了几年，又去读了世界经济的研究生，毕业后，在上海一所本地高校当了老师，教财经类的课程。最近，去了支付宝的前端团队，在玉伯负责的”体验技术部”工作，目前主要从事JavaScript和Node.js的开发。</p>
<p>联系方式：<br><a href="http://weibo.com/ruanyf" target="_blank" rel="external">微博</a>、 <a href="https://github.com/ruanyf" target="_blank" rel="external">Github</a>、 <a href="https://twitter.com/ruanyf" target="_blank" rel="external">Twitter</a>、<br>邮箱：yifeng.ruan@gmail.com</p>
</li>
<li><h3 id="司徒正美"><a href="#司徒正美" class="headerlink" title="司徒正美"></a><a href="http://www.cnblogs.com/rubylouvre/" target="_blank" rel="external">司徒正美</a></h3><p>钟钦成，网名司徒正美，著名的Java专家，去哪儿网前端架构师，立志做考古学家的日语系工程师，穿梭于二次元与二进制间的“魔法师”，做过陶艺，写过小说，涉猎Java、Ruby、 Java。曾出版《Java框架设计》一书。</p>
<p>联系方式:<br><a href="http://weibo.com/jslouvre" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/si-tu-zheng-mei" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/RubyLouvre" target="_blank" rel="external">Github</a>、<br>邮箱:cheng19840218@gmail.com</p>
</li>
<li><h3 id="朴灵"><a href="#朴灵" class="headerlink" title="朴灵"></a><a href="http://diveintonode.org/" target="_blank" rel="external">朴灵</a></h3><p>朴灵，真名田永强，文艺型码农，Node.js布道者。现就职于阿里巴巴数据平台，任资深工程师，著有《深入浅出Node.js》。他活跃于CNode社区，是线下会议NodeParty的组织者，同时也是JSConf China（沪JS、京JS，以及杭JS）的组织者之一。朴灵热爱开源，是多个Node.js模块的作者。<a href="https://github.com/JacksonTian/fks" target="_blank" rel="external">前端技能汇总</a>项目star7000+。</p>
<p>联系方式：<br><a href="http://weibo.com/shyvo" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/po-ling" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/JacksonTian" target="_blank" rel="external">Github</a>、<br>邮箱:shyvo1987@gmail.com</p>
</li>
<li><h3 id="尤小右"><a href="#尤小右" class="headerlink" title="尤小右"></a><a href="http://evanyou.me/" target="_blank" rel="external">尤小右</a></h3><p>本名尤雨溪，目前在 Google Creative Lab 就职。vue.js 项目作者。</p>
<p>联系方式：<br><a href="http://weibo.com/arttechdesign" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/evanyou" target="_blank" rel="external">知乎</a>、 <a href="https://twitter.com/youyuxi" target="_blank" rel="external">Twitter</a>、 <a href="https://github.com/yyx990803" target="_blank" rel="external">Github</a></p>
</li>
<li><h3 id="贺师俊"><a href="#贺师俊" class="headerlink" title="贺师俊"></a><a href="http://johnhax.net/" target="_blank" rel="external">贺师俊</a></h3><p>贺师俊，网名 Hax，百姓网前端技术专家。有年头的 Web 开发者，信仰 Web 标准，HTML 纯化论者 +CSS 理想主义者 +JavaScript 改革派 +REST 信徒。 他致力于构建真正实践互联网开放理念的 Web 产品，并平衡需求、技术和人性因素。所以在写代码以外，他还热切的关注可用性、无障碍性乃至更广泛意义上的用户体验（譬如售后服务）。 作为一个坚持己见的人，Hax 因犀利的技术批评为人所知，其拍砖对象下到写书神棍上至业界权威，中间亦包括他的同事和朋友——因为他深信正直坦诚是技术人员必须坚守的美德，并希望通过自由而热烈的讨论推动技术社群不断成长、永葆活力。 Hax 毕业于复旦大学，感兴趣的领域除了 Web 标准、协议、架构以及与 Web 相关的各种具体技术之外，还包括交互设计、编程语言和方法论，最近则迷上了字体和排版。</p>
<p>联系方式：<br><a href="http://weibo.com/haxy" target="_blank" rel="external">微博</a>、 <a href="https://twitter.com/haxy" target="_blank" rel="external">Twitter</a>、 <a href="https://www.zhihu.com/people/he-shi-jun" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/hax" target="_blank" rel="external">Github</a>、<br>邮箱：johnhax@gmail.com</p>
</li>
<li><h3 id="周爱民"><a href="#周爱民" class="headerlink" title="周爱民"></a><a href="http://weibo.com/aimingoo" target="_blank" rel="external">周爱民</a></h3><p>曾阿里、豌豆荚做架构师，现为<a href="https://ruff.io/" target="_blank" rel="external">Ruff</a>架构师。著有《JAVASCRIPT语言精髓与编程实践》、《大道至简——软件工程实践者的思想》等业内名作。</p>
<p>联系方式：<br><a href="http://weibo.com/aimingoo" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/aimingoo" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/aimingoo" target="_blank" rel="external">Github</a>、 <a href="http://blog.csdn.net/aimingoo" target="_blank" rel="external">CSDN</a></p>
</li>
<li><h3 id="徐涛"><a href="#徐涛" class="headerlink" title="徐涛"></a><a href="http://www.cnblogs.com/TomXu/" target="_blank" rel="external">徐涛</a></h3><p>汤姆大叔，原名徐涛，资深Web开发工程师，精通JavaScript、CSS、HTML5等Web开发技术，以及Bootstrap等各种主流Web开发框架。擅长Web系统的架构、设计与开发，参与过全球最大婚恋网站Match、全球最大在线旅游网站Expedia、波音公司、GE医疗和万达集团等多个国际知名企业的Web项目的架构与设计。他还是一位资深的微软技术专家，曾获得MCP、MCTS、MCDBA等近十项认证。翻译了《Java Script编程精解》、《Javascript启示录》、《编写可测试的JavaScript代码》、《Backbone.js应用程序开发》、《JavaScript忍者秘籍》、《JavaScript设计模式》等多本JavaScript方面的著作。</p>
<p>联系方式：<br><a href="http://weibo.com/TomXuTao" target="_blank" rel="external">微博</a>、 <a href="http://www.cnblogs.com/TomXu/" target="_blank" rel="external">博客</a></p>
</li>
<li><h3 id="廖雪峰"><a href="#廖雪峰" class="headerlink" title="廖雪峰"></a><a href="http://www.liaoxuefeng.com/" target="_blank" rel="external">廖雪峰</a></h3><p>技术作家，十年软件开发经验，业余产品经理，精通Java/Python/Ruby/Visual Basic/Objective C等，对开源框架有深入研究，著有号称史上最浅显易懂的<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">Git教程</a>，口碑不错的《<a href="http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="external">JS教程</a>》，多个业余开源项目托管在GitHub。</p>
<p>联系方式:<br><a href="http://weibo.com/liaoxuefeng" target="_blank" rel="external">微博</a>、 <a href="https://twitter.com/liaoxuefeng" target="_blank" rel="external">Twitter</a>、 <a href="https://www.zhihu.com/people/liaoxuefeng" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/michaelliao" target="_blank" rel="external">Github</a>、<br>邮箱：askxuefeng@gmail.com</p>
</li>
<li><h3 id="勾三股四"><a href="#勾三股四" class="headerlink" title="勾三股四"></a><a href="http://jiongks.name/" target="_blank" rel="external">勾三股四</a></h3><p>勾三股四，本名赵锦江，阿里巴巴高级前端工程师，前北京傲游前端开发部经理。</p>
<p>联系方式:<br><a href="http://weibo.com/mx006" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/jinjiang" target="_blank" rel="external">知乎</a>、 <a href="http://github.com/jinjiang/" target="_blank" rel="external">Github</a>、<br>邮箱：zhaojinjiang@me</p>
</li>
<li><h3 id="寒冬winter"><a href="#寒冬winter" class="headerlink" title="寒冬winter"></a><a href="http://winter-cn.cnblogs.com/" target="_blank" rel="external">寒冬winter</a></h3><p>本名程劭非，花名寒泉，前端工程师，JavaScript 专家。江湖人称“计算机之子”。先后在微软，盛大，阿里巴巴工作，目前是手机淘宝前端 leader。</p>
<p>联系方式：<br><a href="http://weibo.com/wintercn" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/evanyou" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/wintercn" target="_blank" rel="external">Github</a>、 <a href="http://winter-cn.cnblogs.com/" target="_blank" rel="external">博客</a>、<br>邮箱：csf178@gmail.com</p>
</li>
<li><h3 id="徐飞-民工精髓"><a href="#徐飞-民工精髓" class="headerlink" title="徐飞(民工精髓)"></a><a href="https://github.com/xufei/blog" target="_blank" rel="external">徐飞(民工精髓)</a></h3><p>苏宁云商前端架构师，国内知名前端，博客里的Angular教程颇多拥趸。<br>徐飞同志讲话要点：技术人员应当乐于助人，有好东西要主动拿出来分享，资产阶级知识分子垄断技术书籍的现象再也不能出现了！</p>
<p>联系方式:<br><a href="http://weibo.com/sharpmaster" target="_blank" rel="external">微博</a>、 <a href="https://github.com/xufei" target="_blank" rel="external">Github</a>、 <a href="https://github.com/xufei/blog" target="_blank" rel="external">博客</a>、<br>邮箱：xu.fei@outlook.com</p>
</li>
<li><h3 id="吴亮-月影"><a href="#吴亮-月影" class="headerlink" title="吴亮(月影)"></a><a href="https://www.h5jun.com/" target="_blank" rel="external">吴亮(月影)</a></h3><p>吴亮（网名月影）,先后在微软亚洲研究院做过访问学生，在金蝶软件有限公司担任过核心开发工程师、设计师和项目经理，在百度电子商务事业部担任过web开发项目经理。现任奇虎360高级技术经理，360前端团队奇舞团负责人。多年来致力于Javasript技术和web标准的推广，活跃于国内各技术社区，现为w3ctech顾问。</p>
<p>联系方式:<br><a href="http://weibo.com/silverna" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/yue-ying-2-61" target="_blank" rel="external">知乎</a>、 <a href="https://www.h5jun.com/" target="_blank" rel="external">博客</a>、<br>可通过博客、微博留言联系大神。</p>
</li>
<li><h3 id="雷志兴"><a href="#雷志兴" class="headerlink" title="雷志兴"></a><a href="http://www.cnberg.com/" target="_blank" rel="external">雷志兴</a></h3><p>雷志兴(网名berg)，百度高级工程师，负责前端基础架构、前端无线、前端基础性技术研究和整合，现为百度前端集成开发解决方案的负责人。07 年加入百度，曾先后负责百度富文本编辑器，百度 JavaScript 基础库 Tangram 等前端基础技术的研发工作。<br>微信公众号<strong>行云出岫(DevLife)</strong>的维护者。</p>
<p>联系方式:<br><a href="http://weibo.com/berg" target="_blank" rel="external">微博</a>、 <a href="http://twitter.com/cnberg" target="_blank" rel="external">Twitter</a>、 <a href="http://instagram.com/cnberg" target="_blank" rel="external">Instagram</a>、 <a href="http://zhihu.com/berg" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/cnberg" target="_blank" rel="external">Github</a>、 <a href="http://www.cnberg.com/" target="_blank" rel="external">博客</a>、<br>邮箱：cnberg@gmail.com</p>
</li>
<li><h3 id="张云龙"><a href="#张云龙" class="headerlink" title="张云龙"></a><a href="https://github.com/fouber/blog" target="_blank" rel="external">张云龙</a></h3><p>张云龙(前端农民工),现为全民TV技术总监，前UC浏览器导航团队前端技术负责人，前FIS团队技术负责人。</p>
<p>联系方式：<br><a href="http://weibo.com/fouber" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/fouber" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/fouber" target="_blank" rel="external">Github</a></p>
</li>
<li><h3 id="张鑫旭"><a href="#张鑫旭" class="headerlink" title="张鑫旭"></a><a href="http://www.zhangxinxu.com/" target="_blank" rel="external">张鑫旭</a></h3><p>09年华中科技大学毕业，目前上海，原腾讯社交用户体验部上海设计中心UI开发，现就职阅文集团，资深钓鱼爱好者，专注web前端偏前领域，博客笔风幽默、深刻易懂。</p>
<p>联系方式:<br><a href="http://weibo.com/zhangxinxu" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/zhang-xin-xu-47" target="_blank" rel="external">知乎</a>、 <a href="http://www.imooc.com/u/197450/courses?sort=publish" target="_blank" rel="external">慕课网</a>、<br>邮箱：zhangxinxu@zhangxinxu.com</p>
</li>
<li><h3 id="大漠"><a href="#大漠" class="headerlink" title="大漠"></a><a href="http://www.w3cplus.com/" target="_blank" rel="external">大漠</a></h3><p>常用昵称“大漠”，W3CPlus创始人，目前就职于淘宝。中国Drupal社区核心成员之一。对HTML5、CSS3和Sass等前端脚本语言有非常深入的认识和丰富的实践经验，尤其专注对CSS3、Sass和Mobile的研究，是国内最早研究和使用CSS3和Sass技术的一批人。CSS3、Sass和Drupal中国布道者。2014年出版《图解CSS3：核心技术与案例实战》。</p>
<p>联系方式:<br><a href="http://weibo.com/w3cplus" target="_blank" rel="external">微博</a>、 <a href="https://twitter.com/w3cplus" target="_blank" rel="external">Twitter</a>、 <a href="https://plus.google.com/+AirenLiao" target="_blank" rel="external">Google+</a>、 <a href="http://cn.linkedin.com/in/w3cplus" target="_blank" rel="external">Linkedin</a>、 <a href="https://github.com/airen" target="_blank" rel="external">Github</a>、 <a href="http://www.w3cplus.com/blogs/airen" target="_blank" rel="external">博客</a>、<br>邮箱：airenliao@gmail.com</p>
</li>
<li><h3 id="颜海镜"><a href="#颜海镜" class="headerlink" title="颜海镜"></a><a href="http://yanhaijing.com/" target="_blank" rel="external">颜海镜</a></h3><p>颜海镜90后一枚，活跃在各个技术社区，常以歪脖无脸男作为头像，专注Web前端。<br>热爱思考，热爱开源分享，爱好读书，羽毛球，乒乓球，相声，铁杆纲丝，当然非常热爱写代码了。<br>目前就职于百度，从事Web前端开发工作。</p>
<p>联系方式:<br><a href="http://weibo.com/yanhaijing1234" target="_blank" rel="external">微博</a>、 <a href="https://twitter.com/yanhaijing" target="_blank" rel="external">Twitter</a>、 <a href="https://www.zhihu.com/people/yanhaijing" target="_blank" rel="external">知乎</a>、 <a href="http://stackoverflow.com/users/2681005/yanhaijing" target="_blank" rel="external">Stackoverflow</a>、 <a href="https://github.com/yanhaijing/" target="_blank" rel="external">Github</a>、<br>邮箱：yanhaijing@yeah.net</p>
</li>
<li><h3 id="杜瑶"><a href="#杜瑶" class="headerlink" title="杜瑶"></a><a href="http://blog.doyoe.com/" target="_blank" rel="external">杜瑶</a></h3><p>去哪儿网(Qunar)，资深前端工程师，前端开发总监，<a href="http://css.doyoe.com/" target="_blank" rel="external">CSS参考手册</a>作者。</p>
<p>联系方式:<br><a href="http://weibo.com/doyoe" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/doyoe" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/doyoe/" target="_blank" rel="external">Github</a>、<br>邮箱：dooyoe@gmail.com</p>
</li>
<li><h3 id="一丝"><a href="#一丝" class="headerlink" title="一丝"></a><a href="https://github.com/yisibl/blog" target="_blank" rel="external">一丝</a></h3><p>阿里巴巴集团 · 前端工程师。前端段子手，偶尔重口味，偶尔小清新。</p>
<p>联系方式:<br><a href="http://weibo.com/jieorlin" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/ysbl" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/yisibl" target="_blank" rel="external">Github</a>、<br>邮箱：yiorsi@gmail.com</p>
</li>
<li><h3 id="迷渡"><a href="#迷渡" class="headerlink" title="迷渡"></a><a href="http://justjavac.com/" target="_blank" rel="external">迷渡</a></h3><p>联系方式:<br><a href="http://weibo.com/justjavac" target="_blank" rel="external">微博</a>、 <a href="http://www.zhihu.com/people/justjavac.com" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/justjavac" target="_blank" rel="external">Github</a>、 <a href="http://segmentfault.com/u/justjavac" target="_blank" rel="external">Segmentfault</a>、 <a href="http://stackoverflow.com/users/343194/justjavac" target="_blank" rel="external">Stackoverflow</a>、<br>邮箱：justjavac@gmail.com</p>
</li>
<li><h3 id="神飞"><a href="#神飞" class="headerlink" title="神飞"></a><a href="http://www.qianduan.net/" target="_blank" rel="external">神飞</a></h3><p>神飞,爱好前端设计与开发，崇尚一目了然的设计。现居深圳/广州，就职于腾讯微信设计团队。</p>
<p>联系方式：<br><a href="http://twitter.com/qianduan" target="_blank" rel="external">Twitter</a>、 <a href="https://www.zhihu.com/people/shenfei" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/qianduan" target="_blank" rel="external">Github</a>、<br>邮箱: admin@qianduan.net、mienflying@gmail.com</p>
</li>
<li><h3 id="CSS魔法"><a href="#CSS魔法" class="headerlink" title="CSS魔法"></a><a href="http://www.cssmagic.net/" target="_blank" rel="external">CSS魔法</a></h3><p>百姓网前端架构师，《CSS 揭秘》译者，微信公众号和微博都叫CSS魔法。</p>
<p>联系方式：<br><a href="http://weibo.com/cssmagic" target="_blank" rel="external">微博</a>、 <a href="https://twitter.com/cssmagic" target="_blank" rel="external">Twitter</a>、 <a href="http://www.zhihu.com/people/cssmagic" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/cssmagic" target="_blank" rel="external">Github</a></p>
</li>
<li><h3 id="赵雷"><a href="#赵雷" class="headerlink" title="赵雷"></a><a href="http://zhaolei.info/" target="_blank" rel="external">赵雷</a></h3><p>Firede，85后 程序员，前点点网首席前端工程师，百度资深研发工程师。现供职于<a href="http://efe.baidu.com/" target="_blank" rel="external">百度商业体系前端团队</a>，在与 <a href="https://github.com/ecomfe" target="_blank" rel="external">NB的小伙伴们</a>一起做 有意思的事情。<br>技能树很杂，除编程外，产品、设计、创业的话题也能聊得来。爱好广泛但小众，较正常的是看书和摄影；是果粉和GitHub粉。</p>
<p>联系方式：<br><a href="http://weibo.com/firede" target="_blank" rel="external">微博</a>、 <a href="https://github.com/firede" target="_blank" rel="external">Github</a>、<br>邮箱：firede@firede.us，也可微博私信他访谈。</p>
</li>
<li><h3 id="吴多益"><a href="#吴多益" class="headerlink" title="吴多益"></a><a href="http://wuduoyi.com/" target="_blank" rel="external">吴多益</a></h3><p>百度前端团队成员，FEX 团队负责人。</p>
<p>联系方式：<br><a href="https://github.com/nwind/" target="_blank" rel="external">Github</a>、 <a href="http://twitter.com/nwind/" target="_blank" rel="external">Twitter</a>、<a href="http://weibo.com/nwind/" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/wuduoyi" target="_blank" rel="external">知乎</a></p>
</li>
<li><h3 id="小胡子哥"><a href="#小胡子哥" class="headerlink" title="小胡子哥"></a><a href="http://www.barretlee.com/entry/" target="_blank" rel="external">小胡子哥</a></h3><p>本名李靖，淘宝web研发工程师。</p>
<p>联系方式：<br><a href="http://weibo.com/173248656" target="_blank" rel="external">微博</a>、 <a href="https://twitter.com/barret_china" target="_blank" rel="external">Twitter</a>、 <a href="https://www.zhihu.com/people/barretlee" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/barretlee" target="_blank" rel="external">Github</a>、 <a href="http://hustskyking.cnblogs.com/" target="_blank" rel="external">老博客</a>、<br>邮箱：barret.china@gmail.com</p>
</li>
<li><h3 id="小芋头君"><a href="#小芋头君" class="headerlink" title="小芋头君"></a><a href="http://www.html-js.com/" target="_blank" rel="external">小芋头君</a></h3><p><a href="http://f2e.souche.com/blog/" target="_blank" rel="external">大搜车前端</a>负责人，颜文字app作者，<a href="http://www.html-js.com/" target="_blank" rel="external">前端乱炖</a>创始人。</p>
<p>联系方式：<br><a href="http://weibo.com/676588498" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/li-shou-xin" target="_blank" rel="external">知乎</a>、 <a href="https://zhuanlan.zhihu.com/yutou" target="_blank" rel="external">知乎专栏</a>、 <a href="https://github.com/xinyu198736" target="_blank" rel="external">Github</a>、 </p>
<p>邮箱：xinyu198736@gmail.com</p>
</li>
<li><h3 id="林建锋（sofish）"><a href="#林建锋（sofish）" class="headerlink" title="林建锋（sofish）"></a><a href="https://sofi.sh/" target="_blank" rel="external">林建锋（sofish）</a></h3><p>国内资深前端开发工程师，Web 标准布道者，前支付宝前端开发部 CSS 样式库负责人。Trimidea 创始人，目前就职饿了么。</p>
<p>联系方式：<br><a href="http://weibo.com/sofish" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/sofish" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/sofish" target="_blank" rel="external">Github</a>、<br>邮箱：sofish@icloud.com</p>
</li>
<li><h3 id="屈光宇"><a href="#屈光宇" class="headerlink" title="屈光宇"></a><a href="https://imququ.com/" target="_blank" rel="external">屈光宇</a></h3><p>屈光宇(JerryQu、qgy18、屈屈、 QuQu)，360搜索前端负责人。</p>
<p>联系方式：<br><a href="http://weibo.com/jerryqu" target="_blank" rel="external">微博</a>、 <a href="https://twitter.com/qgy18" target="_blank" rel="external">Twitter</a>、 <a href="https://www.zhihu.com/people/ququ/about" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/qgy18" target="_blank" rel="external">Github</a>、<br>邮箱：quguangyu@gmail.com，练习前先看<a href="https://imququ.com/post/about.html" target="_blank" rel="external">联系说明</a></p>
</li>
<li><h3 id="张克军"><a href="#张克军" class="headerlink" title="张克军"></a><a href="http://hikejun.com/" target="_blank" rel="external">张克军</a></h3><p>张克军，豆瓣前端负责人，知名web技术布道者。</p>
<p>联系方式：<br><a href="http://weibo.com/kejunz" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/kejun/" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/kejun" target="_blank" rel="external">Github</a>、<br>邮箱：listenpro@gmail.com、</p>
</li>
<li><h3 id="林小志"><a href="#林小志" class="headerlink" title="林小志"></a><a href="http://linxz.github.io/blog/" target="_blank" rel="external">林小志</a></h3><p>原名林友赛，曾就职于迅雷、腾讯，负责网站重构。2011年加入携程，先后负责国际网站、高端旅游、商旅等多个项目，目前负责携程公共团队UED前端。 《<a href="https://book.douban.com/subject/4117497/" target="_blank" rel="external">CSS那些事儿</a>》一书作者。</p>
<p>联系方式：<br><a href="http://www.weibo.com/linxz428" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/linxz/" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/linxz" target="_blank" rel="external">Github</a>、</p>
</li>
<li><h3 id="聂微东"><a href="#聂微东" class="headerlink" title="聂微东"></a><a href="http://www.fefork.com/" target="_blank" rel="external">聂微东</a></h3><p>百度研发工程师，目前从事JavaScript研发工作，关注并喜欢研究 HTML5，Python，PHP，MySQL，NoSQL等技术。知名前端资源分享项目<a href="http://www.fefork.com/fetool/" target="_blank" rel="external">Fetool</a>维护者。</p>
<p>联系方式：<br><a href="http://weibo.com/darrencode" target="_blank" rel="external">微博</a>、 <a href="http://twitter.com/nieweidong" target="_blank" rel="external">Twitter</a>、 <a href="http://facebook.com/weidong.nie" target="_blank" rel="external">Facebook</a>、 <a href="http://www.cnblogs.com/Darren_code/" target="_blank" rel="external">博客</a>、 <a href="https://github.com/nieweidong" target="_blank" rel="external">Github</a>、<br>邮箱：darrencode@qq.com</p>
</li>
<li><h3 id="刘杰"><a href="#刘杰" class="headerlink" title="刘杰"></a><a href="http://www.aoao.org.cn/" target="_blank" rel="external">刘杰</a></h3><p>嗷嗷，本名刘杰，从事前端开发多年，期间做过设计转过产品，混过后端，写过《<a href="https://book.douban.com/subject/3327829/" target="_blank" rel="external">Web标准设计</a>》一书。<br>目前就职于淘宝网，主要负责前端性能监控、优化等前端开发相关的工作。</p>
<p>联系方式：<br><a href="https://twitter.com/aoao" target="_blank" rel="external">Twitter</a>、<br>邮箱：loaoao@gmail.com</p>
</li>
<li><h3 id="刘平川"><a href="#刘平川" class="headerlink" title="刘平川"></a><a href="http://rank.im/" target="_blank" rel="external">刘平川</a></h3><p>刘平川，网络昵称 rank，微信公众号：<strong>跨界码农</strong>。<br>现任美团架构师，技术上主要负责前端、客户端上基础技术相关工作。<br>曾任百度资深工程师、架构师，改革 Web 前端研发部，创立百度 FEX 基础前端团队。<br>独立从事过前端组件、库与框架研发。经历并负责过支付、电商、彩票、票务、社区、O2O等大型项目的前端研发。</p>
<p>联系方式：<br><a href="http://weibo.com/rank" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/rank/" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/ranklau" target="_blank" rel="external">Github</a>、<br>邮箱：ranklau@gmail.com</p>
</li>
<li><h3 id="黄峰达"><a href="#黄峰达" class="headerlink" title="黄峰达"></a><a href="https://www.phodal.com/" target="_blank" rel="external">黄峰达</a></h3><p>黄峰达(phodal)，毕业于西安文理学院(电子信息工程专业)，目前就职于ThoughtWorks(深圳)。<br>一个文艺控，喜欢读书，喜欢纸的质感，喜欢用笔铭刻记忆和思想。 一个设计控，一个DIY爱好者。<br><a href="http://growth.ren/#firstPage" target="_blank" rel="external">Growth</a>项目开发者。</p>
<p>联系方式：<br><a href="http://weibo.com/phodal" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/phodal" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/phodal" target="_blank" rel="external">Github</a>、 <a href="http://www.jianshu.com/users/e64ad9fba4da" target="_blank" rel="external">简书</a>、 <a href="http://blog.csdn.net/phodal" target="_blank" rel="external">CSDN</a>、<br>邮箱：gmszone@qq.com</p>
</li>
<li><h3 id="情封"><a href="#情封" class="headerlink" title="情封"></a><a href="http://blog.f2er.net/" target="_blank" rel="external">情封</a></h3><p><a href="http://www.zaoduke.net/" target="_blank" rel="external">前端De早读课</a>站长，@福建前端联盟发起人之一，4399UED/高级主管。</p>
<p>联系方式：<br><a href="http://weibo.com/f2er" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/f2er" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/f2er" target="_blank" rel="external">Github</a>、<br>QQ:181422448、<br>邮箱：uezheng@gmail.com</p>
</li>
<li><h3 id="裕波"><a href="#裕波" class="headerlink" title="裕波"></a>裕波</h3><p>原名周裕波，<a href="http://www.w3ctech.com/" target="_blank" rel="external">w3ctech.com</a>发起人。</p>
<p>联系方式:<br><a href="http://weibo.com/itchina100" target="_blank" rel="external">微博</a>、 <a href="http://t.qq.com/itchina110" target="_blank" rel="external">腾讯微博</a></p>
</li>
<li><h3 id="张铮铮"><a href="#张铮铮" class="headerlink" title="张铮铮"></a><a href="http://www.tych.io/" target="_blank" rel="external">张铮铮</a></h3><p>张铮铮(Tychio)，一名Web前端工程师，毕业于西安石油大学软件工程专业，目前就职于ThoughtWorks，Base在西安。</p>
<p>联系方式：<br><a href="https://twitter.com/tychio" target="_blank" rel="external">Twitter</a>、 <a href="https://www.zhihu.com/people/tychio" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/tychio" target="_blank" rel="external">Github</a>、 <a href="http://codepen.io/tychio" target="_blank" rel="external">Codepen</a>、<a href="http://www.linkedin.com/in/zhangzz" target="_blank" rel="external">Linkedin</a>、 <a href="http://stackoverflow.com/users/1954201/tychio" target="_blank" rel="external">Stackoverflow</a>、 <a href="http://wpa.qq.com/msgrd?v=3&amp;uin=18476046&amp;site=qq&amp;menu=yes" target="_blank" rel="external">QQ</a></p>
<p>邮箱：z@tychio.net，zzzhang@thoughtworks.com，zzztychio@gmail.com</p>
</li>
<li><h3 id="涂鸦码龙"><a href="#涂鸦码龙" class="headerlink" title="涂鸦码龙"></a><a href="http://jinlong.github.io/" target="_blank" rel="external">涂鸦码龙</a></h3><p>360前端工程师，忙时码代码，无事乱涂鸦。最近刚刚晋升奶爸，恭喜。</p>
<p>联系方式：<br><a href="http://weibo.com/newwave" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/zhangjinlong" target="_blank" rel="external">知乎</a>、 <a href="http://jinlongz.lofter.com/" target="_blank" rel="external">Lofter</a>、 <a href="https://github.com/jinlong" target="_blank" rel="external">Github</a>、<br>邮箱：zhangjinlong3546@sina.com</p>
</li>
<li><h3 id="CSS森林"><a href="#CSS森林" class="headerlink" title="CSS森林"></a><a href="http://blog.cssforest.org/" target="_blank" rel="external">CSS森林</a></h3><p>CSS森林，微信支付设计中心，负责重构前端团队的管理工作。</p>
<p>联系方式：<br><a href="https://www.zhihu.com/people/ghostzhang" target="_blank" rel="external">知乎</a>、 <a href="https://www.linkedin.com/in/ghostzhang" target="_blank" rel="external">Linkedin</a>、 <a href="http://github.com/ghostzhang" target="_blank" rel="external">Github</a>、<br>QQ:22168741<br>邮箱：ghostzhang@cssforest.org，lovej1bz@gmail.com</p>
</li>
<li><h3 id="屈超"><a href="#屈超" class="headerlink" title="屈超"></a><a href="https://quchao.com/" target="_blank" rel="external">屈超</a></h3><p>先后就职淘宝、腾讯，前腾讯前端开发主管，现为<a href="http://www.wepiao.com/" target="_blank" rel="external">微票</a>技术主管。</p>
<p>联系方式：<br><a href="https://www.zhihu.com/people/quchao" target="_blank" rel="external">知乎</a>、 <a href="https://www.linkedin.com/in/quchao" target="_blank" rel="external">Linkedin</a>、 <a href="https://github.com/QuChao" target="_blank" rel="external">Github</a>、<br>邮箱：mail@quchao.com</p>
</li>
<li><h3 id="元彦"><a href="#元彦" class="headerlink" title="元彦"></a><a href="http://madscript.com/" target="_blank" rel="external">元彦</a></h3><p>本名曹元彦，淘宝资深前端工程师，淘宝 UED FEM团队成员，建立了开源的链式任务工具 <a href="http://chajs.org/" target="_blank" rel="external">Cha</a>与前端自动化工具 Mod，专注于移动 Web 前端业务的基础架构建设与性能优化，同时在 Github 上维护着移动Web前端开发知识库 Mars.<br>曾在腾讯 AlloyTeam任职,先后负责 WebQQ、QQ、手机 QQ 等产品的 Web 前端工作。</p>
<p>联系方式：<br><a href="http://weibo.com/caoyuanyan" target="_blank" rel="external">微博</a>、 <a href="https://twitter.com/caoyuanyan" target="_blank" rel="external">Twitter</a>、 <a href="https://www.zhihu.com/people/yuanyan" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/yuanyan" target="_blank" rel="external">Github</a>、<br>邮箱：yuanyan.cao@alibaba-inc.com，yuanyan.cao@gmail.com</p>
</li>
<li><h3 id="于涛"><a href="#于涛" class="headerlink" title="于涛"></a><a href="https://github.com/kinvix" target="_blank" rel="external">于涛</a></h3><p>HTML5梦工场深圳负责人；腾讯Web前端<a href="http://www.alloyteam.com/" target="_blank" rel="external">AlloyTeam</a>负责人；腾讯高级工程师，WebQQ架构师；</p>
<p>联系方式：<br><a href="http://weibo.com/kinvix" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/kinvix" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/kinvix" target="_blank" rel="external">Github</a>、<br>邮箱：Kinvix@Gmail.com</p>
</li>
<li><h3 id="愚人码头"><a href="#愚人码头" class="headerlink" title="愚人码头"></a><a href="http://www.css88.com/" target="_blank" rel="external">愚人码头</a></h3><p><a href="http://www.css88.com/" target="_blank" rel="external">WEB前端开发</a>站长。</p>
<p>联系方式：<br><a href="http://weibo.com/feiwen8772" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/feiwen8772" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/feiwen8772" target="_blank" rel="external">Github</a>、<br>QQ：148246293、<br>邮箱：admin@css88.com</p>
</li>
<li><h3 id="明城"><a href="#明城" class="headerlink" title="明城"></a><a href="https://www.gracecode.com/" target="_blank" rel="external">明城</a></h3><p>前淘宝网前端工程师，现丁香园首席打杂官。八零后、技术男、苹果粉、微软黑、宁波人，现居杭州。</p>
<p>联系方式：<br><a href="http://weibo.com/feelinglucky" target="_blank" rel="external">微博</a>、 <a href="https://twitter.com/feelinglucky" target="_blank" rel="external">Twitter</a>、 <a href="http://instagram.com/feelinglucky" target="_blank" rel="external">Instagram</a>、 <a href="https://www.zhihu.com/people/mingcheng" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/feelinglucky" target="_blank" rel="external">Github</a>、<br>邮箱：lucky@gracecode.com</p>
</li>
<li><h3 id="大猫"><a href="#大猫" class="headerlink" title="大猫"></a><a href="http://ooxx.me/" target="_blank" rel="external">大猫</a></h3><p>微信前端工程师。</p>
<p>联系方式：<br><a href="https://www.zhihu.com/people/bigc.at/" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/Damao" target="_blank" rel="external">Github</a>、<br>QQ：18958069、<br>邮箱：i@ooxx.me</p>
</li>
<li><h3 id="彬Go"><a href="#彬Go" class="headerlink" title="彬Go"></a><a href="http://www.bingo929.com/" target="_blank" rel="external">彬Go</a></h3><p>原名李彬，前人人网前端开发工程师，人人小站前端团队技术主管，加入<a href="http://www.uhouzz.com/" target="_blank" rel="external">异乡好居</a>后闹了<a href="https://www.zhihu.com/question/46294596/answer/100791868" target="_blank" rel="external">矛盾</a>，请大家支持彬哥。</p>
<p>联系方式：<br><a href="http://weibo.com/feiwen8772" target="_blank" rel="external">微博</a>、 <a href="https://www.zhihu.com/people/feiwen8772" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/feiwen8772" target="_blank" rel="external">Github</a>、<br>QQ：215392、<br>邮箱：skar9363@gmail.com</p>
</li>
<li><h3 id="薛端阳"><a href="#薛端阳" class="headerlink" title="薛端阳"></a><a href="https://github.com/xueduany" target="_blank" rel="external">薛端阳</a></h3><p>先后在腾讯、盛大、淘宝做前端开发，现为携程机票事业部无线研发团队高级技术经理。<br>开源前端UI组件库<a href="http://xueduany.github.io/KitJs/KitJs/index.html" target="_blank" rel="external">KitJs</a>开发者。</p>
<p>联系方式：<br><a href="http://www.cnblogs.com/xueduanyang/" target="_blank" rel="external">博客</a>、 <a href="https://www.zhihu.com/people/xueduanyang" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/xueduany" target="_blank" rel="external">Github</a>、<br>邮箱：xueduanyang1985@163.com</p>
</li>
<li><h3 id="羡辙"><a href="#羡辙" class="headerlink" title="羡辙"></a><a href="http://zhangwenli.com/" target="_blank" rel="external">羡辙</a></h3><p>百度前端工程师，微信公众号羡辙部落格（xianzheblog）。</p>
<p>联系方式：<br><a href="http://weibo.com/plainjane" target="_blank" rel="external">微博</a>、 <a href="http://zhangwenli.com/blog/" target="_blank" rel="external">博客</a>、 <a href="https://www.zhihu.com/people/ovilia" target="_blank" rel="external">知乎</a>、 <a href="https://github.com/Ovilia" target="_blank" rel="external">Github</a>、<br>邮箱：me@zhangwenli.com</p>
</li>
<li><h3 id="周晓楷-Helkyle"><a href="#周晓楷-Helkyle" class="headerlink" title="周晓楷 Helkyle"></a><a href="http://helkyle.com/" target="_blank" rel="external">周晓楷 Helkyle</a></h3><p>w3cTrain成员。</p>
<p>联系方式：<br><a href="http://weibo.com/joueu" target="_blank" rel="external">微博</a>、 <a href="http://codepen.io/HelKyle/" target="_blank" rel="external">Codepen</a>、 <a href="https://github.com/HelKyle" target="_blank" rel="external">Github</a>、<br>邮件：helkylefighting@gmail.com</p>
</li>
</ol>
</li>
</ol>
<p>本文出处：<a href="http://www.cnblogs.com/-ding/p/5976659.html" target="_blank" rel="external">http://www.cnblogs.com/-ding/p/5976659.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前端大神&quot;&gt;&lt;a href=&quot;#前端大神&quot; class=&quot;headerlink&quot; title=&quot;前端大神&quot;&gt;&lt;/a&gt;前端大神&lt;/h1&gt;&lt;p&gt;达者为师，站在巨人的肩膀上眺望，才能看得更远。&lt;/p&gt;
&lt;h2 id=&quot;1-1-国际&quot;&gt;&lt;a href=&quot;#1-1-国际&quot; 
    
    </summary>
    
      <category term="师" scheme="https://feahter.github.io/categories/%E5%B8%88/"/>
    
    
      <category term="前端大神" scheme="https://feahter.github.io/tags/%E5%89%8D%E7%AB%AF%E5%A4%A7%E7%A5%9E/"/>
    
  </entry>
  
  <entry>
    <title>thinkphp实践</title>
    <link href="https://feahter.github.io/2016/11/30/thinkphp%E5%AE%9E%E8%B7%B5/"/>
    <id>https://feahter.github.io/2016/11/30/thinkphp实践/</id>
    <published>2016-11-30T01:25:24.000Z</published>
    <updated>2016-12-08T03:20:12.789Z</updated>
    
    <content type="html"><![CDATA[<!-- ![thinkphp](http://oe3di974t.bkt.clouddn.com/thinkphp.png) -->
<div><img src="http://oe3di974t.bkt.clouddn.com/thinkphp.png" alt="thinkphp" class="myimg"></div>

<p>ThinkPHP是一个快速、兼容而且简单的轻量级国产PHP开发框架。鉴于5.0之后为迎合php7.0而重新构建的框架的不稳定性，我们使用截至目前较新较稳定的3.2.3版。（实践基础默认web环境已搭建好）</p>
<p><a href="http://www.thinkphp.cn/" target="_blank" rel="external">thinkphp官网</a></p>
<p><a href="http://document.thinkphp.cn/manual_3_2.html" target="_blank" rel="external">thinkphp完全开发手册</a></p>
<p><a href="http://www.thinkphp.cn/down/610.html" target="_blank" rel="external">下载</a></p>
<h3 id="step-1-解压提取访问"><a href="#step-1-解压提取访问" class="headerlink" title="step-1 解压提取访问"></a>step-1 解压提取访问</h3><p>解压后将目录中的ThinkPHP文件夹和index.php文件拷入环境根目录任意新建空文件夹中。通过localhost或者127.0.0.1访问本地虚拟服务器环境，访问对应项目。</p>
<h3 id="step-2-文件目录介绍"><a href="#step-2-文件目录介绍" class="headerlink" title="step-2 文件目录介绍"></a>step-2 文件目录介绍</h3><p>打开项目，可见新生成文件夹Application，文件组成及作用如下：</p>
<p><code>Application</code><br><code>├─Common         应用公共模块</code><br><code>│  ├─Common      应用公共函数目录</code><br><code>│  └─Conf        应用公共配置文件目录</code><br><code>├─Home           默认生成的Home模块</code><br><code>│  ├─Conf        模块配置文件目录</code><br><code>│  ├─Common      模块函数公共目录</code><br><code>│  ├─Controller  模块控制器目录</code><br><code>│  ├─Model       模块模型目录</code><br><code>│  └─View        模块视图文件目录</code><br><code>├─Runtime        运行时目录</code><br><code>│  ├─Cache       模版缓存目录</code><br><code>│  ├─Data        数据目录</code><br><code>│  ├─Logs        日志目录</code><br><code>│  └─Temp        缓存目录</code></p>
<p>以上文件中的Common-&gt;Conf-&gt;config.php文件,Home-&gt;Controller-&gt;IndexController.class.php文件,View文件夹为主要操作区域。</p>
<h2 id="从后至前"><a href="#从后至前" class="headerlink" title="从后至前"></a>从后至前</h2><h3 id="step-3-配置文件"><a href="#step-3-配置文件" class="headerlink" title="step-3 配置文件"></a>step-3 配置文件</h3><p>在config.php文件中配置数据库连接，可在数据库中新建一个测试数据库。连接配置如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">return</span> <span class="keyword">array</span>(</div><div class="line">	<span class="comment">//'配置项'=&gt;'配置值'</span></div><div class="line"><span class="comment">//数据库配置信息</span></div><div class="line"><span class="string">'DB_TYPE'</span> =&gt; <span class="string">'mysql'</span>, <span class="comment">// 数据库类型</span></div><div class="line"><span class="string">'DB_HOST'</span> =&gt; <span class="string">'localhost'</span>, <span class="comment">// 服务器地址</span></div><div class="line"><span class="string">'DB_NAME'</span> =&gt; <span class="string">'test'</span>, <span class="comment">// 数据库名</span></div><div class="line"><span class="string">'DB_USER'</span> =&gt; <span class="string">'root'</span>, <span class="comment">// 用户名</span></div><div class="line"><span class="string">'DB_PWD'</span> =&gt; <span class="string">' '</span>, <span class="comment">// 密码</span></div><div class="line"><span class="string">'DB_PORT'</span> =&gt; <span class="number">3306</span>, <span class="comment">// 端口</span></div><div class="line"><span class="string">'DB_PREFIX'</span> =&gt; <span class="string">'test_'</span>, <span class="comment">// 数据库表前缀 </span></div><div class="line"><span class="string">'DB_CHARSET'</span>=&gt; <span class="string">'utf8'</span>, <span class="comment">// 字符集</span></div><div class="line"><span class="string">'DB_DEBUG'</span> =&gt; <span class="keyword">TRUE</span>, <span class="comment">// 数据库调试模式</span></div><div class="line">);</div></pre></td></tr></table></figure>
<h3 id="step-4-控制文件"><a href="#step-4-控制文件" class="headerlink" title="step-4 控制文件"></a>step-4 控制文件</h3><p>在IndexController.class.php中实例化数据库，作为控制文件：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">namespace</span> <span class="title">Home</span>\<span class="title">Controller</span>;</div><div class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="comment">//实例化数据库表</span></div><div class="line">        $test = M(<span class="string">'test'</span>);</div><div class="line">        <span class="keyword">$this</span>-&gt;test=$test-&gt;select();</div><div class="line">        <span class="keyword">$this</span>-&gt;display();</div><div class="line">         &#125;  &#125;</div></pre></td></tr></table></figure>
<h3 id="step-5-模板文件"><a href="#step-5-模板文件" class="headerlink" title="step-5 模板文件"></a>step-5 模板文件</h3><p>在View文件夹下新建Index文件夹 在Index文件夹中新建index.html，作为模板文件</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">volist</span> <span class="attr">name</span>=<span class="string">"test"</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"text-center"</span>&gt;</span>&#123;$test.id&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-center"</span>&gt;</span>&#123;$test.name&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">volist</span>&gt;</span></div></pre></td></tr></table></figure>
<p>以上为数据库字段内容到前台输出的过程。</p>
<p>访问项目即可看到预先在数据库中输入的字段内容。</p>
<p>注：注意所建数据库表前缀与配置文件保持一致。</p>
<h2 id="从前到后"><a href="#从前到后" class="headerlink" title="从前到后"></a>从前到后</h2><p>以一个实际表单提交实例为例：</p>
<h3 id="step-6-模板文件—表单提交"><a href="#step-6-模板文件—表单提交" class="headerlink" title="step-6 模板文件—表单提交"></a>step-6 模板文件—表单提交</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">//表单</div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"insertbook"</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">class</span>=<span class="string">"basic-grey"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span> <span class="attr">id</span>=<span class="string">"form"</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">h1</span>&gt;</span>添加图书<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>图书编号：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"b_id"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"b_id"</span> <span class="attr">placeholder</span>=<span class="string">"图书编号"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>书名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"b_name"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"b_name"</span> <span class="attr">placeholder</span>=<span class="string">"书名"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>作者：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"author"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">placeholder</span>=<span class="string">"作者"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>出版社：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"press"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"press"</span> <span class="attr">placeholder</span>=<span class="string">"出版社"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>出版日期：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"p_date"</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">name</span>=<span class="string">"p_date"</span> <span class="attr">placeholder</span>=<span class="string">"出版日期"</span> <span class="attr">style</span>=<span class="string">"margin-bottom: 20px;"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>版次：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"edition"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"edition"</span> <span class="attr">placeholder</span>=<span class="string">"版次"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>价格：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"price"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"price"</span> <span class="attr">placeholder</span>=<span class="string">"价格"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>内容简介 :<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"intro"</span> <span class="attr">name</span>=<span class="string">"intro"</span> <span class="attr">placeholder</span>=<span class="string">"内容简介"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>图书分类 :<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"c_id"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>1001 小说<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>1002 人文社科<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>1003 科技<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"exampleInputFile"</span> <span class="attr">style</span>=<span class="string">"margin-bottom:20px;"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>图书封面 :<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">请选择要上传的图片</div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"image"</span> <span class="attr">id</span>=<span class="string">"image"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&amp;nbsp;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span>  <span class="attr">class</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"添加图书"</span> <span class="attr">name</span>=<span class="string">"sub"</span> <span class="attr">id</span>=<span class="string">"sub"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line">//提交</div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line">  $("#sub").click(function() &#123;</div><div class="line">            $("#form").submit();</div><div class="line">        &#125;);</div><div class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p>利用jquery控制点击提交，将用户编写好的表单信息发给insertbook方法。</p>
<h3 id="step-7-控制文件—添加数据"><a href="#step-7-控制文件—添加数据" class="headerlink" title="step-7 控制文件—添加数据"></a>step-7 控制文件—添加数据</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insertbook</span><span class="params">()</span></span>&#123;</div><div class="line">                         $add=M(<span class="string">'book'</span>);</div><div class="line">                         $data=I(<span class="string">'post.'</span>);</div><div class="line">                         $upload = <span class="keyword">new</span> \Think\Upload();</div><div class="line">                         $upload-&gt;maxSize   =     <span class="number">3145728</span> ;</div><div class="line">                         $upload-&gt;exts      =     <span class="keyword">array</span>(<span class="string">'jpg'</span>, <span class="string">'gif'</span>, <span class="string">'png'</span>, <span class="string">'jpeg'</span>);</div><div class="line">                         $upload-&gt;rootPath  =     <span class="string">'./Public/'</span>;</div><div class="line">                         $upload-&gt;savePath  =     <span class="string">'images/'</span>;</div><div class="line">                         $upload-&gt;autoSub   =     <span class="keyword">false</span>;</div><div class="line">                         $info   =   $upload-&gt;upload();     </div><div class="line">  <span class="keyword">if</span>(!$info) &#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;error($upload-&gt;getError());&#125;</div><div class="line">  <span class="keyword">else</span>&#123;   </div><div class="line">    <span class="keyword">foreach</span>($info <span class="keyword">as</span> $file)&#123; </div><div class="line">    $data[<span class="string">'image'</span>]=$file[<span class="string">'savename'</span>];</div><div class="line">    &#125;      <span class="comment">// redirect some where</span></div><div class="line">    &#125; </div><div class="line">$result = $add-&gt;add($data); </div><div class="line"><span class="keyword">if</span>($result)&#123;</div><div class="line">    <span class="comment">//设置成功后跳转页面的地址</span></div><div class="line">    <span class="keyword">$this</span>-&gt;success(<span class="string">'新增成功'</span>, <span class="string">'addbook'</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="comment">//错误页面的默认跳转页面是返回前一页，通常不需要设置</span></div><div class="line">    <span class="keyword">$this</span>-&gt;error(<span class="string">'新增失败'</span>);</div><div class="line">&#125;                                                             </div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>insertbook函数利用I方法接收函数后，判断图片文件是否上传成功，成功则将保存的图片文件名称转给实例化的data表的image字段，然后再判断整体存入data表中的操作是否成功。</p>
<h2 id="删除、更改、查找"><a href="#删除、更改、查找" class="headerlink" title="删除、更改、查找"></a>删除、更改、查找</h2><h3 id="step-8-控制文件—删除"><a href="#step-8-控制文件—删除" class="headerlink" title="step-8 控制文件—删除"></a>step-8 控制文件—删除</h3><p>例：以id和书名匹配搜索后，删除对应书籍的信息。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delebook</span><span class="params">()</span></span></div><div class="line">&#123; </div><div class="line">   $del = M(<span class="string">"book"</span>); <span class="comment">// 实例化User对象</span></div><div class="line">    $map[<span class="string">'b_id'</span>] = $_POST[<span class="string">"b_id"</span>];</div><div class="line">    $map[<span class="string">'b_name'</span>] = $_POST[<span class="string">"b_name"</span>];</div><div class="line">     $map[<span class="string">'_logic'</span>] = <span class="string">'OR'</span>;</div><div class="line">    <span class="comment">// 把查询条件传入查询方法</span></div><div class="line">   $result = $del-&gt;where($map)-&gt;delete();</div><div class="line">    <span class="keyword">if</span>($result)&#123;</div><div class="line">    <span class="comment">//设置成功后跳转页面的地址</span></div><div class="line">    <span class="keyword">$this</span>-&gt;success(<span class="string">'删除成功'</span>, <span class="string">'delbook'</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="comment">//错误页面的默认跳转页面是返回前一页，通常不需要设置</span></div><div class="line">    <span class="keyword">$this</span>-&gt;error(<span class="string">'删除失败'</span>);</div><div class="line">&#125;  </div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="step-9-控制文件—更改"><a href="#step-9-控制文件—更改" class="headerlink" title="step-9 控制文件—更改"></a>step-9 控制文件—更改</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">updatebook</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">$book = M(<span class="string">"book"</span>); <span class="comment">// 实例化User对象</span></div><div class="line">$data =I(<span class="string">"post."</span>);</div><div class="line">$book-&gt;save($data); <span class="comment">// 根据条件保存修改的数据</span></div><div class="line"> $result = $data;</div><div class="line">    <span class="keyword">if</span>($result)&#123;</div><div class="line">    <span class="comment">//设置成功后跳转页面的地址</span></div><div class="line">    <span class="keyword">$this</span>-&gt;success(<span class="string">'修改成功'</span>, <span class="string">'editbook'</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="comment">//错误页面的默认跳转页面是返回前一页，通常不需要设置</span></div><div class="line">    <span class="keyword">$this</span>-&gt;error(<span class="string">'修改失败'</span>);</div><div class="line">&#125;  </div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="step-10-模板文件—更改"><a href="#step-10-模板文件—更改" class="headerlink" title="step-10 模板文件—更改"></a>step-10 模板文件—更改</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"updatebook"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"basic-grey"</span> <span class="attr">id</span>=<span class="string">"form"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>请输入修改内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">volist</span> <span class="attr">name</span>=<span class="string">"data"</span> <span class="attr">id</span>=<span class="string">"edit"</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>书名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"book"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"book"</span> <span class="attr">placeholder</span>=<span class="string">"&#123;$edit.b_name&#125;"</span> <span class="attr">value</span>=<span class="string">"&#123;$edit.b_name&#125;"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>作者：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"author"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">placeholder</span>=<span class="string">"&#123;$edit.author&#125;"</span> <span class="attr">value</span>=<span class="string">"&#123;$edit.author&#125;"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>价格：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"price"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"price"</span> <span class="attr">placeholder</span>=<span class="string">"&#123;$edit.price&#125;"</span> <span class="attr">value</span>=<span class="string">"&#123;$edit.price&#125;"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>图书编号：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"b_id"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"b_id"</span> <span class="attr">placeholder</span>=<span class="string">"&#123;$edit.b_id&#125;"</span> <span class="attr">value</span>=<span class="string">"&#123;$edit.b_id&#125;"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>出版社：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"press"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"press"</span> <span class="attr">placeholder</span>=<span class="string">"&#123;$edit.press&#125;"</span> <span class="attr">value</span>=<span class="string">"&#123;$edit.press&#125;"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>出版日期：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"p_date"</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">name</span>=<span class="string">"p_date"</span> <span class="attr">placeholder</span>=<span class="string">"&#123;$edit.p_date&#125;"</span> <span class="attr">value</span>=<span class="string">"&#123;$edit.p_date&#125;"</span> <span class="attr">style</span>=<span class="string">"margin-bottom: 20px;"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>版次：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"edition"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"edition"</span> <span class="attr">placeholder</span>=<span class="string">"&#123;$edit.edition&#125;"</span> <span class="attr">value</span>=<span class="string">"&#123;$edit.edition&#125;"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>内容简介 :<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"intro"</span> <span class="attr">name</span>=<span class="string">"intro"</span> <span class="attr">placeholder</span>=<span class="string">"&#123;$edit.intro&#125;"</span> <span class="attr">value</span>=<span class="string">"&#123;$edit.intro&#125;"</span>&gt;</span>&#123;$edit.intro&#125;<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>图书分类 :<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"selection"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"&#123;$edit.c_id&#125;"</span>&gt;</span>&#123;$edit.c_id&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>1001 小说<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>1003 科技<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;/<span class="name">volist</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&amp;nbsp;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"确认修改"</span> <span class="attr">id</span>=<span class="string">"sub"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<p>通过实例化将现存的数据库字段展示到对应位置，通过重新提交表单的方式再次对数据库字段进行重写，达到修改指定地方的目的。</p>
<h3 id="step-11-配置文件—搜索"><a href="#step-11-配置文件—搜索" class="headerlink" title="step-11 配置文件—搜索"></a>step-11 配置文件—搜索</h3><p>在全局配置文件中开启URL路由配置，自定义search方法后接k值。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">	<span class="string">'URL_ROUTER_ON'</span>   =&gt; <span class="keyword">true</span>,</div><div class="line">	<span class="string">'URL_ROUTE_RULES'</span>=&gt;<span class="keyword">array</span>(</div><div class="line">	<span class="string">'search/:k'</span>               =&gt; <span class="string">'Index/search'</span>,</div><div class="line">),</div></pre></td></tr></table></figure>
<h3 id="step-12-控制文件—搜索"><a href="#step-12-控制文件—搜索" class="headerlink" title="step-12 控制文件—搜索"></a>step-12 控制文件—搜索</h3><p>通过get方法获取k值转化字符串传递给keyword进行like模糊匹配搜索，搜索范围为指定的几个字段。查询后展示。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"> $keywords = <span class="string">'%'</span>.$_GET[<span class="string">'k'</span>].<span class="string">'%'</span>; </div><div class="line"> $where[<span class="string">'b_id|b_name|author|c_id'</span>] = <span class="keyword">array</span>(<span class="string">'like'</span>,$keywords);</div><div class="line"> <span class="keyword">$this</span>-&gt;data= $data=M(<span class="string">'book'</span>)-&gt;where($where)-&gt;select();</div><div class="line"> $info=$data;</div><div class="line"> <span class="keyword">if</span>($info)&#123; <span class="keyword">$this</span>-&gt;display();&#125;<span class="keyword">else</span>&#123;</div><div class="line">     <span class="keyword">$this</span>-&gt;error(<span class="string">'抱歉，没有找到相关书籍。'</span>);</div><div class="line"> &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"list-1 form-group  "</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"keywords"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-xs"</span> <span class="attr">id</span>=<span class="string">"thesearch"</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line">        $("#thesearch").click(function() &#123;</div><div class="line">            location.href = '__URL__/search/k/' + $("#keywords").val();</div><div class="line">        &#125;);</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p>搜索框模板代码如上。</p>
<p>参考<a href="http://www.kancloud.cn/thinkphp/thinkphp_quickstart/2138" target="_blank" rel="external">官网入门手册</a>和<a href="https://www.shiyanlou.com/courses/96" target="_blank" rel="external">实验楼thinkphp框架实践</a>完成。</p>
<p>更多内容请自行探索。</p>
]]></content>
    
    <summary type="html">
    
      &lt;!-- ![thinkphp](http://oe3di974t.bkt.clouddn.com/thinkphp.png) --&gt;
&lt;div&gt;&lt;img src=&quot;http://oe3di974t.bkt.clouddn.com/thinkphp.png&quot; alt=&quot;think
    
    </summary>
    
      <category term="术" scheme="https://feahter.github.io/categories/%E6%9C%AF/"/>
    
    
      <category term="thinkphp" scheme="https://feahter.github.io/tags/thinkphp/"/>
    
      <category term="php" scheme="https://feahter.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>基于Bootstrap的自适应实施方案</title>
    <link href="https://feahter.github.io/2016/11/28/%E5%9F%BA%E4%BA%8EBootstrap%E7%9A%84%E8%87%AA%E9%80%82%E5%BA%94%E5%AE%9E%E6%96%BD%E6%96%B9%E6%A1%88/"/>
    <id>https://feahter.github.io/2016/11/28/基于Bootstrap的自适应实施方案/</id>
    <published>2016-11-28T03:31:18.000Z</published>
    <updated>2016-12-08T03:19:33.371Z</updated>
    
    <content type="html"><![CDATA[<h4 id="名由"><a href="#名由" class="headerlink" title="名由"></a>名由</h4><p>bootstrap:意为引导，引导有杠杆的作用。在计算机用语中为引导程序的意思。</p>
<p>很多人会对Bootstrap这个名字感到困惑。英语Bootstrap的意思是靴带，来自短语：“pull oneself up by one′s bootstrap”，18世纪德国文学家拉斯伯（Rudolf Erich Raspe）的小说《巴龙历险记（或译为终极天将）》（Adventures of Baron Munchausen) 记述道：“巴龙掉到湖里沉到湖底，在他绝望的时候，他用自己靴子上的带子把自己拉了上来。”现意指不借助别人的力量，凭自己的努力，终于获得成功。统计学里“bootstrap”法是指用原样本自身的数据抽样得出新的样本及统计量，根据其意现在普遍将其译为“自助法”。</p>
<p>下面引用的是谢益辉博士关于Bootstrap （和 Jackknife）基本思想的论述，让我们对于Bootstrap 建立一个初步的关于统计学的认识：</p>
<p>在统计的世界，我们面临的总是只有样本，Where there is sample, there is uncertainty，正因为不确定性的存在，才使统计能够生生不息。传说统计学家、数学家和物理学家乘坐一列火车上旅行，路上看到草原上有一只黑羊，统计学家说，“基于这个样本来看，这片草原上所有的羊都是黑的”，数学家说，“只有眼前这只羊是黑的”，物理学家则说，“你们都不对，只有羊的这一面是黑的”。这是关于统计和其他学科的一个玩笑话，说明了统计的一些特征，比如基于样本推断总体。</p>
<p>一般情况下，总体永远都无法知道，我们能利用的只有样本，现在的问题是，样本该怎样利用呢？Bootstrap的奥义也就是：既然样本是抽出来的，那我何不从样本中再抽样（Resample）？Jackknife的奥义在于：既然样本是抽出来的，那我在作估计、推断的时候“扔掉”几个样本点看看效果如何？既然人们要质疑估计的稳定性，那么我们就用样本的样本去证明吧。</p>
<p>John Fox的那一系列附录中有一篇叫“Bootstrapping Regression Models”，当我看到第二页用方框框标出那句话时，我才对Bootstrap的思想真正有了了解（之前迷茫了很长时间）。Bootstrap的一般的抽样方式都是“有放回地全抽”（其实样本量也要视情况而定，不一定非要与原样本量相等），意思就是抽取的Bootstrap样本量与原样本相同，只是在抽样方式上采取有放回地抽，这样的抽样可以进行B次，每次都可以求一个相应的统计量/估计量，最后看看这个统计量的稳定性如何（用方差表示）。Jackknife的抽样痕迹不明显，但主旨也是取样本的样本，在作估计推断时，每次先排除一个或者多个样本点，然后用剩下的样本点求一个相应的统计量，最后也可以看统计量的稳定性如何。</p>
<p>在R中简单随机抽样的函数是sample()，其中有个参数replacement表示是否放回，经典的抽样基本都是不放回（replace = FALSE），而Bootstrap则是replace = TRUE；从FALSE到TRUE，小小的一个变化，孕育了Bootstrap的经典思想。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p><a href="https://github.com/twbs/bootstrap" target="_blank" rel="external">Bootstrap</a>，作者:<a href="https://github.com/mdo" target="_blank" rel="external">Mark Otto</a>和<a href="http://twitter.com/fat" target="_blank" rel="external">Jacob Thornton</a>。Twitter推出的CSS框架。</p>
<p>移动优先的自适应解决方案。</p>
<p><a href="http://getbootstrap.com/" target="_blank" rel="external">官网</a></p>
<p><a href="http://www.bootcss.com/" target="_blank" rel="external">中文网站</a></p>
<p><a href="http://v3.bootcss.com/getting-started/" target="_blank" rel="external">起步文档</a></p>
<p>在要使用的html文件头引入（本地或者CDN均可）bootstrap.min.css文件即可开始使用。例：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//本地</div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/bootstrap.min.css"</span>&gt;</span></div><div class="line">//CDN</div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"http://cdn.bootcss.com/bootstrap/3.3.0/css/bootstrap.min.css"</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="关于自适应"><a href="#关于自适应" class="headerlink" title="关于自适应"></a>关于自适应</h3><p>为了确保适当的绘制和触屏缩放，添加meta标签。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>添加 <code>user-scalable=no</code> 可以禁止屏幕缩放。这样禁用缩放后，用户的视口只能滚动屏幕，就能让你的网站在移动端看上去更像原生应用。但不推荐所有网站使用，请视自己的需求而定。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>从浏览器内核入手优化兼容：</p>
<p>添加meta标签，如果网页以IE8内核浏览器打开，如果安装了GCF（Google Chrome Frame谷歌内嵌浏览器框架GCF），则使用GCF来渲染页面，如果未安装GCF，则使用最高版本的IE内核进行渲染。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>添加meta标签，双核浏览器时（主要针对国产360浏览器），使浏览器默认使用极速模式（webkit内核）。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"renderer"</span> <span class="attr">content</span>=<span class="string">"webkit"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>bootstrap的栅格系统基于媒体查询，为了使IE8兼容媒体查询和部分html5的标签，在head标签闭合前加入如下代码段（如果浏览器内核为IE9及其以下版本时调用文件）：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--[if lte IE 9]&gt;</span></div><div class="line">  &lt;script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"&gt;&lt;/script&gt;</div><div class="line">  &lt;script src="https://oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"&gt;&lt;/script&gt;</div><div class="line">  &lt;![endif]--&gt;</div></pre></td></tr></table></figure>
<h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><p>注意前端代码的模块化组织，降低css选择器的重复性，以大的模块区分功能块。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>.container-fluid（100%宽度）与.container（固定宽度）选其一作为最外侧的盒子，依据为内容是否要占据全部视口。.row作为缓冲带必须嵌套有。lg大屏（&gt;=1200px），md中屏(&gt;=992px)，sm小屏(&gt;=768px)，xs超小屏(&lt;768px)。将外层div均分为12等分，可以任意设置组合，每个col自带15px的padding属性，在每个col中放置内容。栅格系统是自适应布局的核心。根据模块添加类.hidden-md可实现对应尺寸隐藏，达到响应式目的。</p>
<h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><p>如果想要兼容IE8，则尽量<strong>避免使用css3属性</strong>和IE8不兼容的属性（如：background-size，min-height），减少hack工作量。在样式文件中参考bootstrap的屏幕尺寸划分使用媒体查询，或单独针对特定移动端屏幕尺寸适配，也可结合，但须注意css文件渲染顺序为<strong>从上至下，后者覆盖前者</strong>。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">//大屏</div><div class="line">@media (max-width:1200px) &#123;</div><div class="line">  .class&#123;...&#125;</div><div class="line">&#125;</div><div class="line">//中屏</div><div class="line">@media (max-width:992px) &#123;</div><div class="line">  .class&#123;...&#125;</div><div class="line">&#125;</div><div class="line">//小屏</div><div class="line">@media (max-width:768px) &#123;</div><div class="line">  .class&#123;...&#125;</div><div class="line">&#125;</div><div class="line">//iphone6 Plus</div><div class="line">@media (max-width:414px) &#123;</div><div class="line">  .class&#123;...&#125;</div><div class="line">&#125;</div><div class="line">//iphone6 </div><div class="line">@media (max-width:375px) &#123;</div><div class="line">  .class&#123;...&#125;</div><div class="line">&#125;</div><div class="line">//iphone5 </div><div class="line">@media (max-width:320px) &#123;</div><div class="line">  .class&#123;...&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="bootstrap常用辅助类归纳"><a href="#bootstrap常用辅助类归纳" class="headerlink" title="bootstrap常用辅助类归纳"></a>bootstrap常用辅助类归纳</h3><table>
<thead>
<tr>
<th style="text-align:center">类名</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">.text-center(left or right)</td>
<td style="text-align:center">文字对齐方式</td>
</tr>
<tr>
<td style="text-align:center">.center-block</td>
<td style="text-align:center">设置元素为 display:block 并居中显示</td>
</tr>
<tr>
<td style="text-align:center">.clearfix</td>
<td style="text-align:center">清除浮动</td>
</tr>
<tr>
<td style="text-align:center">.pull-left(or right)</td>
<td style="text-align:center">元素浮动到左边（右边）</td>
</tr>
<tr>
<td style="text-align:center">.show(.hidden)</td>
<td style="text-align:center">强制元素显示（隐藏）</td>
</tr>
<tr>
<td style="text-align:center">.text-hide</td>
<td style="text-align:center">将页面元素所包含的文本内容替换为背景图</td>
</tr>
<tr>
<td style="text-align:center">.close</td>
<td style="text-align:center">显示关闭按钮</td>
</tr>
<tr>
<td style="text-align:center">.caret</td>
<td style="text-align:center">显示下拉式功能</td>
</tr>
<tr>
<td style="text-align:center">.img-responsive</td>
<td style="text-align:center">图片自适应</td>
</tr>
</tbody>
</table>
<p>注：更多请参考文档，或阅读源码，举例，以下为导航条的类：</p>
<ul>
<li>.navbar——设置nav元素为导航条组件；</li>
<li>.navbar-default——指定导航条组件为默认主题；</li>
<li>.navbar-inverse——指定导航条组件为黑色主题；</li>
<li>.navbar-fixed-top——设置导航条组件固定在顶部；</li>
<li>.navbar-fixed-bottom——设置导航条组件固定在底部；</li>
<li>.navbar-header——主要指定div元素为导航条组件包裹品牌图标及切换按钮；</li>
<li>.navbar-toggle——设置button元素为导航条组件的切换钮；</li>
<li>.collapsed——设置button元素为在视口小于768px时才显示；</li>
<li>.navbar-brand——设置导航条组件内的品牌图标；</li>
<li>.collapse——设置div元素为视口大于768px时显示；</li>
<li>.navbar-collapse——设置div元素为导航条组件各列表项的父元素；</li>
<li>.navbar-nav——设置ul为导航条组件内的列表元素;</li>
<li>.navbar-left——设置导航条内元素向左对齐；</li>
<li>.navbar-right——设置导航条内元素向右对齐；</li>
<li>.navbar-form——为导航条组件内部的表单组件；</li>
<li>.navbar-btn——为导航条组件内部的按钮样式；</li>
<li>.navbar-text——为导航条组件内部的文本样式；</li>
<li>.navbar-link——在标准的导航组件之外添加标准链接，让链接有正确的颜色和反色设置；</li>
<li>.breadcrumb——设置列表元素显示为路径导航组件；</li>
</ul>
<h3 id="关于BS的JavaScript插件"><a href="#关于BS的JavaScript插件" class="headerlink" title="关于BS的JavaScript插件"></a>关于BS的JavaScript插件</h3><p>bootstrap的JS插件基于JQ2.0以上，而JQ2.0以后不再支持IE8，要求兼容性的需要寻找合适的兼容性较好的插件引用。推荐看:<a href="http://www.bootcss.com/中文网下推荐的一些项目。" target="_blank" rel="external">http://www.bootcss.com/中文网下推荐的一些项目。</a></p>
<p>例，推荐轮播插件<a href="https://github.com/stevenwanderski/bxslider-4" target="_blank" rel="external">bxslider</a>，结合jquery使用达到响应式目的：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"js/jquery.bxslider.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line">&lt;script&gt;</div><div class="line">	        $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	        	<span class="keyword">var</span> _width=$(<span class="built_in">window</span>).width();</div><div class="line">	         <span class="keyword">if</span> (_width&gt;<span class="number">768</span>) &#123;$(<span class="string">'.slider'</span>).bxSlider(&#123;</div><div class="line">	            slideWidth: <span class="number">265</span>,</div><div class="line">	            minSlides: <span class="number">4</span>,</div><div class="line">	            maxSlides: <span class="number">4</span>,</div><div class="line">	            slideMargin: <span class="number">30</span></div><div class="line">	          &#125;);&#125;</div><div class="line">	         <span class="keyword">else</span>&#123;</div><div class="line">				  $(<span class="string">'.slider'</span>).bxSlider(&#123;</div><div class="line">	            slideWidth: _width<span class="number">-30</span>,</div><div class="line">	            minSlides: <span class="number">1</span>,</div><div class="line">	            maxSlides: <span class="number">2</span>,</div><div class="line">	            controls: <span class="literal">false</span>,</div><div class="line">	            mode: <span class="string">'fade'</span></div><div class="line">	          &#125;);		  </div><div class="line">				  &#125;</div><div class="line">	        &#125;);</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;名由&quot;&gt;&lt;a href=&quot;#名由&quot; class=&quot;headerlink&quot; title=&quot;名由&quot;&gt;&lt;/a&gt;名由&lt;/h4&gt;&lt;p&gt;bootstrap:意为引导，引导有杠杆的作用。在计算机用语中为引导程序的意思。&lt;/p&gt;
&lt;p&gt;很多人会对Bootstrap这个名字感到困惑
    
    </summary>
    
      <category term="术" scheme="https://feahter.github.io/categories/%E6%9C%AF/"/>
    
    
      <category term="Bootstrap" scheme="https://feahter.github.io/tags/Bootstrap/"/>
    
      <category term="自适应" scheme="https://feahter.github.io/tags/%E8%87%AA%E9%80%82%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>设计模式</title>
    <link href="https://feahter.github.io/2016/11/25/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>https://feahter.github.io/2016/11/25/设计模式/</id>
    <published>2016-11-25T03:28:30.000Z</published>
    <updated>2016-12-08T03:19:39.233Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设计模式简介"><a href="#设计模式简介" class="headerlink" title="设计模式简介"></a>设计模式简介</h1><p>设计模式（Design pattern）代表了最佳的实践，通常被有经验的面向对象的软件开发人员所采用。设计模式是软件开发人员在软件开发过程中面临的一般问题的解决方案。这些解决方案是众多软件开发人员经过相当长的一段时间的试验和错误总结出来的。</p>
<p>设计模式是一套被反复使用的、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设计模式是为了重用代码、让代码更容易被他人理解、保证代码可靠性。 毫无疑问，设计模式于己于他人于系统都是多赢的，设计模式使代码编制真正工程化，设计模式是软件工程的基石，如同大厦的一块块砖石一样。项目中合理地运用设计模式可以完美地解决很多问题，每种模式在现实中都有相应的原理来与之对应，每种模式都描述了一个在我们周围不断重复发生的问题，以及该问题的核心解决方案，这也是设计模式能被广泛应用的原因。</p>
<h2 id="什么是-GOF（四人帮，全拼-Gang-of-Four）？"><a href="#什么是-GOF（四人帮，全拼-Gang-of-Four）？" class="headerlink" title="什么是 GOF（四人帮，全拼 Gang of Four）？"></a>什么是 GOF（四人帮，全拼 Gang of Four）？</h2><p>在 1994 年，由 Erich Gamma、Richard Helm、Ralph Johnson 和 John Vlissides 四人合著出版了一本名为 <strong>Design Patterns - Elements of Reusable Object-Oriented Software（中文译名：设计模式 - 可复用的面向对象软件元素）</strong> 的书，该书首次提到了软件开发中设计模式的概念。</p>
<p>四位作者合称 <strong>GOF（四人帮，全拼 Gang of Four）</strong>。他们所提出的设计模式主要是基于以下的面向对象设计原则。</p>
<ul>
<li>对接口编程而不是对实现编程。</li>
<li>优先使用对象组合而不是继承。</li>
</ul>
<h2 id="设计模式的使用"><a href="#设计模式的使用" class="headerlink" title="设计模式的使用"></a>设计模式的使用</h2><p>设计模式在软件开发中的两个主要用途。</p>
<h3 id="开发人员的共同平台"><a href="#开发人员的共同平台" class="headerlink" title="开发人员的共同平台"></a>开发人员的共同平台</h3><p>设计模式提供了一个标准的术语系统，且具体到特定的情景。例如，单例设计模式意味着使用单个对象，这样所有熟悉单例设计模式的开发人员都能使用单个对象，并且可以通过这种方式告诉对方，程序使用的是单例模式。</p>
<h3 id="最佳的实践"><a href="#最佳的实践" class="headerlink" title="最佳的实践"></a>最佳的实践</h3><p>设计模式已经经历了很长一段时间的发展，它们提供了软件开发过程中面临的一般问题的最佳解决方案。学习这些模式有助于经验不足的开发人员通过一种简单快捷的方式来学习软件设计。</p>
<h2 id="设计模式的类型"><a href="#设计模式的类型" class="headerlink" title="设计模式的类型"></a>设计模式的类型</h2><p>根据设计模式的参考书 <strong>Design Patterns - Elements of Reusable Object-Oriented Software（中文译名：设计模式 - 可复用的面向对象软件元素）</strong> 中所提到的，总共有 23 种设计模式。这些模式可以分为三大类：创建型模式（Creational Patterns）、结构型模式（Structural Patterns）、行为型模式（Behavioral Patterns）。当然，我们还会讨论另一类设计模式：J2EE 设计模式。</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>模式 &amp; 描述</th>
<th>包括</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td><strong>创建型模式</strong>这些设计模式提供了一种在创建对象的同时隐藏创建逻辑的方式，而不是使用新的运算符直接实例化对象。这使得程序在判断针对某个给定实例需要创建哪些对象时更加灵活。</td>
<td>工厂模式（Factory Pattern）抽象工厂模式（Abstract Factory Pattern）单例模式（Singleton Pattern）建造者模式（Builder Pattern）原型模式（Prototype Pattern）</td>
</tr>
<tr>
<td>2</td>
<td><strong>结构型模式</strong>这些设计模式关注类和对象的组合。继承的概念被用来组合接口和定义组合对象获得新功能的方式。</td>
<td>适配器模式（Adapter Pattern）桥接模式（Bridge Pattern）过滤器模式（Filter、Criteria Pattern）组合模式（Composite Pattern）装饰器模式（Decorator Pattern）外观模式（Facade Pattern）享元模式（Flyweight Pattern）代理模式（Proxy Pattern）</td>
</tr>
<tr>
<td>3</td>
<td><strong>行为型模式</strong>这些设计模式特别关注对象之间的通信。</td>
<td>责任链模式（Chain of Responsibility Pattern）命令模式（Command Pattern）解释器模式（Interpreter Pattern）迭代器模式（Iterator Pattern）中介者模式（Mediator Pattern）备忘录模式（Memento Pattern）观察者模式（Observer Pattern）状态模式（State Pattern）空对象模式（Null Object Pattern）策略模式（Strategy Pattern）模板模式（Template Pattern）访问者模式（Visitor Pattern）</td>
</tr>
<tr>
<td>4</td>
<td><strong>J2EE 模式</strong>这些设计模式特别关注表示层。这些模式是由 Sun Java Center 鉴定的。</td>
<td>MVC 模式（MVC Pattern）业务代表模式（Business Delegate Pattern）组合实体模式（Composite Entity Pattern）数据访问对象模式（Data Access Object Pattern）前端控制器模式（Front Controller Pattern）拦截过滤器模式（Intercepting Filter Pattern）服务定位器模式（Service Locator Pattern）传输对象模式（Transfer Object Pattern）</td>
</tr>
</tbody>
</table>
<p>下面用一个图片来整体描述一下设计模式之间的关系：</p>
<p><img src="http://www.runoob.com/wp-content/uploads/2014/08/the-relationship-between-design-patterns.jpg" alt="设计模式之间的关系"></p>
<h2 id="设计模式的六大原则"><a href="#设计模式的六大原则" class="headerlink" title="设计模式的六大原则"></a>设计模式的六大原则</h2><p><strong>1、开闭原则（Open Close Principle）</strong></p>
<p>开闭原则的意思是：<strong>对扩展开放，对修改关闭</strong>。在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。简言之，是为了使程序的扩展性好，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类，后面的具体设计中我们会提到这点。</p>
<p><strong>2、里氏代换原则（Liskov Substitution Principle）</strong></p>
<p>里氏代换原则是面向对象设计的基本原则之一。 里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。LSP 是继承复用的基石，只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。实现开闭原则的关键步骤就是抽象化，而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。</p>
<p><strong>3、依赖倒转原则（Dependence Inversion Principle）</strong></p>
<p>这个原则是开闭原则的基础，具体内容：针对接口编程，依赖于抽象而不依赖于具体。</p>
<p><strong>4、接口隔离原则（Interface Segregation Principle）</strong></p>
<p>这个原则的意思是：使用多个隔离的接口，比使用单个接口要好。它还有另外一个意思是：降低类之间的耦合度。由此可见，其实设计模式就是从大型软件架构出发、便于升级和维护的软件设计思想，它强调降低依赖，降低耦合。</p>
<p><strong>5、迪米特法则，又称最少知道原则（Demeter Principle）</strong></p>
<p>最少知道原则是指：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。</p>
<p><strong>6、合成复用原则（Composite Reuse Principle）</strong></p>
<p>合成复用原则是指：尽量使用合成/聚合的方式，而不是使用继承。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;设计模式简介&quot;&gt;&lt;a href=&quot;#设计模式简介&quot; class=&quot;headerlink&quot; title=&quot;设计模式简介&quot;&gt;&lt;/a&gt;设计模式简介&lt;/h1&gt;&lt;p&gt;设计模式（Design pattern）代表了最佳的实践，通常被有经验的面向对象的软件开发人员所采用。设计模
    
    </summary>
    
      <category term="道" scheme="https://feahter.github.io/categories/%E9%81%93/"/>
    
    
      <category term="设计模式" scheme="https://feahter.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>御魂-妖怪分布统计</title>
    <link href="https://feahter.github.io/2016/10/12/%E9%98%B4%E9%98%B3%E5%B8%88-%E5%BE%A1%E9%AD%82-%E5%A6%96%E6%80%AA%E5%88%86%E5%B8%83%E7%BB%9F%E8%AE%A1/"/>
    <id>https://feahter.github.io/2016/10/12/阴阳师-御魂-妖怪分布统计/</id>
    <published>2016-10-12T05:07:48.000Z</published>
    <updated>2016-10-12T05:49:23.120Z</updated>
    
    <content type="html"><![CDATA[<h1 id="阴阳师-御魂-妖怪分布统计"><a href="#阴阳师-御魂-妖怪分布统计" class="headerlink" title="阴阳师-御魂-妖怪分布统计"></a>阴阳师-御魂-妖怪分布统计</h1><h2 id="御魂副本第一层"><a href="#御魂副本第一层" class="headerlink" title="御魂副本第一层"></a>御魂副本第一层</h2><p>一回合：骨女x1、天邪鬼黄x1、天邪鬼青x1</p>
<p>二回合：山童x1、涂壁x1、独眼小僧x1</p>
<p>三回合：八歧大蛇x1、鬼赤x2</p>
<h2 id="御魂副本第二层"><a href="#御魂副本第二层" class="headerlink" title="御魂副本第二层"></a>御魂副本第二层</h2><p>一回合：妖狐x1、鲤鱼精x1、河童x1</p>
<p>二回合：吸血姬x1、萤草x1、兵俑x1</p>
<p>三回合：八歧大蛇x1、童女x2</p>
<h2 id="御魂副本第三层"><a href="#御魂副本第三层" class="headerlink" title="御魂副本第三层"></a>御魂副本第三层</h2><p>一回合：樱花妖x1、蝴蝶精x1、青蛙瓷器x1</p>
<p>二回合：海坊主x1、鲤鱼精x1、椒图x1</p>
<p>三回合：八歧大蛇x1、座敷童子x2</p>
<h2 id="御魂副本第四层"><a href="#御魂副本第四层" class="headerlink" title="御魂副本第四层"></a>御魂副本第四层</h2><p>一回合：犬神x1、童男x1、童女x1</p>
<p>二回合：大天狗x1、小黑x1、小白x1</p>
<p>三回合：八歧大蛇x1、食梦貘x2</p>
<h2 id="御魂副本第五层"><a href="#御魂副本第五层" class="headerlink" title="御魂副本第五层"></a>御魂副本第五层</h2><p>一回合：镰鼬x1、骨女x1、丑时之女x1</p>
<p>二回合：傀儡师x1、跳跳哥哥x1、独眼小僧x1</p>
<p>三回合：八歧大蛇x1、孟婆x2</p>
<h2 id="御魂副本第六层"><a href="#御魂副本第六层" class="headerlink" title="御魂副本第六层"></a>御魂副本第六层</h2><p>一回合：雨女x1、孟婆x1、座敷童子x1</p>
<p>二回合：阎魔x1、巫蛊师x1、鸦天狗x1</p>
<p>三回合：八歧大蛇x1、骨女x2</p>
<h2 id="御魂副本第七层："><a href="#御魂副本第七层：" class="headerlink" title="御魂副本第七层："></a>御魂副本第七层：</h2><p>一回合：凤凰火X1、食发鬼X1、丑女X1</p>
<p>二回合：酒吞X1、琴师X1、山兔X1</p>
<p>三回合：八歧大蛇x1、荒川X2</p>
<h2 id="御魂副本第八层："><a href="#御魂副本第八层：" class="headerlink" title="御魂副本第八层："></a>御魂副本第八层：</h2><p>一回合：饿鬼X1、管狐X1、判官X1</p>
<p>二回合：蝴蝶精X1、椒图X1、白狼X1</p>
<p>三回合：八歧大蛇x1、茨木X2</p>
<h2 id="御魂副本第九层："><a href="#御魂副本第九层：" class="headerlink" title="御魂副本第九层："></a>御魂副本第九层：</h2><p>一回合：椒图X1、骨女X1、莹草X1 </p>
<p>二回合：清姬X1、食梦貘X1、狸猫X1</p>
<p>三回合：八歧大蛇x1、两面佛X2</p>
<h2 id="御魂副本第十层："><a href="#御魂副本第十层：" class="headerlink" title="御魂副本第十层："></a>御魂副本第十层：</h2><p>一回合：觉X1、二口女X1、莹草X1</p>
<p>二回合：青行灯X1、椒图X1、酒吞童子X1</p>
<p>三回合：八歧大蛇x1、大天狗X2</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;阴阳师-御魂-妖怪分布统计&quot;&gt;&lt;a href=&quot;#阴阳师-御魂-妖怪分布统计&quot; class=&quot;headerlink&quot; title=&quot;阴阳师-御魂-妖怪分布统计&quot;&gt;&lt;/a&gt;阴阳师-御魂-妖怪分布统计&lt;/h1&gt;&lt;h2 id=&quot;御魂副本第一层&quot;&gt;&lt;a href=&quot;#御魂
    
    </summary>
    
      <category term="杂" scheme="https://feahter.github.io/categories/%E6%9D%82/"/>
    
    
      <category term="游戏-阴阳师" scheme="https://feahter.github.io/tags/%E6%B8%B8%E6%88%8F-%E9%98%B4%E9%98%B3%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>探索-妖怪分布统计</title>
    <link href="https://feahter.github.io/2016/10/12/%E9%98%B4%E9%98%B3%E5%B8%88-%E6%8E%A2%E7%B4%A2-%E5%A6%96%E6%80%AA%E5%88%86%E5%B8%83%E7%BB%9F%E8%AE%A1/"/>
    <id>https://feahter.github.io/2016/10/12/阴阳师-探索-妖怪分布统计/</id>
    <published>2016-10-12T04:29:45.000Z</published>
    <updated>2016-10-12T05:49:09.335Z</updated>
    
    <content type="html"><![CDATA[<h1 id="阴阳师-探索-妖怪分布统计"><a href="#阴阳师-探索-妖怪分布统计" class="headerlink" title="阴阳师-探索-妖怪分布统计"></a>阴阳师-探索-妖怪分布统计</h1><h2 id="探索副本第一章"><a href="#探索副本第一章" class="headerlink" title="探索副本第一章"></a>探索副本第一章</h2><p>天邪鬼绿1——天邪鬼绿x1、提灯小僧x2</p>
<p>天邪鬼绿2——天邪鬼绿x1、灯笼鬼x2</p>
<p>提灯小僧1——天邪鬼绿x2、提灯小僧x1</p>
<p>提灯小僧2——灯笼鬼x2、提灯小僧x1</p>
<p>首领：九命猫——九命猫x3</p>
<h2 id="探索副本第二章"><a href="#探索副本第二章" class="headerlink" title="探索副本第二章"></a>探索副本第二章</h2><p>帚神——帚神x1、寄生魂x1、盗墓小鬼x1</p>
<p>盗墓小鬼1——寄生魂x2、盗墓小鬼x1</p>
<p>盗墓小鬼2——灯笼鬼x2、盗墓小鬼x1</p>
<p>寄生魂1——灯笼鬼x2、寄生魂x1</p>
<p>寄生魂2——盗墓小鬼x2、寄生魂x1</p>
<p>首领：座敷童子——座敷童子x1、天邪鬼绿x2、天邪鬼青x1</p>
<h2 id="探索副本第三章"><a href="#探索副本第三章" class="headerlink" title="探索副本第三章"></a>探索副本第三章</h2><p>天邪鬼黄1——天邪鬼黄x1、帚神x2、涂壁x1</p>
<p>天邪鬼黄2——天邪鬼黄x1、童女x3</p>
<p>赤舌1——赤舌x1、提灯小僧x1、灯笼鬼x2 、二回合 鸦天狗</p>
<p>赤舌2——赤舌x1、鬼黄x1、童女x2 二回合 鸦天狗</p>
<p>兵俑1——兵俑x1、提灯小僧x1、童女x2</p>
<p>兵俑2——兵俑x1、提灯小僧x1、灯笼鬼x2</p>
<p>首领：凤凰火——凤凰火x1 寄生魂x3</p>
<h2 id="探索副本第四章"><a href="#探索副本第四章" class="headerlink" title="探索副本第四章"></a>探索副本第四章</h2><p>帚神1——帚神x1、涂壁x2</p>
<p>帚神2——帚神x1、涂壁x1、唐纸伞妖x2</p>
<p>唐纸伞妖1——唐纸伞妖x1、天邪鬼赤x3</p>
<p>唐纸伞妖2——唐纸伞妖x1、天邪鬼赤x1、涂壁x2</p>
<p>天邪鬼赤1——天邪鬼赤x1、唐纸伞妖x1、涂壁x2</p>
<p>天邪鬼赤2——天邪鬼赤x1、唐纸伞妖x2</p>
<p>首领：雨女——雨女x1、青蛙瓷器x1、帚神x2</p>
<h2 id="探索副本第五章"><a href="#探索副本第五章" class="headerlink" title="探索副本第五章"></a>探索副本第五章</h2><p>涂壁1——涂壁x1、源博雅的神兽(?)x1、天邪鬼赤x2</p>
<p>涂壁2——涂壁x1、天邪鬼赤x3</p>
<p>帚神1——帚神x1、天邪鬼赤x1、涂壁x2</p>
<p>帚神2——帚神x1、天邪鬼赤x1、天邪鬼黄x2</p>
<p>管狐1——管狐x2、天邪鬼黄x2 二回合 寄生魂x1</p>
<p>管狐2——管狐x1、天邪鬼绿x3 二回合 寄生魂x1</p>
<p>首领：食发鬼——食发鬼x1、灯笼鬼x1、天邪鬼青x2</p>
<h2 id="探索副本第六章"><a href="#探索副本第六章" class="headerlink" title="探索副本第六章"></a>探索副本第六章</h2><p>灯笼鬼——灯笼鬼x1、帚神x3</p>
<p>天邪鬼青——天邪鬼青x1、天邪鬼绿x3</p>
<p>蝴蝶精——蝴蝶精x1、涂壁x1、天邪鬼赤x2 二回合 三尾狐x1</p>
<p>首领：巫蛊师——巫蛊师x1、天邪鬼绿x3</p>
<h2 id="探索副本第七章"><a href="#探索副本第七章" class="headerlink" title="探索副本第七章"></a>探索副本第七章</h2><p>鲤鱼精1——鲤鱼精x3、帚神x1</p>
<p>鲤鱼精2——鲤鱼精x1、帚神x3</p>
<p>河童1——河童x1、鲤鱼精x1、涂壁x2</p>
<p>河童2——河童x1、灯笼鬼x1、跳跳犬x2</p>
<p>提灯小僧12——提灯小僧x1、跳跳犬x3、二回合-管狐x1</p>
<p>提灯小僧3——提灯小僧x1、跳跳犬x1、鲤鱼精x2、二回合-管狐x1</p>
<p>首领：妖狐——妖狐x1、涂壁x1、座敷童子x2、二回合-管狐x1、寄生魂x1、天邪鬼赤x2</p>
<h2 id="探索副本第八章"><a href="#探索副本第八章" class="headerlink" title="探索副本第八章"></a>探索副本第八章</h2><p>唐纸伞妖1——伞妖x1、帚神x3</p>
<p>唐纸伞妖2——伞妖x1、山童x1、帚神x2</p>
<p>樱花妖1——樱花妖x1、帚神x1、涂壁x2、二回合-雪女x1</p>
<p>樱花妖2——樱花妖x1、涂壁x3、二回合-雪女x1</p>
<p>天邪鬼绿——天邪鬼绿x1、天邪鬼青x1、天邪鬼黄x2</p>
<p>首领：桃花妖——桃花妖x1、天邪鬼青x1、提灯小僧x2、二回合-樱花妖x1、帚神x1、蝴蝶精x2</p>
<h2 id="探索副本第九章"><a href="#探索副本第九章" class="headerlink" title="探索副本第九章"></a>探索副本第九章</h2><p>提灯小僧1——提灯小僧x1、灯笼鬼x3</p>
<p>提灯小僧2——提灯小僧x1、灯笼鬼x1、铁鼠x2</p>
<p>铁鼠1——铁鼠x1、帚神x3</p>
<p>铁鼠2——铁鼠x2、帚神x2</p>
<p>山兔1——山兔x3、铁鼠x1、二回合-鸦天狗</p>
<p>山兔2——山兔x4、二回合-鸦天狗</p>
<p>首领：孟婆——孟婆x1、饿鬼x3、二回合-孟婆x1、灯笼鬼x1、鸦天狗x2</p>
<h2 id="探索副本第十章"><a href="#探索副本第十章" class="headerlink" title="探索副本第十章"></a>探索副本第十章</h2><p>丑时之女——丑时之女x1、傀儡师x1、天邪鬼青x2</p>
<p>傀儡师1——傀儡师x1、觉x1、狸猫x2</p>
<p>傀儡师2——傀儡师x1、觉x1、座敷童子x2、二回合-犬神x1</p>
<p>觉1——觉x1、狸猫x3</p>
<p>觉2——觉x1、赤舌x1、座敷童子x2、二回合-犬神x1</p>
<p>首领：酒吞童子——酒吞童子x1、跳跳哥哥x1、食发鬼x2、二回合-酒吞童子x1、兵俑x1、骨女x2</p>
<h2 id="探索副本第十一章"><a href="#探索副本第十一章" class="headerlink" title="探索副本第十一章"></a>探索副本第十一章</h2><p>武士之灵1——武士之灵x1、寄生魂x3</p>
<p>武士之灵2——武士之灵x1、独眼小僧x3</p>
<p>独眼小僧1——独眼小僧x1、涂壁x1、天邪鬼赤x2</p>
<p>独眼小僧2——独眼小僧x1、管狐x1、天邪鬼赤x2</p>
<p>饿鬼1——饿鬼x1、涂壁x1、管狐x2</p>
<p>饿鬼2——饿鬼x3、管狐x1</p>
<p>首领：鬼女红叶——鬼女红叶x1、童女x1、天邪鬼青x2、二回合-鬼女红叶x1、骨女x1、觉x2</p>
<h2 id="探索副本第十二章"><a href="#探索副本第十二章" class="headerlink" title="探索副本第十二章"></a>探索副本第十二章</h2><p>海坊主1——海坊主x1、帚神x1、涂壁x2</p>
<p>海坊主2——海坊主x1、涂壁x1、鸦天狗x2</p>
<p>童男1——童男x1、天邪鬼黄x1、鸦天狗x2</p>
<p>童男2——童男x1、童女x1、鸦天狗x2</p>
<p>童女1——童女x1、盗墓小鬼x1、提灯小僧x2、二回合-雪女x1</p>
<p>童女2——童女x3、盗墓小鬼x1、二回合-雪女x1</p>
<p>首领：雪女——雪女x1、寄生魂x1、武士之灵x2、二回合-雪女x1、跳跳妹妹x1、跳跳哥哥x2</p>
<h2 id="探索副本第十三章"><a href="#探索副本第十三章" class="headerlink" title="探索副本第十三章"></a>探索副本第十三章</h2><p>饿鬼12——饿鬼x1 、天邪鬼赤x3</p>
<p>饿鬼3——饿鬼x1 、天邪鬼赤x3、二回合-首无x1</p>
<p>唐纸伞妖12——唐纸伞妖x1、鬼赤x1、天邪鬼绿x2</p>
<p>唐纸伞妖3——唐纸伞妖x1、鬼赤x1、天邪鬼绿x2、二回合-首无x1</p>
<p>首领：首无——首无x1、骨女x1、灯笼鬼x1、山兔x1</p>
<h2 id="探索副本第十四章"><a href="#探索副本第十四章" class="headerlink" title="探索副本第十四章"></a>探索副本第十四章</h2><p>帚神123——帚神x1、天邪鬼赤x3</p>
<p>涂壁12——涂壁x6</p>
<p>涂壁3——涂壁x6、二回合-食梦貘x1</p>
<p>首领：食梦貘——食梦貘x1、天邪鬼赤x3、二回合-食梦貘x4</p>
<h2 id="探索副本第十五章"><a href="#探索副本第十五章" class="headerlink" title="探索副本第十五章"></a>探索副本第十五章</h2><p>天邪鬼绿123——天邪鬼绿x1、赤舌x1、天邪鬼赤x2</p>
<p>提灯小僧12——提灯小僧x1、赤舌x1、九命猫x2</p>
<p>提灯小僧3——提灯小僧x1、赤舌x1、九命猫x2、二回合-大天狗x1</p>
<p>首领：跳跳妹妹——跳跳妹妹x1、九命猫x3</p>
<h2 id="探索副本第十六章"><a href="#探索副本第十六章" class="headerlink" title="探索副本第十六章"></a>探索副本第十六章</h2><p>饿鬼123——饿鬼x1、山兔x1、山童x2</p>
<p>赤舌12——赤舌x1、寄生魂x3</p>
<p>赤舌3——赤舌x1、寄生魂x3、二回合-赤舌x1</p>
<p>首领：判官——判官x1、小黑x1、小白x1</p>
<h2 id="探索副本第十七章"><a href="#探索副本第十七章" class="headerlink" title="探索副本第十七章"></a>探索副本第十七章</h2><p>鸦天狗123——鸦天狗x1、觉醒风小怪x3</p>
<p>狸猫12——狸猫x1、觉醒火小怪x3</p>
<p>狸猫3——狸猫x1、觉醒火小怪x3、二回合-暗凤凰(?)x1</p>
<p>首领：荒川之主——荒川之主x1、灯笼鬼x1、骨女x1、山兔x1</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;阴阳师-探索-妖怪分布统计&quot;&gt;&lt;a href=&quot;#阴阳师-探索-妖怪分布统计&quot; class=&quot;headerlink&quot; title=&quot;阴阳师-探索-妖怪分布统计&quot;&gt;&lt;/a&gt;阴阳师-探索-妖怪分布统计&lt;/h1&gt;&lt;h2 id=&quot;探索副本第一章&quot;&gt;&lt;a href=&quot;#探索
    
    </summary>
    
      <category term="杂" scheme="https://feahter.github.io/categories/%E6%9D%82/"/>
    
    
      <category term="游戏-阴阳师" scheme="https://feahter.github.io/tags/%E6%B8%B8%E6%88%8F-%E9%98%B4%E9%98%B3%E5%B8%88/"/>
    
  </entry>
  
  <entry>
    <title>ST3私人定制</title>
    <link href="https://feahter.github.io/2016/09/13/ST3%E7%A7%81%E4%BA%BA%E5%AE%9A%E5%88%B6/"/>
    <id>https://feahter.github.io/2016/09/13/ST3私人定制/</id>
    <published>2016-09-13T09:27:29.000Z</published>
    <updated>2016-10-12T05:39:30.725Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ST3的私人订制。</strong></p>
<h2 id="一、官网下载安装"><a href="#一、官网下载安装" class="headerlink" title="一、官网下载安装"></a>一、官网下载安装</h2><p><strong>1.</strong><a href="http://www.sublimetext.com/3" target="_blank" rel="external"><strong>官网</strong></a><strong>下载。</strong></p>
<p><strong>2.软件安装。</strong></p>
<h2 id="二、正版激活"><a href="#二、正版激活" class="headerlink" title="二、正版激活"></a>二、正版激活</h2><p><strong>Sublime Text 3 许可证</strong></p>
<p><em>—– BEGIN LICENSE —–</em><br><em>Nicolas Hennion</em><br><em>Single User License</em><br><em>EA7E-866075</em><br><em>8A01AA83 1D668D24 4484AEBC 3B04512C</em><br><em>827B0DE5 69E9B07A A39ACCC0 F95F5410</em><br><em>729D5639 4C37CECB B2522FB3 8D37FDC1</em><br><em>72899363 BBA441AC A5F47F08 6CD3B3FE</em><br><em>CEFB3783 B2E1BA96 71AAF7B4 AFB61B1D</em><br><em>0CC513E7 52FF2333 9F726D2C CDE53B4A</em><br><em>810C0D4F E1F419A3 CDA0832B 8440565A</em><br><em>35BF00F6 4CA9F869 ED10E245 469C233E</em><br><em>—— END LICENSE ——</em></p>
<p><strong>1.打开Sublime菜单 &gt; help &gt; enter License</strong></p>
<p><strong>2.复制填入如上许可证或自行搜索一枚，确认激活。</strong></p>
<h2 id="三、插件管理器安装"><a href="#三、插件管理器安装" class="headerlink" title="三、插件管理器安装"></a>三、插件管理器安装</h2><p><strong>1.<code>ctrl+~</code> 打开ST自带控制台，复制如下代码至输入框，回车等待。</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> urllib.request,os,hashlib; h = <span class="string">'2915d1851351e5ee549c20394736b442'</span> + <span class="string">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> open(os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by)</div></pre></td></tr></table></figure>
<p><strong>2.安装完成后，重启ST，至工具栏 Preferences 见到Package Control 项即安装成功</strong>。(</p>
<p>Package Control 用于ST插件的管理，安装、卸载、更新等工作。</p>
<p>)</p>
<h2 id="四、插件安装"><a href="#四、插件安装" class="headerlink" title="四、插件安装"></a>四、插件安装</h2><p><strong>1.插件安装</strong><br><code>Ctrl+Shift+P</code>打开插件管理器，输入框输入install，选择安装插件功能，等待弹出安装框，复制或填入要安装的插件名称，回车等待。(每一个插件安装的过程如上，部分安装不了的可能需要科学上网。)<br><strong>插件表：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">插件</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">ChineseLocalization</td>
<td style="text-align:center">汉化</td>
</tr>
<tr>
<td style="text-align:center">HTML5</td>
<td style="text-align:center">H5标签拓展</td>
</tr>
<tr>
<td style="text-align:center">JsFormat</td>
<td style="text-align:center">javascript格式化</td>
</tr>
<tr>
<td style="text-align:center">CSS Format</td>
<td style="text-align:center">CSS</td>
</tr>
<tr>
<td style="text-align:center">Tag</td>
<td style="text-align:center">HTML</td>
</tr>
<tr>
<td style="text-align:center">Brackethighlighter</td>
<td style="text-align:center">标签对标记</td>
</tr>
<tr>
<td style="text-align:center">styleToken</td>
<td style="text-align:center">标记颜色代码</td>
</tr>
<tr>
<td style="text-align:center">SideBarEnhancements</td>
<td style="text-align:center">增强型侧边栏</td>
</tr>
<tr>
<td style="text-align:center">BufferScroll</td>
<td style="text-align:center">代码折叠状态保留</td>
</tr>
<tr>
<td style="text-align:center">Emmet</td>
<td style="text-align:center">前端神器</td>
</tr>
<tr>
<td style="text-align:center">FileHeader</td>
<td style="text-align:center">文件模板，保存文件修改时间</td>
</tr>
<tr>
<td style="text-align:center">Better Completion</td>
<td style="text-align:center">全能代码提示</td>
</tr>
<tr>
<td style="text-align:center">ConvertToUTF8</td>
<td style="text-align:center">GBK编码兼容</td>
</tr>
<tr>
<td style="text-align:center">PackageResourceViewer</td>
<td style="text-align:center">插件</td>
</tr>
</tbody>
</table>
<p><strong>2.用户设置</strong></p>
<p>工具栏 Preferences – Settings-User，打开用户设置文件<br>选择性填入如下内容：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">"trim_trailing_white_space_on_save": true,</div><div class="line">"ensure_newline_at_eof_on_save": true,</div><div class="line">"translate_tabs_to_spaces": true,</div><div class="line">"tab_size": 2,</div><div class="line">"draw_minimap_border": true,</div><div class="line">"save_on_focus_lost": true,</div><div class="line">"highlight_line": true,</div><div class="line">"word_wrap": "true",</div><div class="line">"fade_fold_buttons": false,</div><div class="line">"bold_folder_labels": true,</div><div class="line">"highlight_modified_tabs": true,</div><div class="line">"default_line_ending": "unix", </div><div class="line">"auto_find_in_selection": true</div></pre></td></tr></table></figure></p>
<p>trim_trailing_white_space_on_save,自动移除行尾多余空格。<br>ensure_newline_at_eof_on_save,文件末尾自动保留一个空行，防止文件在某些开发环境失效。<br>translate_tabs_to_spaces,代码 tab 对齐转换为空格对齐，<br>tab_size,配合设置空格数。这个需求因人而异了，不喜欢可以去掉。<br>draw_minimap_border,用于右侧代码预览时给所在区域加上边框，方便识别。<br>save_on_focus_lost,窗口失焦立即保存文件，嘛嘛再也不用担心你忘记保存了。<br>highlight_line,当前行高亮。<br>word_wrap,设置自动换行。<br>fade_fold_buttons,默认显示行号右侧的代码段闭合展开三角号。<br>bold_folder_labels,侧边栏文件夹显示加粗，区别于文件。<br>highlight_modified_tabs,高亮未保存文件。<br>default_line_ending: “unix”,使用 unix 风格的换行符。<br>auto_find_in_selection: true,开启选中范围内搜索(而不是整个文档)</p>
<p><strong>3.快捷键设置</strong></p>
<p>工具栏 Preferences – key Bindings-User 打开用户按键绑定</p>
<p>选择性填入如下内容：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123; "keys": ["alt+space"], "command": "auto_complete" &#125;,</div><div class="line">&#123; "keys": ["alt+space"], "command": "replace_completion_with_auto_complete", "context":</div><div class="line">  [</div><div class="line">    &#123; "key": "last_command", "operator": "equal", "operand": "insert_best_completion" &#125;,</div><div class="line">    &#123; "key": "auto_complete_visible", "operator": "equal", "operand": false &#125;,</div><div class="line">    &#123; "key": "setting.tab_completion", "operator": "equal", "operand": true &#125;</div><div class="line">  ]</div><div class="line">&#125;,</div><div class="line">&#123; "keys": ["ctrl+alt+d"], "command": "goto_definition" &#125;,</div></pre></td></tr></table></figure>
<p>ST3默认的代码提示快捷键为 <code>ctrl + space</code> ，但是这个快捷键在天朝一直都被输入法霸占Mac用户泥奏凯 ，修改快捷键为 <code>alt+space</code> 。<br>ST3自带跳转到函数或CSS定义功能，在DreamWeaver中使用 <code>ctrl+d</code> 打开CSS样式定义源面板。</p>
<p>使用<code>ctrl+alt+d</code> 定义这个功能，ST3默认的 <code>ctrl+d</code> 已有选择相同字符的用途。</p>
<table>
<thead>
<tr>
<th style="text-align:center">快捷键</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>ctrl+shift+p</strong></td>
<td style="text-align:center">所有命令</td>
</tr>
<tr>
<td style="text-align:center">ctrl+g</td>
<td style="text-align:center">跳转行</td>
</tr>
<tr>
<td style="text-align:center">ctrl+/</td>
<td style="text-align:center">注释</td>
</tr>
<tr>
<td style="text-align:center">ctrl+d</td>
<td style="text-align:center">选择相同字符</td>
</tr>
<tr>
<td style="text-align:center">ctrl+shift+up/down</td>
<td style="text-align:center">整行移动</td>
</tr>
<tr>
<td style="text-align:center">ctrl+alt+right</td>
<td style="text-align:center">跳到下一个编辑点</td>
</tr>
<tr>
<td style="text-align:center">ctrl+u</td>
<td style="text-align:center">图片原始大小更新</td>
</tr>
<tr>
<td style="text-align:center">ctrl+shift+g</td>
<td style="text-align:center">批量格式生成</td>
</tr>
<tr>
<td style="text-align:center">ctrl+shift+y</td>
<td style="text-align:center">直接公式计算</td>
</tr>
<tr>
<td style="text-align:center">ctrl+up</td>
<td style="text-align:center">CSS数值加减1（alt+up 数值加减0.1）</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ST3的私人订制。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;一、官网下载安装&quot;&gt;&lt;a href=&quot;#一、官网下载安装&quot; class=&quot;headerlink&quot; title=&quot;一、官网下载安装&quot;&gt;&lt;/a&gt;一、官网下载安装&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.&lt;/
    
    </summary>
    
      <category term="器" scheme="https://feahter.github.io/categories/%E5%99%A8/"/>
    
    
      <category term="sublime" scheme="https://feahter.github.io/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>jQuery操作dom元素</title>
    <link href="https://feahter.github.io/2016/09/13/jQuery%E6%93%8D%E4%BD%9Cdom%E5%85%83%E7%B4%A0/"/>
    <id>https://feahter.github.io/2016/09/13/jQuery操作dom元素/</id>
    <published>2016-09-13T08:43:07.000Z</published>
    <updated>2016-12-08T03:19:51.395Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.w3school.com.cn/jquery/jquery_ref_manipulation.asp" target="_blank" rel="external">http://www.w3school.com.cn/jquery/jquery_ref_manipulation.asp</a><br>| <a href="http://www.w3school.com.cn/jquery/attributes_addclass.asp" target="_blank" rel="external">addClass()</a> | 向匹配的元素添加指定的类名。              |<br>| —————————————- | ————————— |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_after.asp" target="_blank" rel="external">after()</a> | 在匹配的元素之后插入内容。               |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_append.asp" target="_blank" rel="external">append()</a> | 向匹配的元素内部追加内容。               |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_appendto.asp" target="_blank" rel="external">appendTo()</a> | 向匹配的元素内部追加内容。               |<br>| <a href="http://www.w3school.com.cn/jquery/attributes_attr.asp" target="_blank" rel="external">attr()</a> | 设置或返回匹配元素的属性和值。             |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_before.asp" target="_blank" rel="external">before()</a> | 在每个匹配的元素之前插入内容。             |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_clone.asp" target="_blank" rel="external">clone()</a> | 创建匹配元素集合的副本。                |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_detach.asp" target="_blank" rel="external">detach()</a> | 从 DOM 中移除匹配元素集合。            |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_empty.asp" target="_blank" rel="external">empty()</a> | 删除匹配的元素集合中所有的子节点。           |<br>| <a href="http://www.w3school.com.cn/jquery/attributes_hasclass.asp" target="_blank" rel="external">hasClass()</a> | 检查匹配的元素是否拥有指定的类。            |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_html.asp" target="_blank" rel="external">html()</a> | 设置或返回匹配的元素集合中的 HTML 内容。     |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_insertafter.asp" target="_blank" rel="external">insertAfter()</a> | 把匹配的元素插入到另一个指定的元素集合的后面。     |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_insertbefore.asp" target="_blank" rel="external">insertBefore()</a> | 把匹配的元素插入到另一个指定的元素集合的前面。     |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_prepend.asp" target="_blank" rel="external">prepend()</a> | 向每个匹配的元素内部前置内容。             |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_perpendto.asp" target="_blank" rel="external">prependTo()</a> | 向每个匹配的元素内部前置内容。             |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_remove.asp" target="_blank" rel="external">remove()</a> | 移除所有匹配的元素。                  |<br>| <a href="http://www.w3school.com.cn/jquery/attributes_removeattr.asp" target="_blank" rel="external">removeAttr()</a> | 从所有匹配的元素中移除指定的属性。           |<br>| <a href="http://www.w3school.com.cn/jquery/attributes_removeclass.asp" target="_blank" rel="external">removeClass()</a> | 从所有匹配的元素中删除全部或者指定的类。        |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_replaceall.asp" target="_blank" rel="external">replaceAll()</a> | 用匹配的元素替换所有匹配到的元素。           |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_replacewith.asp" target="_blank" rel="external">replaceWith()</a> | 用新内容替换匹配的元素。                |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_text.asp" target="_blank" rel="external">text()</a> | 设置或返回匹配元素的内容。               |<br>| <a href="http://www.w3school.com.cn/jquery/attributes_toggleclass.asp" target="_blank" rel="external">toggleClass()</a> | 从匹配的元素中添加或删除一个类。            |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_unwrap.asp" target="_blank" rel="external">unwrap()</a> | 移除并替换指定元素的父元素。              |<br>| <a href="http://www.w3school.com.cn/jquery/attributes_val.asp" target="_blank" rel="external">val()</a> | 设置或返回匹配元素的值。                |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_wrap.asp" target="_blank" rel="external">wrap()</a> | 把匹配的元素用指定的内容或元素包裹起来。        |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_wrapall.asp" target="_blank" rel="external">wrapAll()</a> | 把所有匹配的元素用指定的内容或元素包裹起来。      |<br>| <a href="http://www.w3school.com.cn/jquery/manipulation_wrapinner.asp" target="_blank" rel="external">wrapinner()</a> | 将每一个匹配的元素的子内容用指定的内容或元素包裹起来。 |</p>
<p>获取dom获取表单</p>
<p>document.getElementsByTagName（”from”）;</p>
<p>使用dom获取 某元素src属性的方法</p>
<p>element.getAttribute(“src”); </p>
<p>利用jquery操作dom</p>
<ol>
<li>利用jquery进行文档处理</li>
</ol>
<p>2.1：外部插入</p>
<p><strong>after(content)</strong></p>
<p>在每个匹配的元素之后插入内容。</p>
<p>返回值</p>
<p>jQuery</p>
<p>参数</p>
<p>content (String, dom, jQuery) : 插入到每个目标后的内容</p>
<p>示例</p>
<p>在所有段落之后插入一些HTML标记代码。</p>
<p>HTML 代码:</p>
<p>I would like to say: </p>

<p>jQuery 代码:</p>
<p>$(“p”).after(“<b>Hello</b>“);</p>
<p>结果:</p>
<p>I would like to say: </p><b>Hello</b><br><br>在所有段落之后插入一个DOM元素。<br><br>HTML 代码:<br><br><b id="foo">Hello</b><p>I would like to say: </p>

<p>jQuery 代码:</p>
<p><strong>$(“p”).after( $(“#foo”)[0] );//**</strong>将jquery<strong><strong>对象转换为dom</strong></strong>对象$(“#foo”)[0]**</p>
<p>结果:</p>
<p>I would like to say: </p><b id="foo">Hello</b><br><br>在所有段落中后插入一个jQuery对象(类似于一个DOM元素数组)。<br><br>HTML 代码:<br><br><b>Hello</b><p>I would like to say: </p>

<p>jQuery 代码:</p>
<p><strong>$(“p”).after( $(“b”) );</strong></p>
<p>结果:</p>
<p>I would like to say: </p><b>Hello</b><br><br>before(content)在每个匹配的元素之前插入内容。<br><br>返回值<br><br>jQuery<br><br>参数<br><br>content (String, Element, jQuery) : 插入到每个目标前的内容<br><br>示例<br><br>在所有段落之前插入一些HTML标记代码。<br><br>HTML 代码:<br><br><p>I would like to say: </p>

<p>jQuery 代码:</p>
<p>$(“p”).before(“<b>Hello</b>“);</p>
<p>结果:   [ <b>Hello</b></p><p>I would like to say: </p> ]<p></p>
<p>在所有段落之前插入一个元素。</p>
<p>HTML 代码:</p>
<p>I would like to say: </p><b id="foo">Hello</b><br><br>jQuery 代码:<br><br>$(“p”).before( $(“#foo”)[0] );<br><br>结果:<br><br><b id="foo">Hello</b><p>I would like to say: </p>

<p>在所有段落中前插入一个jQuery对象(类似于一个DOM元素数组)。</p>
<p>HTML 代码:</p>
<p>I would like to say: </p><b>Hello</b><br><br>jQuery 代码:<br><br>$(“p”).before( $(“b”) );<br><br>结果:<br><br><b>Hello</b><p>I would like to say: </p>

<p><strong>insertAfter(content)</strong></p>
<p>把所有匹配的元素插入到另一个、指定的元素元素集合的后面。</p>
<p>实际上，使用这个方法是颠倒了常规的$(A).after(B)的操作，即不是把B插入到A后面，而是把A插入到B后面。</p>
<p>返回值jQuery</p>
<p>参数 content (String) : 用于匹配元素的jQuery表达式</p>
<p>示例</p>
<p>在所有段落之后插入一个元素。与 $(“#foo”).after(“p”)相同</p>
<p>HTML 代码:</p>
<p>I would like to say: </p><div id="foo">Hello</div><br><br>jQuery 代码:<br><br>$(“p”).insertAfter($(“#foo“)); <strong> **</strong>在$(“#foo“)<strong>**在它后面插入段落P</strong><br><br>结果:<br><br><div id="foo">Hello</div><p>I would like to say: </p>

<p>insertBefore(content)</p>
<p>把所有匹配的元素插入到另一个、指定的元素元素集合的前面。</p>
<p>实际上，使用这个方法是颠倒了常规的$(A).before(B)的操作，即不是把B插入到A前面，而是把A插入到B前面。</p>
<p>返回值jQuery</p>
<p>参数 content (String) : 用于匹配元素的jQuery表达式</p>
<p>示例</p>
<p>在所有段落之前插入一个元素。与 $(“#foo”).before(“p”)相同。</p>
<p>HTML 代码:</p>
<div id="foo">Hello</div><p>I would like to say: </p><br><br>jQuery 代码:<br><br>$(“p”).insertBefore($(“#foo“));   在$(“#foo“)前面插入段落p<br><br>结果:<br><br><p>I would like to say: </p><div id="foo">Hello</div>



<p>2.2: 内部插入</p>
<p><strong>append(content)</strong></p>
<p>向每个匹配的元素内部追加内容。</p>
<p>这个操作与对指定的元素执行appendChild方法，将它们添加到文档中的情况类似。</p>
<p>返回值jQuery</p>
<p><strong>参数 content (String, Element, jQuery) : **</strong>要追加到目标中的内容**</p>
<p>示例 ：向所有段落中追加一些HTML标记。</p>
<p>HTML 代码:</p>
<p>I would like to say: </p>

<p>jQuery 代码:</p>
<p>$(“p”).append(“<b>Hello</b>“);   <strong>在p**</strong>元素之间插入 b<strong>**元素</strong></p>
<p>结果:</p>
<p>[ </p><p>I would like to say: <b>Hello</b></p> ]<p></p>
<p>appendTo(content)</p>
<p>把所有匹配的元素追加到另一个、指定的元素元素集合中。</p>
<p>实际上，使用这个方法是颠倒了常规的$(A).append(B)的操作，即不是把B追加到A中，而是把A追加到B中。</p>
<p>返回值jQuery</p>
<p>参数content (String) :用于被追加的内容</p>
<p>示例</p>
<p>把所有段落追加到ID值为foo的元素中。</p>
<p>HTML 代码:</p>
<p>I would like to say: </p><div id="foo"></div><br><br>jQuery 代码:<br><br>$(“p”).appendTo($(“#foo“)); <strong>P**</strong>元素被添加到div<strong><strong>元素#foo</strong></strong>之中<strong><br><br>结果:<br><br><div id="foo"><p>I would like to say: </p></div>

</strong>prepend(content)**<br><br>向每个匹配的元素内部前置内容。<br><br>这是向所有匹配元素内部的开始处插入内容的最佳方式。<br><br>返回值jQuery<br><br>参数content (String, Element, jQuery) : 要插入到目标元素内部前端的内容<br><br>示例<br><br>向所有段落中前置一些HTML标记代码。<br><br>HTML 代码:<br><br><p>I would like to say: </p>

<p>jQuery 代码:</p>
<p>$(“p”).prepend(“<b>Hello</b>“);   //将<b>Hello</b>添加到p标签内容前</p>
<p>结果:</p>
<p>[ </p><p><b>Hello</b>I would like to say: </p> ]<p></p>
<p>将一个DOM元素前置入所有段落</p>
<p>HTML 代码:</p>
<p>I would like to say: </p><br><p>I would like to say: </p><br><b class="foo">Hello</b><br><b class="foo">Good Bye</b><br><br>jQuery 代码:<br><br>$(“p”).prepend( $(“.foo”)[0] );<br><br>结果:<br><br><p><b class="foo">Hello</b>I would like to say: </p><br><p><b class="foo">Hello</b>I would like to say: </p><br><b class="foo">Hello</b><br><b class="foo">Good Bye</b><br><br>向所有段落中前置一个jQuery对象(类似于一个DOM元素数组)。<br><br>HTML 代码:<br><br><p>I would like to say: </p><b>Hello</b><br><br>jQuery 代码:<br><br>$(“p”).prepend( $(“b”) );<br><br>结果:<br><br><p><b>Hello</b>I would like to say: </p>

<p><strong>prependTo(content)</strong></p>
<p>把所有匹配的元素前置到另一个、指定的元素元素集合中。</p>
<p>实际上，使用这个方法是颠倒了常规的$(A).prepend(B)的操作，即不是把B前置到A中，而是把A前置到B中。</p>
<p>返回值jQuery</p>
<p>参数content (String) :用于匹配元素的jQuery表达式</p>
<p>示例</p>
<p>把所有段落追加到ID值为foo的元素中。</p>
<p>HTML 代码:</p>
<p>I would like to say: </p><div id="foo"></div><br><br>jQuery 代码:<br><br>$(“p”).prependTo($(“#foo“));  <strong>把所有段落插入到div foo**</strong>中<strong><br><br>结果:<br><br><div id="foo"><p>I would like to say: </p></div> 2.3:

</strong>包裹<strong>**</strong><br><br>}       <strong>wrap(html)</strong><br><br>把所有匹配的元素用其他元素的结构化标记包裹起来。<br><br>这种包装对于在文档中插入额外的结构化标记最有用，而且它不会破坏原始文档的语义品质。 这个函数的原理是检查提供的第一个元素（它是由所提供的HTML标记代码动态生成的），并在它的代码结构中找到最上层的祖先元素－－这个祖先元素就是包裹元素。<br><br><br><br>当HTML标记代码中的元素包含文本时无法使用这个函数。因此，如果要添加文本应该在包裹完成之后再行添加。<br><br>返回值jQuery<br><br>参数<br><br>html (String) : HTML标记代码字符串，用于动态生成元素并包裹目标元素<br><br>示例<br><br>把所有的段落用一个新创建的div包裹起来<br><br>HTML 代码:<br><br><p>Test Paragraph.</p>

<p>jQuery 代码:</p>
<p>$(“p”).wrap(“<div class="wrap"></div>“); 段落P用div class=’wrap’包裹起来</p>
<p>结果:</p>
<p><strong>Test Paragraph.</strong></p>
<p>wrap(elem)</p>
<p>把所有匹配的元素用其他元素的结构化标记包装起来。</p>
<p>返回值jQuery</p>
<p>参数elem (Element) : 用于包装目标元素的DOM元素</p>
<p>}         示例</p>
<p>}         用ID是”content”的div将每一个段落包裹起来</p>
<p>}         HTML 代码:</p>
<p>}         </p><p>Test Paragraph.</p><div id="content"></div><p></p>
<p>}         jQuery 代码:</p>
<p>}         $(“p”).wrap(document.getElementById(‘content’));</p>
<p>}         结果:</p>
<p>}         <div id="content"><p>Test Paragraph.</p></div><div id="content"></div></p>
<p><strong>wrapAll(html)</strong></p>
<p>将所有匹配的元素用单个元素包裹起来</p>
<p>这于 ‘.wrap()’ 是不同的，’.wrap()’为每一个匹配的元素都包裹一次。 这种包装对于在文档中插入额外的结构化标记最有用，而且它不会破坏原始文档的语义品质。</p>
<p>这个函数的原理是检查提供的第一个元素并在它的代码结构中找到最上层的祖先元素－－这个祖先元素就是包装元素。</p>
<p>返回值jQuery</p>
<p>参数html (String) : TML标记代码字符串，用于动态生成元素并包装目标元素</p>
<p>示例</p>
<p>用一个生成的div将所有段落包裹起来</p>
<p>}         HTML 代码:</p>
<p>}         </p><p>Hello</p><p>cruel</p><p>World</p><p></p>
<p>}         jQuery 代码:</p>
<p>}         $(“p”).wrapAll(“<div></div>“);  //如果是wrap 则 每个段落P都被div包裹</p>
<p>}         结果:</p>
<p>}         <div><p>Hello</p><p>cruel</p><p>World</p></div></p>
<p><strong>wrapAll(elem)</strong></p>
<p>将所有匹配的元素用单个元素包裹起来</p>
<p>这于 ‘.wrap()’ 是不同的，’.wrap()’为每一个匹配的元素都包裹一次。</p>
<p>返回值jQuery</p>
<p>参数elem (Element) : 用于包装目标元素的DOM元素</p>
<p>示例</p>
<p>用一个生成的div将所有段落包裹起来</p>
<p>HTML 代码:</p>
<p>Hello</p><p>cruel</p><p>World</p>

<p>jQuery 代码:</p>
<p>$(“p”).wrapAll(document.createElement(“div”));</p>
<p>结果:</p>
<div><p>Hello</p><p>cruel</p><p>World</p></div>

<p><strong>wrapInner(html)</strong></p>
<p>将每一个匹配的元素的子内容(包括文本节点)用一个HTML结构包裹起来</p>
<p>这个函数的原理是检查提供的第一个元素（它是由所提供的HTML标记代码动态生成的），并在它的代码结构中找到最上层的祖先元素－－这个祖先元素就是包装元素。</p>
<p>返回值jQuery</p>
<p>参数html (String) : HTML标记代码字符串，用于动态生成元素并包装目标元素</p>
<p>示例</p>
<p>把所有段落内的每个子内容加粗</p>
<p>HTML 代码:</p>
<p>Hello</p><p>cruel</p><p>World</p>

<p>jQuery 代码:</p>
<p>$(“p”).wrapInner(“<b></b>“);</p>
<p>结果:</p>
<p><b>Hello</b></p><p><b>cruel</b></p><p><b>World</b></p>

<p><strong>wrapInner(elem)</strong></p>
<p>将每一个匹配的元素的子内容(包括文本节点)用DOM元素包裹起来</p>
<p>返回值jQuery</p>
<p>参数elem (Element) : 用于包装目标元素的DOM元素</p>
<p>示例</p>
<p>把所有段落内的每个子内容加粗</p>
<p>HTML 代码:</p>
<p>Hello</p><p>cruel</p><p>World</p>

<p>jQuery 代码:</p>
<p>$(“p”).wrapInner(document.createElement(“b”));</p>
<p>结果:</p>
<p><b>Hello</b></p><p><b>cruel</b></p><p><b>World</b></p>









<p><strong>2.4: **</strong>替换<strong>**</strong></p>
<p><strong>replaceWith(content)</strong></p>
<p>将所有匹配的元素替换成指定的HTML或DOM元素。</p>
<p>返回值</p>
<p>jQuery</p>
<p>参数</p>
<p>content (String, Element, jQuery) : 用于将匹配元素替换掉的内容</p>
<p>示例</p>
<p>把所有的段落标记替换成加粗的标记。</p>
<p>HTML 代码:</p>
<p>Hello</p><p>cruel</p><p>World</p>

<p>jQuery 代码:</p>
<p>$(“p”).replaceWith(“<b>Paragraph. </b>“);</p>
<p>结果:</p>
<p><b>Paragraph. </b><b>Paragraph. </b><b>Paragraph. </b></p>
<p><strong>replaceAll(selector) **</strong>去替换<strong>**</strong></p>
<p>用匹配的元素替换掉所有 selector匹配到的元素。</p>
<p>返回值jQuery</p>
<p>参数selector (选择器) : 用于查找<strong>所要被替换的元素</strong></p>
<p>示例</p>
<p>把所有的段落标记替换成加粗标记</p>
<p>HTML 代码:</p>
<p>Hello</p><p>cruel</p><p>World</p>

<p>jQuery 代码:</p>
<p>$(“<b>Paragraph. </b>“).replaceAll(“p”);  </p>
<p>结果:</p>
<p><b>Paragraph. </b><b>Paragraph. </b><b>Paragraph. </b></p>
<p><strong>2.5: **</strong>删除<strong>**</strong></p>
<p>}       <strong>empty()</strong></p>
<p>删除匹配的元素集合中所有的子节点。</p>
<p>返回值jQuery</p>
<p>示例把所有段落的子元素（包括文本节点）删除</p>
<p>HTML 代码:</p>
<p>Hello, <span>Person</span> <a href="#">and person</a></p>

<p>jQuery 代码:</p>
<p>$(“p”).empty();  <strong>删除p**</strong>中所有内容**</p>
<p>结果:</p>
<p></p>



<p><strong>remove([expr])</strong></p>
<p>从DOM中删除所有匹配的元素。</p>
<p>这个方法不会把匹配的元素从jQuery对象中删除，因而可以在将来再使用这些匹配的元素。</p>
<p>返回值jQuery</p>
<p>参数expr (String) : (可选) 用于筛选元素的jQuery表达式</p>
<p>示例从DOM中把所有段落删除</p>
<p>HTML 代码:</p>
<p>Hello</p> how are <p>you?</p>

<p>jQuery 代码:</p>
<p>$(“p”).remove(); <strong>//**</strong>移除p<strong>**标签</strong></p>
<p>结果:</p>
<p>how are</p>
<p>从DOM中把带有hello类的段落删除</p>
<p>}         HTML 代码:</p>
<p>}         </p><p class="hello">Hello</p> how are <p>you?</p><p></p>
<p>}         jQuery 代码:</p>
<p>}         $(“p”).remove(“.hello”);</p>
<p>}         结果:</p>
<p>}         how are </p><p>you?</p><p></p>
<p><strong>2.6: **</strong>复制<strong>**</strong></p>
<p><strong>clone()</strong></p>
<p>克隆匹配的DOM元素并且选中这些克隆的副本。</p>
<p>在想把DOM文档中元素的副本添加到其他位置时这个函数非常有用。</p>
<p>返回值jQuery</p>
<p>示例克隆所有b元素（并选中这些克隆的副本），然后将它们前置到所有段落中。</p>
<p>HTML 代码:</p>
<p><b>Hello</b></p><p>, how are you?</p><p></p>
<p>jQuery 代码:</p>
<p>$(“b”).clone().prependTo(“p”);  <strong>将b**</strong>标签赋值到p<strong><strong>标签中,</strong></strong>没有clone <strong>**就会直接插入到p</strong></p>
<p>结果:</p>
<p><b>Hello</b></p><p><b>Hello</b>, how are you?</p><p></p>
<hr>
<hr>
<hr>
<hr>
<hr>
<p><strong>clone(true)</strong></p>
<p>元素以及其所有的事件处理并且选中这些克隆的副本</p>
<p>在想把DOM文档中元素的副本添加到其他位置时这个函数非常有用。</p>
<p>返回值jQuery</p>
<p><strong>参数true (Boolean) : **</strong>设置为true<strong>**以便复制元素的所有事件处理</strong></p>
<p>示例</p>
<p>创建一个按钮，他可以复制自己，并且他的副本也有同样功能。</p>
<p>HTML 代码:</p>
<button>Clone Me!</button>

<p>jQuery 代码:</p>
<p>$(“button”).click(function(){<br>  $(this).clone(true).insertAfter(this);</p>
<p><strong>//**</strong>复制 <strong><strong>当前元素包含他的事件 </strong></strong>并将副本插入到当前元素前面**});</p>
<p>二、jQuery遍历与查找节点</p>
<p>Ø       过滤</p>
<p>Ø       查找</p>
<p>Ø       串联</p>
<p>1.1、jQuery过滤</p>
<p><strong>eq(index)**</strong>获取第N<strong>**个元素</strong></p>
<p>这个元素的位置是从0算起。</p>
<p>返回值jQuery</p>
<p>参数index (Integer) :元素在jQuery对象中的索引</p>
<p>示例</p>
<p>获取匹配的第二个元素</p>
<p>HTML 代码:</p>
<p> This is just a test.</p> <p> So is this</p>

<p>jQuery 代码:</p>
<p>$(“p”).eq(1)</p>
<p>结果:</p>
<p>[ </p><p> So is this</p> ]<p></p>
<p><strong>hasClass(class) **</strong>查找类**</p>
<p>检查当前的元素是否含有某个特定的类，如果有，则返回true。</p>
<p>这其实就是 is(“.” + class)。</p>
<p>返回值Boolean</p>
<p>参数class (String) : 用于匹配的类名</p>
<p>示例：给包含有某个类的元素进行一个动画。</p>
<p>HTML 代码:</p>
<div class="protected"></div><div></div>

<p>jQuery 代码:</p>
<p>$(“div”).click(function(){<br>  if ( $(this).hasClass(“protected”) )<br>    $(this)<br>      .animate({ left: -10 })<br>      .animate({ left: 10 })<br>      .animate({ left: -10 })<br>      .animate({ left: 10 })<br>      .animate({ left: 0 });<br>});</p>
<p><strong>is(expr)</strong></p>
<p>用一个表达式来检查当前选择的元素集合，如果其中至少有一个元素符合这个给定的表达式就返回true。</p>
<p>如果没有元素符合，或者表达式无效，都返回’false’. ‘filter’ 内部实际也是在调用这个函数，所以，filter()函数原有的规则在这里也适用。</p>
<p>返回值Boolean</p>
<p>参数expr (String) :用于筛选的表达式</p>
<p>示例：由于input元素的父元素是一个表单元素，所以返回true。</p>
<p>HTML 代码:</p>
 <form><input type="checkbox"></form>

<p>jQuery 代码:</p>
<p>$(“input[type=’checkbox’]”).parent().is(“form”) // parent()父元素</p>
<p>结果:</p>
<p>true</p>
<p>1.2、jQuery查找</p>
<p><strong>find(expr)</strong></p>
<p>搜索所有与指定表达式匹配的元素。这个函数是找出正在处理的元素的后代元素的好方法。</p>
<p>所有搜索都依靠jQuery表达式来完成。这个表达式可以使用CSS1-3的选择器语法来写。</p>
<p>返回值jQuery</p>
<p>参数：expr (String) :用于查找的表达式</p>
<p>示例：从所有的段落开始，进一步搜索下面的span元素。与$(“p span”)相同。</p>
<p>}         HTML 代码:</p>
<p>}         </p><p><span>Hello</span>, how are you?</p><p></p>
<p>}         jQuery 代码:</p>
<p>}         $(“p”).find(“span”)</p>
<p>}         结果:</p>
<p>}         [ <span>Hello</span> ]</p>
<p><strong>next([expr])</strong></p>
<p>取得一个包含匹配的元素集合中每一个元素<strong>紧邻的后面同辈</strong>元素的元素集合。</p>
<p>这个函数只返回后面那个紧邻的同辈元素，而不是后面<strong>所有的同辈元素（可以使用**</strong>nextAll<strong>**）。</strong>可以用一个可选的表达式进行筛选。</p>
<p>返回值jQuery</p>
<p>参数expr (String) : (可选) 用于筛选的表达式</p>
<p>}         示例找到每个段落的后面紧邻的同辈元素。</p>
<p>}         HTML 代码:</p>
<p>}         </p><p>Hello</p><p>Hello Again</p><div><span>And Again</span></div><p></p>
<p>}         jQuery 代码:</p>
<p>}         $(“p”).next()</p>
<p>}         结果:</p>
<p>}         [ </p><p>Hello Again</p>, <div><span>And Again</span></div> ]<p></p>
<p><strong>找到每个段落的后面紧邻的同辈元素中类名为selected**</strong>的元素。**</p>
<p>}         HTML 代码:</p>
<p>}         </p><p>Hello</p><p class="selected">Hello Again</p><div><span>And Again</span></div><p></p>
<p>}         jQuery 代码:</p>
<p>}         $(“p”).next(“.selected”)</p>
<p>}         结果:</p>
<p>}         [ </p><p class="selected">Hello Again</p> ]<p></p>
<p><strong>1.3**</strong>、<strong><strong>jQuery</strong></strong>串联<strong>**</strong></p>
<p>}       <strong>andSelf()</strong></p>
<p><strong>加入先前所选的加入当前元素中</strong></p>
<p><strong>对于筛选或查找后的元素，要加入先前所选元素时将会很有用。</strong></p>
<p>返回值jQuery</p>
<p>示例:选取所有div以及内部的p，并加上border类</p>
<p>HTML 代码:</p>
<div><p>First Paragraph</p><p>Second Paragraph</p></div>

<p>jQuery 代码:</p>
<p>$(“div”).find(“p”).andSelf().addClass(“border”);</p>
<p>//div中寻找段落P，和他自己（andSelf）加类class=”border”</p>
<p>结果:</p>
<div class="border"><p class="border">First Paragraph</p><p class="border">Second Paragraph</p></div>

]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.w3school.com.cn/jquery/jquery_ref_manipulation.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.w3school.com.cn/jquery/
    
    </summary>
    
      <category term="术" scheme="https://feahter.github.io/categories/%E6%9C%AF/"/>
    
    
      <category term="jQuery" scheme="https://feahter.github.io/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>jQuery 的选择器</title>
    <link href="https://feahter.github.io/2016/09/13/jQuery%20%E7%9A%84%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>https://feahter.github.io/2016/09/13/jQuery 的选择器/</id>
    <published>2016-09-13T07:42:13.000Z</published>
    <updated>2016-12-08T03:19:59.206Z</updated>
    
    <content type="html"><![CDATA[<p>jQuery 的选择器可谓之强大无比，这里简单地总结一下常用的元素查找方法 </p>
<p>$(“#myELement”)    选择id值等于myElement的元素，id值不能重复在文档中只能有一个id值是myElement所以得到的是唯一的元素<br>$(“div”)           选择所有的div标签元素，返回div元素数组<br>$(“.myClass”)      选择使用myClass类的css的所有元素<br>$(“<em>“)             选择文档中的所有的元素，可以运用多种的选择方式进行联合选择：例如$(“#myELement,div,.myclass”)<br>层叠选择器：<br>$(“form input”)         选择所有的form元素中的input元素<br>$(“#main &gt; </em>“)          选择id值为main的所有的子元素<br>$(“label + input”)     选择所有的label元素的下一个input元素节点，经测试选择器返回的是label标签后面直接跟一个input标签的所有input标签元素<br>$(“#prev ~ div”)       同胞选择器，该选择器返回的为id为prev的标签元素的所有的属于同一个父元素的div标签 </p>
<p>基本过滤选择器：<br>$(“tr:first”)               选择所有tr元素的第一个<br>$(“tr:last”)                选择所有tr元素的最后一个<br>$(“input:not(:checked) + span”)   </p>
<p>过滤掉：checked的选择器的所有的input元素 </p>
<p>$(“tr:even”)               选择所有的tr元素的第0，2，4… …个元素（注意：因为所选择的多个元素时为数组，所以序号是从0开始） </p>
<p>$(“tr:odd”)                选择所有的tr元素的第1，3，5… …个元素<br>$(“td:eq(2)”)             选择所有的td元素中序号为2的那个td元素<br>$(“td:gt(4)”)             选择td元素中序号大于4的所有td元素<br>$(“td:ll(4)”)              选择td元素中序号小于4的所有的td元素<br>$(“:header”)<br>$(“div:animated”)<br>内容过滤选择器： </p>
<p>$(“div:contains(‘John’)”) 选择所有div中含有John文本的元素<br>$(“td:empty”)           选择所有的为空（也不包括文本节点）的td元素的数组<br>$(“div:has(p)”)        选择所有含有p标签的div元素<br>$(“td:parent”)          选择所有的以td为父节点的元素数组<br>可视化过滤选择器： </p>
<p>$(“div:hidden”)        选择所有的被hidden的div元素<br>$(“div:visible”)        选择所有的可视化的div元素<br>属性过滤选择器： </p>
<p>$(“div[id]”)              选择所有含有id属性的div元素<br>$(“input[name=’newsletter’]”)    选择所有的name属性等于’newsletter’的input元素 </p>
<p>$(“input[name!=’newsletter’]”) 选择所有的name属性不等于’newsletter’的input元素 </p>
<p>$(“input[name^=’news’]”)         选择所有的name属性以’news’开头的input元素<br>$(“input[name$=’news’]”)         选择所有的name属性以’news’结尾的input元素<br>$(“input[name*=’man’]”)          选择所有的name属性包含’news’的input元素 </p>
<p>$(“input[id][name$=’man’]”)    可以使用多个属性进行联合选择，该选择器是得到所有的含有id属性并且那么属性以man结尾的元素 </p>
<p>子元素过滤选择器： </p>
<p>$(“ul li:nth-child(2)”),$(“ul li:nth-child(odd)”),$(“ul li:nth-child(3n + 1)”) </p>
<p>$(“div span:first-child”)          返回所有的div元素的第一个子节点的数组<br>$(“div span:last-child”)           返回所有的div元素的最后一个节点的数组<br>$(“div button:only-child”)       返回所有的div中只有唯一一个子节点的所有子节点的数组 </p>
<p>表单元素选择器： </p>
<p>$(“:input”)                  选择所有的表单输入元素，包括input, textarea, select 和 button </p>
<p>$(“:text”)                     选择所有的text input元素<br>$(“:password”)           选择所有的password input元素<br>$(“:radio”)                   选择所有的radio input元素<br>$(“:checkbox”)            选择所有的checkbox input元素<br>$(“:submit”)               选择所有的submit input元素<br>$(“:image”)                 选择所有的image input元素<br>$(“:reset”)                   选择所有的reset input元素<br>$(“:button”)                选择所有的button input元素<br>$(“:file”)                     选择所有的file input元素<br>$(“:hidden”)               选择所有类型为hidden的input元素或表单的隐藏域 </p>
<p>表单元素过滤选择器： </p>
<p>$(“:enabled”)             选择所有的可操作的表单元素<br>$(“:disabled”)            选择所有的不可操作的表单元素<br>$(“:checked”)            选择所有的被checked的表单元素<br>$(“select option:selected”) 选择所有的select 的子元素中被selected的元素 </p>
<p>选取一个 name 为”S_03_22″的input text框的上一个td的text值<br>$(”input[@ name =S_03_22]“).parent().prev().text() </p>
<p>名字以”S_”开始，并且不是以”_R”结尾的值</p>
<p>$(“ input[@ name ^=’ S_’]”).not(“[@ <code>name $=&#39;_R</code>‘]”) </p>
<p>一个名为 radio_01的radio所选的值<br>$(”input[@ name =radio_01][@checked]“).val(); </p>
<p>$(“A B”) 查找A元素下面的所有子节点，包括非直接子节点<br>$(“A&gt;B”) 查找A元素下面的直接子节点<br>$(“A+B”) 查找A元素后面的兄弟节点，包括非直接子节点<br>$(“A~B”) 查找A元素后面的兄弟节点，不包括非直接子节点 </p>
<ol>
<li>$(“A B”) 查找A元素下面的所有子节点，包括非直接子节点 </li>
</ol>
<p>例子：找到表单中所有的 input 元素 </p>
<p>HTML 代码: </p>
<p><form></form></p>
<p><label>Name:</label></p>
<p><input name="name"></p>
<p><fieldset><br>      <label>Newsletter:</label><br>      <input name="newsletter"><br></fieldset><br></p>
<p><input name="none"><br>jQuery 代码: </p>
<p>$(“form input”)<br>结果: </p>
<p>[ <input name="name">, <input name="newsletter"> ] </p>
<ol>
<li>$(“A&gt;B”) 查找A元素下面的直接子节点<br>例子：匹配表单中所有的子级input元素。 </li>
</ol>
<p>HTML 代码: </p>
<p><form></form></p>
<p><label>Name:</label></p>
<p><input name="name"></p>
<p><fieldset><br>      <label>Newsletter:</label><br>      <input name="newsletter"><br></fieldset><br></p>
<p><input name="none"><br>jQuery 代码: </p>
<p>$(“form &gt; input”)<br>结果: </p>
<p>[ <input name="name"> ] </p>
<ol>
<li>$(“A+B”) 查找A元素后面的兄弟节点，包括非直接子节点<br>例子：匹配所有跟在 label 后面的 input 元素 </li>
</ol>
<p>HTML 代码: </p>
<p><form></form></p>
<p><label>Name:</label></p>
<p><input name="name"></p>
<p><fieldset><br>      <label>Newsletter:</label><br>      <input name="newsletter"><br></fieldset><br></p>
<p><input name="none"><br>jQuery 代码: </p>
<p>$(“label + input”)<br>结果: </p>
<p>[ <input name="name">, <input name="newsletter"> ] </p>
<ol>
<li>$(“A~B”) 查找A元素后面的兄弟节点，不包括非直接子节点<br>例子：找到所有与表单同辈的 input 元素 </li>
</ol>
<p>HTML 代码: </p>
<p><form></form></p>
<p><label>Name:</label></p>
<p><input name="name"></p>
<p><fieldset><br>      <label>Newsletter:</label><br>      <input name="newsletter"><br></fieldset><br></p>
<p><input name="none"><br>jQuery 代码: </p>
<p>$(“form ~ input”)<br>结果: </p>
<p>[ <input name="none"> ] </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jQuery 的选择器可谓之强大无比，这里简单地总结一下常用的元素查找方法 &lt;/p&gt;
&lt;p&gt;$(“#myELement”)    选择id值等于myElement的元素，id值不能重复在文档中只能有一个id值是myElement所以得到的是唯一的元素&lt;br&gt;$(“div”)
    
    </summary>
    
      <category term="术" scheme="https://feahter.github.io/categories/%E6%9C%AF/"/>
    
    
      <category term="jQuery" scheme="https://feahter.github.io/tags/jQuery/"/>
    
  </entry>
  
</feed>
